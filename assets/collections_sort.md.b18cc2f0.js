import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.16715cb7.js";const h=JSON.parse('{"title":"sort","description":"","frontmatter":{},"headers":[],"relativePath":"collections/sort.md","filePath":"collections/sort.md","lastUpdated":1697175554000}'),o={name:"collections/sort.md"},p=l(`<h1 id="sort" tabindex="-1">sort <a class="header-anchor" href="#sort" aria-label="Permalink to &quot;sort&quot;">​</a></h1><p>对集合进行排序。</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">collect</span><span style="color:#E1E4E8;">([</span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">7</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">9</span><span style="color:#E1E4E8;">])</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">sort</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// [2 =&gt; 3, 0 =&gt; 5, 1 =&gt; 7, 3 =&gt; 9]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">collect</span><span style="color:#24292E;">([</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">7</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">9</span><span style="color:#24292E;">])</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">sort</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// [2 =&gt; 3, 0 =&gt; 5, 1 =&gt; 7, 3 =&gt; 9]</span></span></code></pre></div><p>使用 <code>sort</code> 对集合排序后，新返回的集合会保留原来集合的 <code>key</code>。</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">collect</span><span style="color:#E1E4E8;">([</span><span style="color:#9ECBFF;">&#39;A55&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;B54&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;B22&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;A11&#39;</span><span style="color:#E1E4E8;">])</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">sort</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// [3 =&gt; &#39;A11&#39;, 0 =&gt; &#39;A55&#39;, 2 =&gt; &#39;B22&#39;, 1 =&gt; &#39;B54]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">collect</span><span style="color:#24292E;">([</span><span style="color:#032F62;">&#39;A55&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;B54&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;B22&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;A11&#39;</span><span style="color:#24292E;">])</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">sort</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// [3 =&gt; &#39;A11&#39;, 0 =&gt; &#39;A55&#39;, 2 =&gt; &#39;B22&#39;, 1 =&gt; &#39;B54]</span></span></code></pre></div><p>调用 <code>sort</code> 方法不传递任何参数默认排序使用值的asci编码进行排序。</p><h2 id="自定义回调" tabindex="-1">自定义回调 <a class="header-anchor" href="#自定义回调" aria-label="Permalink to &quot;自定义回调&quot;">​</a></h2><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">collect</span><span style="color:#E1E4E8;">([</span><span style="color:#9ECBFF;">&#39;A-55&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;B54&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;B-22&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;A11&#39;</span><span style="color:#E1E4E8;">])</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">sort</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">fn</span><span style="color:#E1E4E8;"> ($a, $b) =&gt;  </span><span style="color:#79B8FF;">str_replace</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;-&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;&#39;</span><span style="color:#E1E4E8;">, $a) </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> $b </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// [3 =&gt; &quot;A11&quot;, 0 =&gt; &quot;A55&quot;, 2 =&gt; &quot;B22&quot;, 1 =&gt; &quot;B54&quot;]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">collect</span><span style="color:#24292E;">([</span><span style="color:#032F62;">&#39;A-55&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;B54&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;B-22&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;A11&#39;</span><span style="color:#24292E;">])</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">sort</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">fn</span><span style="color:#24292E;"> ($a, $b) =&gt;  </span><span style="color:#005CC5;">str_replace</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;-&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">, $a) </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> $b </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// [3 =&gt; &quot;A11&quot;, 0 =&gt; &quot;A55&quot;, 2 =&gt; &quot;B22&quot;, 1 =&gt; &quot;B54&quot;]</span></span></code></pre></div><p>如果有更高级的排序需求，你可以传入回调来用你自己的算法进行排序。请参阅 PHP 文档的 <a href="http://php.net/manual/zh/function.usort.php#refsect1-function.usort-parameters" target="_blank" rel="noreferrer">usort</a>，这是集合的 <code>sort</code> 方法在底层所调用的。</p><p>如果要对嵌套数组或对象的集合进行排序，参考 <a href="./sortBy.html">sortBy</a> 和 <a href="./sortByDesc.html">sortByDesc</a> 方法。</p><h2 id="相关方法" tabindex="-1">相关方法 <a class="header-anchor" href="#相关方法" aria-label="Permalink to &quot;相关方法&quot;">​</a></h2><ul><li><a href="./sortDesc.html">sortDesc</a></li><li><a href="./sortBy.html">sortBy</a></li><li><a href="./sortByDesc.html">sortByDesc</a></li></ul>`,12),t=[p];function e(c,r,y,E,i,d){return a(),n("div",null,t)}const g=s(o,[["render",e]]);export{h as __pageData,g as default};
