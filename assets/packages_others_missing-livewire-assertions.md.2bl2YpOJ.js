import{_ as s,c as i,o as e,a2 as a}from"./chunks/framework.2-334A9N.js";const u=JSON.parse('{"title":"Livewire 缺少的测试断言","description":"","frontmatter":{},"headers":[],"relativePath":"packages/others/missing-livewire-assertions.md","filePath":"packages/others/missing-livewire-assertions.md","lastUpdated":1707026267000}'),t={name:"packages/others/missing-livewire-assertions.md"},r=a(`<h1 id="livewire-缺少的测试断言" tabindex="-1">Livewire 缺少的测试断言 <a class="header-anchor" href="#livewire-缺少的测试断言" aria-label="Permalink to &quot;Livewire 缺少的测试断言&quot;">​</a></h1><p><a href="https://livewire.laravel.com/docs/testing#all-available-testing-utilities" target="_blank" rel="noreferrer">Livewire</a> 提供了很多开箱即用的测试断言，但是一些需要测试视图属性、视图方法、表单方法或 Javascript 事件的时候就可以通过 <a href="https://github.com/christophrumpel/missing-livewire-assertions" target="_blank" rel="noreferrer">christophrumpel/missing-livewire-assertions</a>扩展进行测试。</p><h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h2><p>通过 Composer 安装该软件包：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">composer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> require</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> christophrumpel/missing-livewire-assertions</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --dev</span></span></code></pre></div><h2 id="可用方法" tabindex="-1">可用方法 <a class="header-anchor" href="#可用方法" aria-label="Permalink to &quot;可用方法&quot;">​</a></h2><p>安装完成后新增的断言会自动添加，因此可以在测试用例中立即使用它们。</p><ul><li><a href="https://github.com/christophrumpel/missing-livewire-assertions/blob/production/src/CustomLivewireAssertionsMixin.php#L16" target="_blank" rel="noreferrer">assertPropertyWired</a></li><li><a href="https://github.com/christophrumpel/missing-livewire-assertions/blob/production/src/CustomLivewireAssertionsMixin.php#L31" target="_blank" rel="noreferrer">assertPropertyNotWired</a></li><li><a href="https://github.com/christophrumpel/missing-livewire-assertions/blob/production/src/CustomLivewireAssertionsMixin.php#L46" target="_blank" rel="noreferrer">assertPropertyEntangled</a></li><li><a href="https://github.com/christophrumpel/missing-livewire-assertions/blob/production/src/CustomLivewireAssertionsMixin.php#L70" target="_blank" rel="noreferrer">assertPropertyNotEntangled</a></li><li><a href="https://github.com/christophrumpel/missing-livewire-assertions/blob/production/src/CustomLivewireAssertionsMixin.php#L94" target="_blank" rel="noreferrer">assertMethodWired</a></li><li><a href="https://github.com/christophrumpel/missing-livewire-assertions/blob/production/src/CustomLivewireAssertionsMixin.php#L109" target="_blank" rel="noreferrer">assertMethodNotWired</a></li><li><a href="https://github.com/christophrumpel/missing-livewire-assertions/blob/production/src/CustomLivewireAssertionsMixin.php#L124" target="_blank" rel="noreferrer">assertMethodWiredToForm</a></li><li><a href="https://github.com/christophrumpel/missing-livewire-assertions/blob/production/src/CustomLivewireAssertionsMixin.php#L139" target="_blank" rel="noreferrer">assertMethodNotWiredToForm</a></li><li><a href="https://github.com/christophrumpel/missing-livewire-assertions/blob/production/src/CustomLivewireAssertionsMixin.php#L154" target="_blank" rel="noreferrer">assertMethodWiredToEvent</a></li><li><a href="https://github.com/christophrumpel/missing-livewire-assertions/blob/production/src/CustomLivewireAssertionsMixin.php#L169" target="_blank" rel="noreferrer">assertMethodNotWiredToEvent</a></li><li><a href="https://github.com/christophrumpel/missing-livewire-assertions/blob/production/src/CustomLivewireAssertionsMixin.php#L184" target="_blank" rel="noreferrer">assertMethodWiredToEventWithoutModifiers</a></li><li><a href="https://github.com/christophrumpel/missing-livewire-assertions/blob/production/src/CustomLivewireAssertionsMixin.php#L214" target="_blank" rel="noreferrer">assertContainsLivewireComponent</a></li><li><a href="https://github.com/christophrumpel/missing-livewire-assertions/blob/production/src/CustomLivewireAssertionsMixin.php#L235" target="_blank" rel="noreferrer">assertDoesNotContainLivewireComponent</a></li><li><a href="https://github.com/christophrumpel/missing-livewire-assertions/blob/production/src/CustomLivewireAssertionsMixin.php#L256" target="_blank" rel="noreferrer">assertContainsBladeComponent</a></li><li><a href="https://github.com/christophrumpel/missing-livewire-assertions/blob/production/src/CustomLivewireAssertionsMixin.php#L274" target="_blank" rel="noreferrer">assertDoesNotContainBladeComponent</a></li><li><a href="https://github.com/christophrumpel/missing-livewire-assertions/blob/production/src/CustomLivewireAssertionsMixin.php#L292" target="_blank" rel="noreferrer">assertSeeBefore</a></li><li><a href="https://github.com/christophrumpel/missing-livewire-assertions/blob/production/src/CustomLivewireAssertionsMixin.php#L308" target="_blank" rel="noreferrer">assertDoNotSeeBefore</a></li><li><a href="https://github.com/christophrumpel/missing-livewire-assertions/blob/production/src/CustomLivewireAssertionsMixin.php#L324" target="_blank" rel="noreferrer">assertFileDownloadedContains</a></li><li><a href="https://github.com/christophrumpel/missing-livewire-assertions/blob/production/src/CustomLivewireAssertionsMixin.php#L341" target="_blank" rel="noreferrer">assertFileDownloadedNotContains</a></li></ul><h2 id="检查-html" tabindex="-1">检查 HTML <a class="header-anchor" href="#检查-html" aria-label="Permalink to &quot;检查 HTML&quot;">​</a></h2><h3 id="属性是否使用" tabindex="-1">属性是否使用 <a class="header-anchor" href="#属性是否使用" aria-label="Permalink to &quot;属性是否使用&quot;">​</a></h3><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Livewire</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">test</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">FeedbackForm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    -&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">assertPropertyWired</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;email&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>测试用例在组件的视图文件中查找像 <code>wire:model=&quot;email&quot;</code> 的字符串。</p><p>它还检测诸如 <code>wire:model.live=&quot;email&quot;</code>、<code>wire:model.lazy=&quot;email&quot;</code>、<code>wire:model.debounce=&quot;email&quot;</code>、<code>wire:model.lazy.10s=&quot;email&quot;</code> 或 <code>wire:model.debounce.500ms=&quot;email&quot;</code> 的字符串。</p><h3 id="方法是否使用" tabindex="-1">方法是否使用 <a class="header-anchor" href="#方法是否使用" aria-label="Permalink to &quot;方法是否使用&quot;">​</a></h3><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Livewire</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">test</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">FeedbackForm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    -&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">assertMethodWired</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;submit&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>它会在组件的视图文件中查找类似 <code>wire:click=&quot;submit&quot;</code> 或者 <code>wire:click.prevent=&quot;submit&quot;</code> 的字符串。</p><h3 id="魔术动作是否使用" tabindex="-1">魔术动作是否使用 <a class="header-anchor" href="#魔术动作是否使用" aria-label="Permalink to &quot;魔术动作是否使用&quot;">​</a></h3><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Livewire</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">test</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">FeedbackForm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    -&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">assertMethodWired</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;$toggle(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">sortAsc</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>它会查找像 <code>wire:click=&quot;$refresh&quot;</code>、<code>wire:click=&quot;$toggle(&#39;sortAsc&#39;)</code>、<code>$dispatch(&#39;post-created&#39;)</code> 类似的字符串，以及所有其它的<a href="https://livewire.laravel.com/docs/actions#magic-actions" target="_blank" rel="noreferrer">魔术动作</a>。</p><blockquote><p><strong>注意：</strong> 测试魔法动作时，必须转义单引号，如上所示。</p></blockquote><h3 id="方法在表单中使用" tabindex="-1">方法在表单中使用 <a class="header-anchor" href="#方法在表单中使用" aria-label="Permalink to &quot;方法在表单中使用&quot;">​</a></h3><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Livewire</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">test</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">FeedbackForm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    -&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">assertMethodWiredToForm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;upload&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>它会在组件的视图文件中查找类似 <code>wire:submit=&quot;upload&quot;</code> 或者 <code>wire:submit.prevent=&quot;upload&quot;</code> 的字符串。</p><h3 id="所有-js-事件" tabindex="-1">所有 js 事件 <a class="header-anchor" href="#所有-js-事件" aria-label="Permalink to &quot;所有 js 事件&quot;">​</a></h3><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Livewire</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">test</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">FeedbackForm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    -&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">assertMethodWiredToEvent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;setValue&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;change&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>它会在组件的视图文件中查找像 <code>wire:change=&quot;setValue&quot;</code> 或 <code>wire:change.debounce.150ms=&quot;setValue&quot;</code> 这样的字符串。</p><h3 id="不匹配修饰符的-js-事件" tabindex="-1">不匹配修饰符的 js 事件 <a class="header-anchor" href="#不匹配修饰符的-js-事件" aria-label="Permalink to &quot;不匹配修饰符的 js 事件&quot;">​</a></h3><p>通过 <code>assertMethodWiredToEventWithoutModifiers</code> 方法还可以在没有任何附加修饰符的情况下检查操作：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Livewire::test(FeedbackForm::class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    -&gt;assertMethodWiredToEventWithoutModifiers(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&#39;setValue&#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;change&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>上面测试用例将匹配 <code>wire:change=&quot;setValue&quot;</code> 而不匹配 <code>wire:change.debounce.150ms=&quot;setValue&quot;</code>。</p><p>如果需要匹配仅仅修饰符的 js 事件，可以使用 <code>assertMethodWiredToEventWithModifiers</code> 方法：</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Livewire</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">test</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">FeedbackForm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    -&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">assertMethodWiredToEventWithoutModifiers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;setValue&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;change.debounce.150ms&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h3 id="是否包含-blade-组件" tabindex="-1">是否包含 Blade 组件 <a class="header-anchor" href="#是否包含-blade-组件" aria-label="Permalink to &quot;是否包含 Blade 组件&quot;">​</a></h3><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">use</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> App\\View\\Components\\Button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Livewire</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">test</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">FeedbackForm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    -&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">assertContainsBladeComponent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Button</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    -&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">assertContainsBladeComponent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;button&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>上面测试用例将匹配 <code>&lt;x-button</code> 字符串。</p><h3 id="字符串出现在另一字符串前" tabindex="-1">字符串出现在另一字符串前 <a class="header-anchor" href="#字符串出现在另一字符串前" aria-label="Permalink to &quot;字符串出现在另一字符串前&quot;">​</a></h3><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Livewire</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">test</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">FeedbackForm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    -&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">assertSeeBefore</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;first string&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;second string&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div>`,37),h=[r];function n(l,p,o,k,d,c){return e(),i("div",null,h)}const E=s(t,[["render",n]]);export{u as __pageData,E as default};
