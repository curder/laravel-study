import{r as a,o as e,c as p,b as t,a as c,w as o,F as l,e as u,d as n}from"./app.c26b4df5.js";import{_ as i}from"./plugin-vue_export-helper.21dcd24c.js";const r={},m=u(`<h1 id="isempty" tabindex="-1"><a class="header-anchor" href="#isempty" aria-hidden="true">#</a> isEmpty</h1><p>\u96C6\u5408\u662F\u7A7A\u7684\uFF0C<code>isEmpty</code> \u65B9\u6CD5\u8FD4\u56DE <code>true</code>\uFF0C\u5426\u5219\u8FD4\u56DE <code>false</code>\u3002</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token function">collect</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// output</span>
<span class="token doc-comment comment">/**
=&gt; true
 */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token function">collect</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// output</span>
<span class="token doc-comment comment">/**
=&gt; false
 */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><code>isEmpty</code> \u65B9\u6CD5\u4E0D\u4F1A\u68C0\u67E5\u96C6\u5408\u4E2D\u7684\u5143\u7D20\u7684\u7C7B\u578B\uFF0C\u4EC5\u4EC5\u68C0\u67E5\u96C6\u5408\u662F\u5426\u4E3A\u7A7A\u3002\u6BD4\u5982\uFF1A\u96C6\u5408\u4E2D\u6709\u4E14\u4EC5\u6709 <code>null</code>, <code>&#39;&#39;</code>, <code>0</code>, <code>false</code> \u7B49\u5143\u7D20\u7684\u65F6\u5019\uFF0C\u8FD4\u56DE\u503C\u4F9D\u7136\u662F <code>true</code>\u3002</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token function">collect</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// output</span>
<span class="token doc-comment comment">/**
=&gt; false
 */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token function">collect</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token constant">null</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// output</span>
<span class="token doc-comment comment">/**
=&gt; false
 */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div>`,7),d=n("\u4E0E isEmpty \u76F8\u53CD\u64CD\u4F5C\u7684\u65B9\u6CD5\u662F "),b=n("isNotEmpty"),k=n(" \u65B9\u6CD5\u3002");function h(g,f){const s=a("RouterLink");return e(),p(l,null,[m,t("p",null,[d,c(s,{to:"/collections/isNotEmpty.html"},{default:o(()=>[b]),_:1}),k])],64)}var y=i(r,[["render",h]]);export{y as default};
