import{_ as s,o as a,c as n,Q as p}from"./chunks/framework.16715cb7.js";const g=JSON.parse('{"title":"Migrations 迁移","description":"","frontmatter":{},"headers":[],"relativePath":"partials/migrations.md","filePath":"partials/migrations.md","lastUpdated":1700101356000}'),l={name:"partials/migrations.md"},o=p(`<h1 id="migrations-迁移" tabindex="-1">Migrations 迁移 <a class="header-anchor" href="#migrations-迁移" aria-label="Permalink to &quot;Migrations 迁移&quot;">​</a></h1><h2 id="迁移顺序" tabindex="-1">迁移顺序 <a class="header-anchor" href="#迁移顺序" aria-label="Permalink to &quot;迁移顺序&quot;">​</a></h2><p>使用命令 <code>php artisan make:migration create_posts_table --table=posts</code> 可以快速创建迁移文件，创建的迁移文件名有一个特点，就是以时间命名的。</p><p>如果想更改数据库迁移的顺序，只需重命名文件的时间戳。</p><p>例如从 <strong><code>2018_08_04_070443_create_posts_table.php</code></strong> 到 <strong><code>2018_07_04_070443_create_posts_table.php</code></strong>（从 <strong><code>2018_08_04</code></strong> 更改为 <strong><code>2018_07_04</code></strong>）</p><h2 id="具有时区的迁移字段" tabindex="-1">具有时区的迁移字段 <a class="header-anchor" href="#具有时区的迁移字段" aria-label="Permalink to &quot;具有时区的迁移字段&quot;">​</a></h2><p>在迁移中不仅有 <code>timestamps()</code>，还有用于时区的 <code>timestampsTz()</code>。</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">Schema</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;employees&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">Blueprint</span><span style="color:#E1E4E8;"> $table) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    $table</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">increments</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;id&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    $table</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">string</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;name&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    $table</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">string</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;email&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    $table</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">timestampsTz</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">Schema</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">create</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;employees&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">Blueprint</span><span style="color:#24292E;"> $table) {</span></span>
<span class="line"><span style="color:#24292E;">    $table</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">increments</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;id&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    $table</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">string</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;name&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    $table</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">string</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;email&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    $table</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">timestampsTz</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><p>此外，还有 <code>dateTimeTz()</code>、<code>timeTz()</code>、<code>timestampTz()</code>、<code>softDeletesTz()</code> 列。</p><h2 id="默认时间戳" tabindex="-1">默认时间戳 <a class="header-anchor" href="#默认时间戳" aria-label="Permalink to &quot;默认时间戳&quot;">​</a></h2><p>创建迁移时，可以使用带有选项 <code>useCurrent()</code> 和 <code>useCurrentOnUpdate()</code> 的 <code>timestamp()</code> 列类型，它将把 <code>CURRENT_TIMESTAMP</code> 设置为默认值。</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">$table</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">timestamp</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;created_at&#39;</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">useCurrent</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">$table</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">timestamp</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;updated_at&#39;</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">useCurrentOnUpdate</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">$table</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">timestamp</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;created_at&#39;</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">useCurrent</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">$table</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">timestamp</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;updated_at&#39;</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">useCurrentOnUpdate</span><span style="color:#24292E;">();</span></span></code></pre></div><h2 id="更多数据库迁移列类型" tabindex="-1">更多数据库迁移列类型 <a class="header-anchor" href="#更多数据库迁移列类型" aria-label="Permalink to &quot;更多数据库迁移列类型&quot;">​</a></h2><p>有一些有趣的迁移列类型，以下是一些示例。</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">$table</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">uuid</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;id&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">$table</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">geometry</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;positions&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">$table</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">ipAddress</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;visitor&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">$table</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">macAddress</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;device&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">$table</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">point</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;position&#39;</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">$table</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">uuid</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;id&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">$table</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">geometry</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;positions&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">$table</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">ipAddress</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;visitor&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">$table</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">macAddress</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;device&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">$table</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">point</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;position&#39;</span><span style="color:#24292E;">);</span></span></code></pre></div><p>请参阅<a href="https://laravel.com/docs/master/migrations#available-column-types" target="_blank" rel="noreferrer">官方文档</a>中的所有列类型。</p>`,16),e=[o];function t(c,r,y,E,i,d){return a(),n("div",null,e)}const h=s(l,[["render",t]]);export{g as __pageData,h as default};
