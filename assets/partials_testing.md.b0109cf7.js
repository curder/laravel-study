import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.16715cb7.js";const u=JSON.parse('{"title":"Testing 测试","description":"","frontmatter":{},"headers":[],"relativePath":"partials/testing.md","filePath":"partials/testing.md","lastUpdated":1700557854000}'),p={name:"partials/testing.md"},o=l(`<h1 id="testing-测试" tabindex="-1">Testing 测试 <a class="header-anchor" href="#testing-测试" aria-label="Permalink to &quot;Testing 测试&quot;">​</a></h1><h2 id="页面响应-http-response" tabindex="-1">页面响应 Http response <a class="header-anchor" href="#页面响应-http-response" aria-label="Permalink to &quot;页面响应 Http response&quot;">​</a></h2><h3 id="响应状态-status" tabindex="-1">响应状态 Status <a class="header-anchor" href="#响应状态-status" aria-label="Permalink to &quot;响应状态 Status&quot;">​</a></h3><p>测试页面响应是最简单的测试之一，尽管如此，它仍然非常有用。</p><p>它确保页面响应正确的 HTTP 状态代码，主要是 200 响应。</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">it</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;gives back a successful response for index page&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> () {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;/&#39;</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">assertOk</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">it</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;gives back a successful response for index page&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;/&#39;</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">assertOk</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><p>这是一个简单的测试，但了解您的主页不会抛出错误至关重要。</p><p>可以在<a href="https://laravel.com/docs/master/http-tests#response-assertions" target="_blank" rel="noreferrer">官网</a>了解更多有关测试页面响应的信息。</p><h3 id="响应内容-body" tabindex="-1">响应内容 Body <a class="header-anchor" href="#响应内容-body" aria-label="Permalink to &quot;响应内容 Body&quot;">​</a></h3><p>在测试响应时，可能希望检查响应文本是否包含特定的文本。</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">it</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;lists products&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> () {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Arrange</span></span>
<span class="line"><span style="color:#E1E4E8;">    $firstProduct </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Product</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">factory</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    $secondProduct </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Product</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">factory</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Act &amp; Assert</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;/some-page&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">assertOk</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">assertSeeTextInOrder</span><span style="color:#E1E4E8;">([</span></span>
<span class="line"><span style="color:#E1E4E8;">            $firstProduct</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">title,</span></span>
<span class="line"><span style="color:#E1E4E8;">            $secondProduct</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">title,</span></span>
<span class="line"><span style="color:#E1E4E8;">        ]);</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">it</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;lists products&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Arrange</span></span>
<span class="line"><span style="color:#24292E;">    $firstProduct </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Product</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">factory</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">create</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    $secondProduct </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Product</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">factory</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">create</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Act &amp; Assert</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;/some-page&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">assertOk</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">assertSeeTextInOrder</span><span style="color:#24292E;">([</span></span>
<span class="line"><span style="color:#24292E;">            $firstProduct</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">title,</span></span>
<span class="line"><span style="color:#24292E;">            $secondProduct</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">title,</span></span>
<span class="line"><span style="color:#24292E;">        ]);</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><p>在这里，确保在页面上看到我们的产品名，如果从数据库加载产品并确保显示它们，这非常有用。</p><p>在这里你也可以更具体的添加对限定条件进行测试，比如当你只想展示 <code>released</code> 产品时。</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-I5UBe" id="tab-kTIQ8k6" checked="checked"><label for="tab-kTIQ8k6">test</label><input type="radio" name="group-I5UBe" id="tab-V1XAIYu"><label for="tab-V1XAIYu">model</label></div><div class="blocks"><div class="language-php vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark has-diff vp-code-dark"><code><span class="line"><span style="color:#B392F0;">it</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;lists released products&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> () {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Arrange</span></span>
<span class="line"><span style="color:#E1E4E8;">    $releasedProduct </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Product</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">factory</span><span style="color:#E1E4E8;">()</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">released</span><span style="color:#E1E4E8;">() </span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span></span>
<span class="line"><span style="color:#E1E4E8;">    $draftProduct </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Product</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">factory</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Act &amp; Assert</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;/&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">assertOk</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">assertSeeText</span><span style="color:#E1E4E8;">($releasedProduct</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">title)</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">assertDontSeeText</span><span style="color:#E1E4E8;">($draftProduct</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">title);</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light has-diff vp-code-light"><code><span class="line"><span style="color:#6F42C1;">it</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;lists released products&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Arrange</span></span>
<span class="line"><span style="color:#24292E;">    $releasedProduct </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Product</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">factory</span><span style="color:#24292E;">()</span></span>
<span class="line diff add"><span style="color:#24292E;">        </span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">released</span><span style="color:#24292E;">() </span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">create</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        </span></span>
<span class="line"><span style="color:#24292E;">    $draftProduct </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Product</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">factory</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">create</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Act &amp; Assert</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;/&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">assertOk</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">assertSeeText</span><span style="color:#24292E;">($releasedProduct</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">title)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">assertDontSeeText</span><span style="color:#24292E;">($draftProduct</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">title);</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// App\\Models\\Course.php</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">scopeReleased</span><span style="color:#E1E4E8;">($query) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> $query</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">where</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;released_at&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;&gt;=&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#B392F0;">now</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// App\\Models\\Course.php</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">scopeReleased</span><span style="color:#24292E;">($query) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> $query</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">where</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;released_at&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;&gt;=&#39;</span><span style="color:#24292E;">, </span><span style="color:#6F42C1;">now</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div></div></div><p>当测试测试未显示的内容，这很有帮助，但当页面上只有静态文本，则此测试不会有太大帮助。</p><p>可以在<a href="https://laravel.com/docs/master/http-tests#response-assertions" target="_blank" rel="noreferrer">官网</a>了解更多有关测试页面响应的信息。</p><h3 id="响应视图-view" tabindex="-1">响应视图 View <a class="header-anchor" href="#响应视图-view" aria-label="Permalink to &quot;响应视图 View&quot;">​</a></h3><p>除了测试响应状态和文本之外，还可以测试返回的视图。</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark has-diff vp-code-dark"><code><span class="line"><span style="color:#B392F0;">it</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;returns correct view&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Act &amp; Assert</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;/&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">assertOk</span><span style="color:#E1E4E8;">()</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">assertViewIs</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;index&#39;</span><span style="color:#E1E4E8;">); </span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light has-diff vp-code-light"><code><span class="line"><span style="color:#6F42C1;">it</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;returns correct view&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Act &amp; Assert</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;/&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">assertOk</span><span style="color:#24292E;">()</span></span>
<span class="line diff add"><span style="color:#24292E;">        </span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">assertViewIs</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;index&#39;</span><span style="color:#24292E;">); </span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><p>可以更进一步并测试传递到视图的数据。</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-xtwmf" id="tab-z4iCjuL" checked="checked"><label for="tab-z4iCjuL">assertViewHas 方法</label><input type="radio" name="group-xtwmf" id="tab-r-FmI5b"><label for="tab-r-FmI5b">viewData 方法</label></div><div class="blocks"><div class="language-php vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark has-diff vp-code-dark"><code><span class="line"><span style="color:#B392F0;">it</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;returns correct view&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Act &amp; Assert</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;/&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">assertOk</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">assertViewIs</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;index&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">assertViewHas</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;products&#39;</span><span style="color:#E1E4E8;">); </span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light has-diff vp-code-light"><code><span class="line"><span style="color:#6F42C1;">it</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;returns correct view&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Act &amp; Assert</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;/&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">assertOk</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">assertViewIs</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;index&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line diff add"><span style="color:#24292E;">        </span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">assertViewHas</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;products&#39;</span><span style="color:#24292E;">); </span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">it</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;has the correct value&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    $response </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;/some-route&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">expect</span><span style="color:#E1E4E8;">($response</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">viewData</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;name&#39;</span><span style="color:#E1E4E8;">))</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">toEqual</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;John Doe&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">it</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;contains a given record&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    $response </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;/some-route&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">expect</span><span style="color:#E1E4E8;">($response</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">viewData</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;user&#39;</span><span style="color:#E1E4E8;">))</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">toContain</span><span style="color:#E1E4E8;">($userA);</span></span>
<span class="line"><span style="color:#E1E4E8;">});    </span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">it</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;returns the correct amount of records&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    $response </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;/some-route&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">expect</span><span style="color:#E1E4E8;">($response</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">viewData</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;users&#39;</span><span style="color:#E1E4E8;">))</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">toHaveCount</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">it</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;has the correct value&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    $response </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;/some-route&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">expect</span><span style="color:#24292E;">($response</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">viewData</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;name&#39;</span><span style="color:#24292E;">))</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">toEqual</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;John Doe&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">it</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;contains a given record&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    $response </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;/some-route&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">expect</span><span style="color:#24292E;">($response</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">viewData</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;user&#39;</span><span style="color:#24292E;">))</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">toContain</span><span style="color:#24292E;">($userA);</span></span>
<span class="line"><span style="color:#24292E;">});    </span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">it</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;returns the correct amount of records&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    $response </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;/some-route&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">expect</span><span style="color:#24292E;">($response</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">viewData</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;users&#39;</span><span style="color:#24292E;">))</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">toHaveCount</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div></div></div><p>可以在<a href="https://laravel.com/docs/master/http-tests#response-assertions" target="_blank" rel="noreferrer">官网</a>了解更多有关测试页面响应的信息。</p><h3 id="响应-json" tabindex="-1">响应 Json <a class="header-anchor" href="#响应-json" aria-label="Permalink to &quot;响应 Json&quot;">​</a></h3><p>通常希望从 API 返回 JSON 数据。可以在此处使用 Laravel 的 JSON 帮助器，例如<a href="https://laravel.com/docs/master/http-tests#assert-json" target="_blank" rel="noreferrer"><code>assertJson</code></a> 方法。</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">it</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;returns all products as JSON&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> () {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Arrange</span></span>
<span class="line"><span style="color:#E1E4E8;">    $product </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Product</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">factory</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    $anotherProduct </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Product</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">factory</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Act &amp; Assert</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">postJson</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;api/products&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">assertOk</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">assertJson</span><span style="color:#E1E4E8;">([</span></span>
<span class="line"><span style="color:#E1E4E8;">            [</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#9ECBFF;">&#39;title&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> $product</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">title,</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#9ECBFF;">&#39;description&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> $product</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">description,</span></span>
<span class="line"><span style="color:#E1E4E8;">            ],</span></span>
<span class="line"><span style="color:#E1E4E8;">            [</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#9ECBFF;">&#39;title&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> $anotherProduct</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">title,</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#9ECBFF;">&#39;description&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> $anotherProduct</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">description,</span></span>
<span class="line"><span style="color:#E1E4E8;">            ],</span></span>
<span class="line"><span style="color:#E1E4E8;">        ]);</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">it</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;returns all products as JSON&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Arrange</span></span>
<span class="line"><span style="color:#24292E;">    $product </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Product</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">factory</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">create</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    $anotherProduct </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Product</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">factory</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">create</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Act &amp; Assert</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">postJson</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;api/products&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">assertOk</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">assertJson</span><span style="color:#24292E;">([</span></span>
<span class="line"><span style="color:#24292E;">            [</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#032F62;">&#39;title&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> $product</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">title,</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#032F62;">&#39;description&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> $product</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">description,</span></span>
<span class="line"><span style="color:#24292E;">            ],</span></span>
<span class="line"><span style="color:#24292E;">            [</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#032F62;">&#39;title&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> $anotherProduct</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">title,</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#032F62;">&#39;description&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> $anotherProduct</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">description,</span></span>
<span class="line"><span style="color:#24292E;">            ],</span></span>
<span class="line"><span style="color:#24292E;">        ]);</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><p>可以在<a href="https://laravel.com/docs/master/http-tests#response-assertions" target="_blank" rel="noreferrer">官网</a>了解更多有关测试页面响应的信息。</p><h2 id="数据库-database" tabindex="-1">数据库 Database <a class="header-anchor" href="#数据库-database" aria-label="Permalink to &quot;数据库 Database&quot;">​</a></h2><p>一般情况会将数据存储在数据库中，因此希望确保数据存储正确。</p><p>这就是 Laravel 可以通过一些断言助手来提供帮助。</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-nYOs1" id="tab-pNR5sCn" checked="checked"><label for="tab-pNR5sCn">assertDatabaseCount/Has</label><input type="radio" name="group-nYOs1" id="tab-rV5pQ7T"><label for="tab-rV5pQ7T">assertDatabaseMissing/ModelMissing</label></div><div class="blocks"><div class="language-php vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// 该示例确保 post 请求成功并将数据正确的存储在数据库中。</span></span>
<span class="line"><span style="color:#B392F0;">it</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;stores a product&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> () {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Act</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">actingAs</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">User</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">factory</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">())</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">post</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;product&#39;</span><span style="color:#E1E4E8;">, [</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;title&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;Product name&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;description&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;Product description&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    ])</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">assertSuccessful</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Assert</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">assertDatabaseCount</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">Product</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">assertDatabaseHas</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">Product</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">, [</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;title&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;Product name&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;description&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;Product description&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    ]);</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 该示例确保 post 请求成功并将数据正确的存储在数据库中。</span></span>
<span class="line"><span style="color:#6F42C1;">it</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;stores a product&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Act</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">actingAs</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">User</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">factory</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">create</span><span style="color:#24292E;">())</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">post</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;product&#39;</span><span style="color:#24292E;">, [</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&#39;title&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;Product name&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&#39;description&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;Product description&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    ])</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">assertSuccessful</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Assert</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">assertDatabaseCount</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">Product</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">assertDatabaseHas</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">Product</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">, [</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&#39;title&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;Product name&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&#39;description&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;Product description&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    ]);</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">it</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;allowed user can delete task&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    $task </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Task</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">factory</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">for</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">project)</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">deleteJson</span><span style="color:#E1E4E8;">($task</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">path</span><span style="color:#E1E4E8;">())</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">assertNoContent</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#6A737D;">// Instead of assertDatabaseMissing to check if the model missing from the database</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">assertDatabaseMissing</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;tasks&#39;</span><span style="color:#E1E4E8;">, [</span><span style="color:#9ECBFF;">&#39;id&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> $task</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">id]);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#6A737D;">// use directly assertModelMissing</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">assertModelMissing</span><span style="color:#E1E4E8;">($task);</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">it</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;allowed user can delete task&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    $task </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Task</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">factory</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">for</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">project)</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">create</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">deleteJson</span><span style="color:#24292E;">($task</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">path</span><span style="color:#24292E;">())</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">assertNoContent</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#6A737D;">// Instead of assertDatabaseMissing to check if the model missing from the database</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">assertDatabaseMissing</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;tasks&#39;</span><span style="color:#24292E;">, [</span><span style="color:#032F62;">&#39;id&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> $task</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">id]);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#6A737D;">// use directly assertModelMissing</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">assertModelMissing</span><span style="color:#24292E;">($task);</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div></div></div><p>可以在<a href="https://laravel.com/docs/master/database-testing#available-assertions" target="_blank" rel="noreferrer">官网</a>了解有关测试数据库的更多信息。</p><h2 id="验证-validation" tabindex="-1">验证 Validation <a class="header-anchor" href="#验证-validation" aria-label="Permalink to &quot;验证 Validation&quot;">​</a></h2><h3 id="http请求" tabindex="-1">Http请求 <a class="header-anchor" href="#http请求" aria-label="Permalink to &quot;Http请求&quot;">​</a></h3><p>验证是许多应用程序的关键部分。在处理请求时候需要确保只能提交满足规则的数据。</p><p>默认情况下，Laravel 会将验证错误发送回用户，可以使用 <a href="https://laravel.com/docs/master/http-tests#assert-invalid" target="_blank" rel="noreferrer"><code>assertInvalid</code></a> 方法进行检查。</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-dhuU5" id="tab-GLNaISp" checked="checked"><label for="tab-GLNaISp">normal</label><input type="radio" name="group-dhuU5" id="tab-H-ssLAw"><label for="tab-H-ssLAw">dataset</label></div><div class="blocks"><div class="language-php vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">it</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;requires the title&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> () {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Act</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">actingAs</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">User</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">factory</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">())</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">post</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;product&#39;</span><span style="color:#E1E4E8;">, [</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#9ECBFF;">&#39;description&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;Product description&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        ])</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">assertInvalid</span><span style="color:#E1E4E8;">([</span><span style="color:#9ECBFF;">&#39;title&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;required&#39;</span><span style="color:#E1E4E8;">]);</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">it</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;requires the description&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> () {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Act</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">actingAs</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">User</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">factory</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">())</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">post</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;product&#39;</span><span style="color:#E1E4E8;">, [</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#9ECBFF;">&#39;title&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;Product name&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        ])</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">assertInvalid</span><span style="color:#E1E4E8;">([</span><span style="color:#9ECBFF;">&#39;description&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;required&#39;</span><span style="color:#E1E4E8;">]);</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">it</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;requires the title&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Act</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">actingAs</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">User</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">factory</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">create</span><span style="color:#24292E;">())</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">post</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;product&#39;</span><span style="color:#24292E;">, [</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#032F62;">&#39;description&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;Product description&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        ])</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">assertInvalid</span><span style="color:#24292E;">([</span><span style="color:#032F62;">&#39;title&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;required&#39;</span><span style="color:#24292E;">]);</span></span>
<span class="line"><span style="color:#24292E;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">it</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;requires the description&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Act</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">actingAs</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">User</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">factory</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">create</span><span style="color:#24292E;">())</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">post</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;product&#39;</span><span style="color:#24292E;">, [</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#032F62;">&#39;title&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;Product name&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        ])</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">assertInvalid</span><span style="color:#24292E;">([</span><span style="color:#032F62;">&#39;description&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;required&#39;</span><span style="color:#24292E;">]);</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">it</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;requires title and description tested with a dataset&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">($data, $error) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Act</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">actingAs</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">User</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">factory</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">())</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">post</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;product&#39;</span><span style="color:#E1E4E8;">, $data)</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">assertInvalid</span><span style="color:#E1E4E8;">($error);</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">with</span><span style="color:#E1E4E8;">([</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&#39;title required&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> [[</span><span style="color:#9ECBFF;">&#39;description&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;text&#39;</span><span style="color:#E1E4E8;">], [</span><span style="color:#9ECBFF;">&#39;title&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;required&#39;</span><span style="color:#E1E4E8;">]],</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&#39;description required&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> [[</span><span style="color:#9ECBFF;">&#39;title&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;Title&#39;</span><span style="color:#E1E4E8;">], [</span><span style="color:#9ECBFF;">&#39;description&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;required&#39;</span><span style="color:#E1E4E8;">]],</span></span>
<span class="line"><span style="color:#E1E4E8;">]);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">it</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;requires title and description tested with a dataset&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;">($data, $error) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Act</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">actingAs</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">User</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">factory</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">create</span><span style="color:#24292E;">())</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">post</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;product&#39;</span><span style="color:#24292E;">, $data)</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">assertInvalid</span><span style="color:#24292E;">($error);</span></span>
<span class="line"><span style="color:#24292E;">})</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">with</span><span style="color:#24292E;">([</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;title required&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> [[</span><span style="color:#032F62;">&#39;description&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;text&#39;</span><span style="color:#24292E;">], [</span><span style="color:#032F62;">&#39;title&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;required&#39;</span><span style="color:#24292E;">]],</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;description required&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> [[</span><span style="color:#032F62;">&#39;title&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;Title&#39;</span><span style="color:#24292E;">], [</span><span style="color:#032F62;">&#39;description&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;required&#39;</span><span style="color:#24292E;">]],</span></span>
<span class="line"><span style="color:#24292E;">]);</span></span></code></pre></div></div></div><p>可以在<a href="https://laravel.com/docs/master/http-tests#response-assertions" target="_blank" rel="noreferrer">官网</a>了解更多有关测试页面响应的信息。</p><h3 id="自定义规则" tabindex="-1">自定义规则 <a class="header-anchor" href="#自定义规则" aria-label="Permalink to &quot;自定义规则&quot;">​</a></h3><p>可以安装<a href="https://github.com/spatie/pest-expectations" target="_blank" rel="noreferrer">spatie/pest-expectations</a>扩展辅助验证。</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-dShM0" id="tab-TqViXVH" checked="checked"><label for="tab-TqViXVH">test</label><input type="radio" name="group-dShM0" id="tab-rXcCqg2"><label for="tab-rXcCqg2">validation</label></div><div class="blocks"><div class="language-php vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">it</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;has valid phone number for chinesePhoneNumber rule&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">fn</span><span style="color:#E1E4E8;"> ($value) =&gt; </span><span style="color:#B392F0;">expect</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">ChinesePhoneNumberRule</span><span style="color:#E1E4E8;">())</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">toPassWith</span><span style="color:#E1E4E8;">($value)</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">with</span><span style="color:#E1E4E8;">([</span></span>
<span class="line"><span style="color:#E1E4E8;">    [</span><span style="color:#79B8FF;">13800138000</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">    [</span><span style="color:#79B8FF;">16735219276</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// ...</span></span>
<span class="line"><span style="color:#E1E4E8;">]);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">it</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;has invalid phone number for chinesePhoneNumber rule&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">fn</span><span style="color:#E1E4E8;"> ($value) =&gt; </span><span style="color:#B392F0;">expect</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">ChinesePhoneNumberRule</span><span style="color:#E1E4E8;">())</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">toFailWith</span><span style="color:#E1E4E8;">($value)</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">with</span><span style="color:#E1E4E8;">([</span></span>
<span class="line"><span style="color:#E1E4E8;">    [</span><span style="color:#9ECBFF;">&#39;&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">    [</span><span style="color:#79B8FF;">16000138000</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// ...</span></span>
<span class="line"><span style="color:#E1E4E8;">]);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">it</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;has valid phone number for chinesePhoneNumber rule&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">fn</span><span style="color:#24292E;"> ($value) =&gt; </span><span style="color:#6F42C1;">expect</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">ChinesePhoneNumberRule</span><span style="color:#24292E;">())</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">toPassWith</span><span style="color:#24292E;">($value)</span></span>
<span class="line"><span style="color:#24292E;">)</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">with</span><span style="color:#24292E;">([</span></span>
<span class="line"><span style="color:#24292E;">    [</span><span style="color:#005CC5;">13800138000</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">    [</span><span style="color:#005CC5;">16735219276</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// ...</span></span>
<span class="line"><span style="color:#24292E;">]);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">it</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;has invalid phone number for chinesePhoneNumber rule&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">fn</span><span style="color:#24292E;"> ($value) =&gt; </span><span style="color:#6F42C1;">expect</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">ChinesePhoneNumberRule</span><span style="color:#24292E;">())</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">toFailWith</span><span style="color:#24292E;">($value)</span></span>
<span class="line"><span style="color:#24292E;">)</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">with</span><span style="color:#24292E;">([</span></span>
<span class="line"><span style="color:#24292E;">    [</span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">    [</span><span style="color:#005CC5;">16000138000</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// ...</span></span>
<span class="line"><span style="color:#24292E;">]);</span></span></code></pre></div><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ChinesePhoneNumberRule</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">implements</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ValidationRule</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">validate</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">string</span><span style="color:#E1E4E8;"> $attribute, </span><span style="color:#F97583;">mixed</span><span style="color:#E1E4E8;"> $value, </span><span style="color:#79B8FF;">Closure</span><span style="color:#E1E4E8;"> $fail)</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span></span>
<span class="line"><span style="color:#E1E4E8;">        $regex </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;/</span><span style="color:#F97583;">^</span><span style="color:#DBEDFF;">(?:</span><span style="color:#85E89D;font-weight:bold;">\\+</span><span style="color:#DBEDFF;">?86)?1(?:3</span><span style="color:#85E89D;font-weight:bold;">\\d</span><span style="color:#DBEDFF;">{3}|5[^4\\D]</span><span style="color:#85E89D;font-weight:bold;">\\d</span><span style="color:#DBEDFF;">{2}|8</span><span style="color:#85E89D;font-weight:bold;">\\d</span><span style="color:#DBEDFF;">{3}|7(?:[0-35-9]</span><span style="color:#85E89D;font-weight:bold;">\\d</span><span style="color:#DBEDFF;">{2}|4(?:0</span><span style="color:#85E89D;font-weight:bold;">\\d</span><span style="color:#DBEDFF;">|1[0-2]|9</span><span style="color:#85E89D;font-weight:bold;">\\d</span><span style="color:#DBEDFF;">))|9[0-35-9]</span><span style="color:#85E89D;font-weight:bold;">\\d</span><span style="color:#DBEDFF;">{2}|6[2567]</span><span style="color:#85E89D;font-weight:bold;">\\d</span><span style="color:#DBEDFF;">{2}|4(?:(?:10|4[01])</span><span style="color:#85E89D;font-weight:bold;">\\d</span><span style="color:#DBEDFF;">{3}|[68]</span><span style="color:#85E89D;font-weight:bold;">\\d</span><span style="color:#DBEDFF;">{4}|[56789]</span><span style="color:#85E89D;font-weight:bold;">\\d</span><span style="color:#DBEDFF;">{2}))</span><span style="color:#85E89D;font-weight:bold;">\\d</span><span style="color:#DBEDFF;">{6}</span><span style="color:#F97583;">$</span><span style="color:#9ECBFF;">/&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">preg_match</span><span style="color:#E1E4E8;">($regex, $value) </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            $fail(</span><span style="color:#B392F0;">__</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;validation.invalid_chinese_phone_number&#39;</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ChinesePhoneNumberRule</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">implements</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ValidationRule</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">validate</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">string</span><span style="color:#24292E;"> $attribute, </span><span style="color:#D73A49;">mixed</span><span style="color:#24292E;"> $value, </span><span style="color:#005CC5;">Closure</span><span style="color:#24292E;"> $fail)</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line"><span style="color:#24292E;">        $regex </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;/</span><span style="color:#D73A49;">^</span><span style="color:#032F62;">(?:</span><span style="color:#22863A;font-weight:bold;">\\+</span><span style="color:#032F62;">?86)?1(?:3</span><span style="color:#22863A;font-weight:bold;">\\d</span><span style="color:#032F62;">{3}|5[^4\\D]</span><span style="color:#22863A;font-weight:bold;">\\d</span><span style="color:#032F62;">{2}|8</span><span style="color:#22863A;font-weight:bold;">\\d</span><span style="color:#032F62;">{3}|7(?:[0-35-9]</span><span style="color:#22863A;font-weight:bold;">\\d</span><span style="color:#032F62;">{2}|4(?:0</span><span style="color:#22863A;font-weight:bold;">\\d</span><span style="color:#032F62;">|1[0-2]|9</span><span style="color:#22863A;font-weight:bold;">\\d</span><span style="color:#032F62;">))|9[0-35-9]</span><span style="color:#22863A;font-weight:bold;">\\d</span><span style="color:#032F62;">{2}|6[2567]</span><span style="color:#22863A;font-weight:bold;">\\d</span><span style="color:#032F62;">{2}|4(?:(?:10|4[01])</span><span style="color:#22863A;font-weight:bold;">\\d</span><span style="color:#032F62;">{3}|[68]</span><span style="color:#22863A;font-weight:bold;">\\d</span><span style="color:#032F62;">{4}|[56789]</span><span style="color:#22863A;font-weight:bold;">\\d</span><span style="color:#032F62;">{2}))</span><span style="color:#22863A;font-weight:bold;">\\d</span><span style="color:#032F62;">{6}</span><span style="color:#D73A49;">$</span><span style="color:#032F62;">/&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">preg_match</span><span style="color:#24292E;">($regex, $value) </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            $fail(</span><span style="color:#6F42C1;">__</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;validation.invalid_chinese_phone_number&#39;</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div></div></div><h2 id="模型关联关系-relationships" tabindex="-1">模型关联关系 Relationships <a class="header-anchor" href="#模型关联关系-relationships" aria-label="Permalink to &quot;模型关联关系 Relationships&quot;">​</a></h2><p>例如测试用户包含很多产品的一对多的关联关系。</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">it</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;has products&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> () {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Arrange</span></span>
<span class="line"><span style="color:#E1E4E8;">    $user </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">User</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">factory</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">has</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">Product</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">factory</span><span style="color:#E1E4E8;">())</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Act</span></span>
<span class="line"><span style="color:#E1E4E8;">    $products </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> $user</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">products;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Assert</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">expect</span><span style="color:#E1E4E8;">($products)</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">toBeInstanceOf</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">Collection</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">first</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">toBeInstanceOf</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">Product</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">it</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;has products&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Arrange</span></span>
<span class="line"><span style="color:#24292E;">    $user </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">User</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">factory</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">has</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">Product</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">factory</span><span style="color:#24292E;">())</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">create</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Act</span></span>
<span class="line"><span style="color:#24292E;">    $products </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> $user</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">products;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Assert</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">expect</span><span style="color:#24292E;">($products)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">toBeInstanceOf</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">Collection</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">first</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">toBeInstanceOf</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">Product</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><p>如果需要测试模型的 <code>released()</code> 访问的逻辑，可以如下进行相应测试：</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-xslNW" id="tab-IhFcLRU" checked="checked"><label for="tab-IhFcLRU">test</label><input type="radio" name="group-xslNW" id="tab-0UuhW1l"><label for="tab-0UuhW1l">model</label></div><div class="blocks"><div class="language-php vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">it</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;only returns released courses for query scope&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> () {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Arrange</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">Course</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">factory</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">released</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">Course</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">factory</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Act &amp; Assert</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">expect</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">Course</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">released</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">())</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">toHaveCount</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">first</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">id</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">toEqual</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">it</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;only returns released courses for query scope&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Arrange</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">Course</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">factory</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">released</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">create</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">Course</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">factory</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">create</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Act &amp; Assert</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">expect</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">Course</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">released</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">())</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">toHaveCount</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">first</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">id</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">toEqual</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// App\\Models\\Course.php</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">scopeReleased</span><span style="color:#E1E4E8;">($query) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> $query</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">where</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;released_at&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;&gt;=&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#B392F0;">now</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// App\\Models\\Course.php</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">scopeReleased</span><span style="color:#24292E;">($query) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> $query</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">where</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;released_at&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;&gt;=&#39;</span><span style="color:#24292E;">, </span><span style="color:#6F42C1;">now</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div></div></div><p>另一个模型访问器的例子：</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-lnA68" id="tab-AEn1VHL" checked="checked"><label for="tab-AEn1VHL">test</label><input type="radio" name="group-lnA68" id="tab-Iavdjdb"><label for="tab-Iavdjdb">model</label></div><div class="blocks"><div class="language-php vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">it</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;capitalizes the first character of the first name&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> () {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Arrange</span></span>
<span class="line"><span style="color:#E1E4E8;">    $user </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">User</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">factory</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">([</span><span style="color:#9ECBFF;">&#39;first_name&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;christoph&#39;</span><span style="color:#E1E4E8;">])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Act &amp; Assert</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">expect</span><span style="color:#E1E4E8;">($user</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">first_name)</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">toBe</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;Christoph&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">it</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;capitalizes the first character of the first name&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Arrange</span></span>
<span class="line"><span style="color:#24292E;">    $user </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">User</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">factory</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">create</span><span style="color:#24292E;">([</span><span style="color:#032F62;">&#39;first_name&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;christoph&#39;</span><span style="color:#24292E;">])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Act &amp; Assert</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">expect</span><span style="color:#24292E;">($user</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">first_name)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">toBe</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;Christoph&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// App\\Models\\User.php</span></span>
<span class="line"><span style="color:#F97583;">protected</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">firstName</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Attribute</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Attribute</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">make</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">: </span><span style="color:#F97583;">fn</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">string</span><span style="color:#E1E4E8;"> $value) =&gt; </span><span style="color:#79B8FF;">ucfirst</span><span style="color:#E1E4E8;">($value),</span></span>
<span class="line"><span style="color:#E1E4E8;">    );</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// App\\Models\\User.php</span></span>
<span class="line"><span style="color:#D73A49;">protected</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">firstName</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Attribute</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Attribute</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">make</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">: </span><span style="color:#D73A49;">fn</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">string</span><span style="color:#24292E;"> $value) =&gt; </span><span style="color:#005CC5;">ucfirst</span><span style="color:#24292E;">($value),</span></span>
<span class="line"><span style="color:#24292E;">    );</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div></div></div><h2 id="邮件-mail" tabindex="-1">邮件 Mail <a class="header-anchor" href="#邮件-mail" aria-label="Permalink to &quot;邮件 Mail&quot;">​</a></h2><h3 id="邮件发送" tabindex="-1">邮件发送 <a class="header-anchor" href="#邮件发送" aria-label="Permalink to &quot;邮件发送&quot;">​</a></h3><p>在控制器代码逻辑处理时，将发送一封电子邮件。在测试中，可以通过发送请求并确保这封电子邮件已被发送。</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-p0Umz" id="tab-y5cY4Z0" checked="checked"><label for="tab-y5cY4Z0">test</label><input type="radio" name="group-p0Umz" id="tab-VF018sD"><label for="tab-VF018sD">controller</label></div><div class="blocks"><div class="language-php vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark has-diff vp-code-dark"><code><span class="line"><span style="color:#B392F0;">it</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;sends email to podcast author&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Arrange</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">Mail</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">fake</span><span style="color:#E1E4E8;">(); </span></span>
<span class="line"><span style="color:#E1E4E8;">    $podcast </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Podcast</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">factory</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Act</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">post</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">route</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;publish-podcast&#39;</span><span style="color:#E1E4E8;">, $podcast));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#6A737D;">// Assert</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">Mail</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">assertSent</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">PodcastPublishedMail</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">); </span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light has-diff vp-code-light"><code><span class="line"><span style="color:#6F42C1;">it</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;sends email to podcast author&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Arrange</span></span>
<span class="line diff add"><span style="color:#24292E;">    </span><span style="color:#005CC5;">Mail</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">fake</span><span style="color:#24292E;">(); </span></span>
<span class="line"><span style="color:#24292E;">    $podcast </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Podcast</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">factory</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">create</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Act</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">post</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">route</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;publish-podcast&#39;</span><span style="color:#24292E;">, $podcast));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#6A737D;">// Assert</span></span>
<span class="line diff add"><span style="color:#24292E;">    </span><span style="color:#005CC5;">Mail</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">assertSent</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">PodcastPublishedMail</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">); </span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">&lt;?</span><span style="color:#79B8FF;">php</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">PublishPodcastController</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">extends</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Controller</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">__invoke</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">Podcast</span><span style="color:#E1E4E8;"> $podcast)</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// publish podcast</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// ...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">Mail</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">to</span><span style="color:#E1E4E8;">($podcast</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">author)</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">send</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">PodcastPublishedMail</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">&lt;?</span><span style="color:#005CC5;">php</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">PublishPodcastController</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">extends</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Controller</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">__invoke</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">Podcast</span><span style="color:#24292E;"> $podcast)</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// publish podcast</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// ...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">Mail</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">to</span><span style="color:#24292E;">($podcast</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">author)</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">send</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">PodcastPublishedMail</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div></div></div><p>测试电子邮件发送时，始终在测试开始时使用 <code>Mail::fake()</code> 。这可确保不会向用户发送实际的电子邮件。</p><p>可以在<a href="https://laravel.com/docs/master/mail#testing-mailable-sending" target="_blank" rel="noreferrer">官网</a>了解更多有关测试邮件发送的信息。</p><h3 id="邮件接收者" tabindex="-1">邮件接收者 <a class="header-anchor" href="#邮件接收者" aria-label="Permalink to &quot;邮件接收者&quot;">​</a></h3><p>方法<code>assertSent</code>也接受回调作为第二个参数，它接收邮件的对象。它包含所有电子邮件相关内容，例如需要发送到的电子邮件：</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">Mail</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">assertSent</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">PodcastPublishedMail</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">PodcastPublishedMail</span><span style="color:#E1E4E8;"> $mail) </span><span style="color:#F97583;">use</span><span style="color:#E1E4E8;"> ($podcast) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> $mail</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">hasTo</span><span style="color:#E1E4E8;">($podcast</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">author</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">email);</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">Mail</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">assertSent</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">PodcastPublishedMail</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">PodcastPublishedMail</span><span style="color:#24292E;"> $mail) </span><span style="color:#D73A49;">use</span><span style="color:#24292E;"> ($podcast) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> $mail</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">hasTo</span><span style="color:#24292E;">($podcast</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">author</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">email);</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><h3 id="邮件内容" tabindex="-1">邮件内容 <a class="header-anchor" href="#邮件内容" aria-label="Permalink to &quot;邮件内容&quot;">​</a></h3><p>测试电子邮件的内容也很有意义。当应用程序中有大量电子邮件时，这尤其有用。需要要确保内容正确。</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">it</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;contains the product title&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> () {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Arrange</span></span>
<span class="line"><span style="color:#E1E4E8;">    $product </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Product</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">factory</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">make</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#6A737D;">// Act</span></span>
<span class="line"><span style="color:#E1E4E8;">    $mail </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">PaymentSuccessfulMail</span><span style="color:#E1E4E8;">($product);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Assert</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">expect</span><span style="color:#E1E4E8;">($mail)</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">assertHasSubject</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;Your payment was successful&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">assertSeeInHtml</span><span style="color:#E1E4E8;">($product</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">title);</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">it</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;contains the product title&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Arrange</span></span>
<span class="line"><span style="color:#24292E;">    $product </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Product</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">factory</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">make</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#6A737D;">// Act</span></span>
<span class="line"><span style="color:#24292E;">    $mail </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">PaymentSuccessfulMail</span><span style="color:#24292E;">($product);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Assert</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">expect</span><span style="color:#24292E;">($mail)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">assertHasSubject</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;Your payment was successful&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">assertSeeInHtml</span><span style="color:#24292E;">($product</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">title);</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><p>可以在<a href="https://laravel.com/docs/master/mail#testing-mailable-content" target="_blank" rel="noreferrer">官网</a>了解更多有关测试邮件内容的信息。</p><h2 id="作业和队列" tabindex="-1">作业和队列 <a class="header-anchor" href="#作业和队列" aria-label="Permalink to &quot;作业和队列&quot;">​</a></h2><p>通过请求测试任务已经被推送。</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark has-diff vp-code-dark"><code><span class="line"><span style="color:#B392F0;">it</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;dispatches an import products job&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> () {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Arrange</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">Queue</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">fake</span><span style="color:#E1E4E8;">(); </span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Act</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">post</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;import&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Assert</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">Queue</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">assertPushed</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">ImportProductsJob</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">); </span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light has-diff vp-code-light"><code><span class="line"><span style="color:#6F42C1;">it</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;dispatches an import products job&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Arrange</span></span>
<span class="line diff add"><span style="color:#24292E;">    </span><span style="color:#005CC5;">Queue</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">fake</span><span style="color:#24292E;">(); </span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Act</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">post</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;import&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Assert</span></span>
<span class="line diff add"><span style="color:#24292E;">    </span><span style="color:#005CC5;">Queue</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">assertPushed</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">ImportProductsJob</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">); </span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><p>例如访问特定的请求时，能确保任务将被推送到特定触发器的队列。</p><p>也可以单独测试任务的功能逻辑：</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">it</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;imports products&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Act</span></span>
<span class="line"><span style="color:#E1E4E8;">    (</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">ImportProductsJob</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">handle</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Assert</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">assertDatabaseCount</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">Product</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">50</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Make more assertions about the imported data</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">it</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;imports products&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">   </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Act</span></span>
<span class="line"><span style="color:#24292E;">    (</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">ImportProductsJob</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">handle</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Assert</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">assertDatabaseCount</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">Product</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">50</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Make more assertions about the imported data</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><h2 id="通知-notifications" tabindex="-1">通知 Notifications <a class="header-anchor" href="#通知-notifications" aria-label="Permalink to &quot;通知 Notifications&quot;">​</a></h2><p>Notifications 通知适合向用户发送重要事件。</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark has-diff vp-code-dark"><code><span class="line"><span style="color:#B392F0;">it</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;sends notification about new product&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> () {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Arrange</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">Notification</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">fake</span><span style="color:#E1E4E8;">(); </span></span>
<span class="line"><span style="color:#E1E4E8;">    $user </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">User</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">factory</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    $product </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Product</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">factory</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Act</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">artisan</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">InformAboutNewProductCommand</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">, [</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;productId&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> $product</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">id,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;userId&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> $user</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">id,</span></span>
<span class="line"><span style="color:#E1E4E8;">    ]);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Assert</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">Notification</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">assertSentTo</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">        [$user], </span><span style="color:#79B8FF;">NewProductNotification</span><span style="color:#F97583;">::class</span></span>
<span class="line"><span style="color:#E1E4E8;">    );</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light has-diff vp-code-light"><code><span class="line"><span style="color:#6F42C1;">it</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;sends notification about new product&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Arrange</span></span>
<span class="line diff add"><span style="color:#24292E;">    </span><span style="color:#005CC5;">Notification</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">fake</span><span style="color:#24292E;">(); </span></span>
<span class="line"><span style="color:#24292E;">    $user </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">User</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">factory</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">create</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    $product </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Product</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">factory</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">create</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Act</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">artisan</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">InformAboutNewProductCommand</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">, [</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&#39;productId&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> $product</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">id,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&#39;userId&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> $user</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">id,</span></span>
<span class="line"><span style="color:#24292E;">    ]);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Assert</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">Notification</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">assertSentTo</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">        [$user], </span><span style="color:#005CC5;">NewProductNotification</span><span style="color:#D73A49;">::class</span></span>
<span class="line"><span style="color:#24292E;">    );</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><p>在上面的示例中测试了创建新产品时发送通知给用户。使用 <code>artisan</code> 方法来触发通知。</p><p>同样，通知 <code>Notification::fake()</code> 伪造它，确保没有发送实际的通知。</p><p>可以在<a href="https://laravel.com/docs/master/notifications#testing" target="_blank" rel="noreferrer">官网</a>了解更多有关测试通知的信息。</p><h2 id="actions" tabindex="-1">Actions <a class="header-anchor" href="#actions" aria-label="Permalink to &quot;Actions&quot;">​</a></h2><p>Action 只是具有一项特定工作的简单类，它是组织代码并将逻辑与控制器分开以保持它们干净的好方法。更多详情可以看<a href="https://github.com/lorisleiva/laravel-actions" target="_blank" rel="noreferrer">Laravel Actions</a>扩展。</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-1At4C" id="tab-c53S4XI" checked="checked"><label for="tab-c53S4XI">通过Http请求测试</label><input type="radio" name="group-1At4C" id="tab-eRn2n_V"><label for="tab-eRn2n_V">直接测试 Action 类</label></div><div class="blocks"><div class="language-php vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// controller</span></span>
<span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">PurchaseController</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">extends</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Controller</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">__invoke</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">User</span><span style="color:#E1E4E8;"> $user, </span><span style="color:#79B8FF;">Product</span><span style="color:#E1E4E8;"> $product)</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">app</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">AddProductToUserAction</span><span style="color:#F97583;">::class-&gt;</span><span style="color:#B392F0;">handle</span><span style="color:#E1E4E8;">($user, $product);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// Send purchase success email, etc.</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// test</span></span>
<span class="line"><span style="color:#B392F0;">it</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;calls add-product-to-user action&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> () {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Assert</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">mock</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">AddProductToUserAction</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">shouldReceive</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;handle&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">atLeast</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">once</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Arrange</span></span>
<span class="line"><span style="color:#E1E4E8;">    $product </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Product</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">factory</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    $user </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">User</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">factory</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Act</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">post</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;purchase/</span><span style="color:#E1E4E8;">$user</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">id</span><span style="color:#9ECBFF;">/</span><span style="color:#E1E4E8;">$product</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">i</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// controller</span></span>
<span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">PurchaseController</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">extends</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Controller</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">__invoke</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">User</span><span style="color:#24292E;"> $user, </span><span style="color:#005CC5;">Product</span><span style="color:#24292E;"> $product)</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">app</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">AddProductToUserAction</span><span style="color:#D73A49;">::class-&gt;</span><span style="color:#6F42C1;">handle</span><span style="color:#24292E;">($user, $product);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// Send purchase success email, etc.</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// test</span></span>
<span class="line"><span style="color:#6F42C1;">it</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;calls add-product-to-user action&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Assert</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">mock</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">AddProductToUserAction</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">shouldReceive</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;handle&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">atLeast</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">once</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Arrange</span></span>
<span class="line"><span style="color:#24292E;">    $product </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Product</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">factory</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">create</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    $user </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">User</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">factory</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">create</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Act</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">post</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;purchase/</span><span style="color:#24292E;">$user</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">id</span><span style="color:#032F62;">/</span><span style="color:#24292E;">$product</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">i</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// 对 Action 处理逻辑进行测试</span></span>
<span class="line"><span style="color:#B392F0;">it</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;adds product to user&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> () {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Arrange</span></span>
<span class="line"><span style="color:#E1E4E8;">    $product </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Product</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">factory</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    $user </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">User</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">factory</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Act</span></span>
<span class="line"><span style="color:#E1E4E8;">    (</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">AddProductToUserAction</span><span style="color:#E1E4E8;">())</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">handle</span><span style="color:#E1E4E8;">($user, $product);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Assert</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">expect</span><span style="color:#E1E4E8;">($user</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">products)</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">toHaveCount</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">first</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">id</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">toEqual</span><span style="color:#E1E4E8;">($product</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">id);</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 对 Action 处理逻辑进行测试</span></span>
<span class="line"><span style="color:#6F42C1;">it</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;adds product to user&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Arrange</span></span>
<span class="line"><span style="color:#24292E;">    $product </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Product</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">factory</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">create</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    $user </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">User</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">factory</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">create</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Act</span></span>
<span class="line"><span style="color:#24292E;">    (</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">AddProductToUserAction</span><span style="color:#24292E;">())</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">handle</span><span style="color:#24292E;">($user, $product);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Assert</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">expect</span><span style="color:#24292E;">($user</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">products)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">toHaveCount</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">first</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">id</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">toEqual</span><span style="color:#24292E;">($product</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">id);</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div></div></div><h2 id="命令-commands" tabindex="-1">命令 Commands <a class="header-anchor" href="#命令-commands" aria-label="Permalink to &quot;命令 Commands&quot;">​</a></h2><p>可以通过直接触发命令来进行测试。</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-SymDT" id="tab-dWr31ij" checked="checked"><label for="tab-dWr31ij">normal</label><input type="radio" name="group-SymDT" id="tab-lgx1bqw"><label for="tab-lgx1bqw">Input / Output Expectations</label></div><div class="blocks"><div class="language-php vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">it</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;merges two accounts&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> () {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Arrange</span></span>
<span class="line"><span style="color:#E1E4E8;">    $user </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">User</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">factory</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    $userToBeMerged </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">User</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">factory</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Act</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">artisan</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">MergeAccountsCommand</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">, [</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;userId&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> $user</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">id,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;userToBeMergedId&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> $userToBeMerged</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">id,</span></span>
<span class="line"><span style="color:#E1E4E8;">    ]);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Assert</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">assertDatabaseCount</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">User</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">assertDatabaseHas</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">User</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">, [</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;id&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> $user</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">id,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;name&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> $user</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">name,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;email&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> $user</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">email,</span></span>
<span class="line"><span style="color:#E1E4E8;">    ]);</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">it</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;merges two accounts&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Arrange</span></span>
<span class="line"><span style="color:#24292E;">    $user </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">User</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">factory</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">create</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    $userToBeMerged </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">User</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">factory</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">create</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Act</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">artisan</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">MergeAccountsCommand</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">, [</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&#39;userId&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> $user</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">id,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&#39;userToBeMergedId&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> $userToBeMerged</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">id,</span></span>
<span class="line"><span style="color:#24292E;">    ]);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Assert</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">assertDatabaseCount</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">User</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">assertDatabaseHas</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">User</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">, [</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&#39;id&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> $user</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">id,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&#39;name&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> $user</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">name,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&#39;email&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> $user</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">email,</span></span>
<span class="line"><span style="color:#24292E;">    ]);</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">it</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;asks for user ids&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Arrange</span></span>
<span class="line"><span style="color:#E1E4E8;">    $user </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">User</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">factory</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    $userToBeMerged </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">User</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">factory</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Act &amp; Assert</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">artisan</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">MergeAccountsCommand</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">expectsQuestion</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;Please provide the user ID of the user you want to keep&#39;</span><span style="color:#E1E4E8;">, $user</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">id)</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">expectsQuestion</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;Please provide the user ID of the user you want to merge&#39;</span><span style="color:#E1E4E8;">, $userToBeMerged</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">id)</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">expectsOutput</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;Accounts merged successfully&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">assertSuccessful</span><span style="color:#E1E4E8;">(); </span><span style="color:#6A737D;">// 可以期待输出并确保命令成功，这意味着退出代码为 0。</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">it</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;asks for user ids&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Arrange</span></span>
<span class="line"><span style="color:#24292E;">    $user </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">User</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">factory</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">create</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    $userToBeMerged </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">User</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">factory</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">create</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Act &amp; Assert</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">artisan</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">MergeAccountsCommand</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">expectsQuestion</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;Please provide the user ID of the user you want to keep&#39;</span><span style="color:#24292E;">, $user</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">id)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">expectsQuestion</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;Please provide the user ID of the user you want to merge&#39;</span><span style="color:#24292E;">, $userToBeMerged</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">id)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">expectsOutput</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;Accounts merged successfully&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">assertSuccessful</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// 可以期待输出并确保命令成功，这意味着退出代码为 0。</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div></div></div><p>可以在<a href="https://laravel.com/docs/master/console-tests#main-content" target="_blank" rel="noreferrer">官网</a>了解更多有关测试命令的信息。</p><h2 id="测试视图-views" tabindex="-1">测试视图 Views <a class="header-anchor" href="#测试视图-views" aria-label="Permalink to &quot;测试视图 Views&quot;">​</a></h2><p>Laravel 10.x 支持使用命令创建视图。</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-6A8TC" id="tab-jes3xf8" checked="checked"><label for="tab-jes3xf8">测试</label><input type="radio" name="group-6A8TC" id="tab-HBXMVnP"><label for="tab-HBXMVnP">视图文件</label></div><div class="blocks"><div class="language-php vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">&lt;?</span><span style="color:#79B8FF;">php</span></span>
<span class="line"><span style="color:#6A737D;">// tests/Feature/View/Posts/IndexTest.php</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">use</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">App\\Models\\Post</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">it</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;can render&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> () {</span></span>
<span class="line"><span style="color:#E1E4E8;">    $contents </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">view</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;posts.index&#39;</span><span style="color:#E1E4E8;">, [</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;posts&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Post</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">factory</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">count</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">(),</span></span>
<span class="line"><span style="color:#E1E4E8;">    ]);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    $contents</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">assertSeeText</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;Posts&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">assertViewHas</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;posts&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">&lt;?</span><span style="color:#005CC5;">php</span></span>
<span class="line"><span style="color:#6A737D;">// tests/Feature/View/Posts/IndexTest.php</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">use</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">App\\Models\\Post</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">it</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;can render&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#24292E;">    $contents </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">view</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;posts.index&#39;</span><span style="color:#24292E;">, [</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&#39;posts&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Post</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">factory</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">count</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">create</span><span style="color:#24292E;">(),</span></span>
<span class="line"><span style="color:#24292E;">    ]);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    $contents</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">assertSeeText</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;Posts&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">assertViewHas</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;posts&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// views/posts/index.blade.php</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">&lt;</span><span style="color:#79B8FF;">div</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">&lt;</span><span style="color:#79B8FF;">h2</span><span style="color:#F97583;">&gt;</span><span style="color:#79B8FF;">Posts</span><span style="color:#F97583;">&lt;/</span><span style="color:#79B8FF;">h2</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">&lt;</span><span style="color:#79B8FF;">ul</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">@foreach</span><span style="color:#E1E4E8;">($posts </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> $post)</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">&lt;</span><span style="color:#79B8FF;">li</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">{{ $post</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">name }}</span><span style="color:#F97583;">&lt;/</span><span style="color:#79B8FF;">li</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">@endforeach</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">&lt;/</span><span style="color:#79B8FF;">ul</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#F97583;">&lt;/</span><span style="color:#79B8FF;">div</span><span style="color:#F97583;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// views/posts/index.blade.php</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">&lt;</span><span style="color:#005CC5;">div</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">&lt;</span><span style="color:#005CC5;">h2</span><span style="color:#D73A49;">&gt;</span><span style="color:#005CC5;">Posts</span><span style="color:#D73A49;">&lt;/</span><span style="color:#005CC5;">h2</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">&lt;</span><span style="color:#005CC5;">ul</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">@foreach</span><span style="color:#24292E;">($posts </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> $post)</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">&lt;</span><span style="color:#005CC5;">li</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">{{ $post</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">name }}</span><span style="color:#D73A49;">&lt;/</span><span style="color:#005CC5;">li</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">@endforeach</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">&lt;/</span><span style="color:#005CC5;">ul</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#D73A49;">&lt;/</span><span style="color:#005CC5;">div</span><span style="color:#D73A49;">&gt;</span></span></code></pre></div></div></div><h2 id="中间件-middlewares" tabindex="-1">中间件 Middlewares <a class="header-anchor" href="#中间件-middlewares" aria-label="Permalink to &quot;中间件 Middlewares&quot;">​</a></h2><p>这里以一个路由中间件作为示例。<a href="https://github.com/curder/laravel-testing-demo/tree/middleware" target="_blank" rel="noreferrer">源代码查看</a></p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-vLDJM" id="tab-3UxCox_" checked="checked"><label for="tab-3UxCox_">测试</label><input type="radio" name="group-vLDJM" id="tab-HOCOZCb"><label for="tab-HOCOZCb">定义</label><input type="radio" name="group-vLDJM" id="tab-R1LVeru"><label for="tab-R1LVeru">模型文件</label><input type="radio" name="group-vLDJM" id="tab-g7KTj_S"><label for="tab-g7KTj_S">迁移文件</label><input type="radio" name="group-vLDJM" id="tab-2Ht_8uK"><label for="tab-2Ht_8uK">Factory工厂文件</label></div><div class="blocks"><div class="language-php vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">&lt;?</span><span style="color:#79B8FF;">php</span></span>
<span class="line"><span style="color:#6A737D;">// tests/Unit/Http/Middleware/RedirectMiddlewareTest.php</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">use</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">App\\Models\\Redirect</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">use</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Illuminate\\Support\\Facades\\Route</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">use</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">App\\Http\\Middleware\\RedirectMiddleware</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">use</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Symfony\\Component\\HttpFoundation\\Response</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 测试中间件逻辑是否正确</span></span>
<span class="line"><span style="color:#B392F0;">it</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;the middleware is in isolation&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> () {</span></span>
<span class="line"><span style="color:#E1E4E8;">    $response </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">RedirectMiddleware</span><span style="color:#E1E4E8;">())</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">handle</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">createRequest</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;get&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;/&#39;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">fn</span><span style="color:#E1E4E8;"> () =&gt; </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Response</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">    );</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">expect</span><span style="color:#E1E4E8;">($response</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">isRedirect</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">url</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;/new-homepage&#39;</span><span style="color:#E1E4E8;">)))</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">toBeFalse</span><span style="color:#E1E4E8;">(); </span><span style="color:#6A737D;">// 未配置跳转时，访问页面不会跳转</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">Redirect</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">factory</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">([</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;from&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;/&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;to&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;/new-homepage&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    ]);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    $response </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">RedirectMiddleware</span><span style="color:#E1E4E8;">())</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">handle</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">createRequest</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;get&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;/&#39;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">fn</span><span style="color:#E1E4E8;"> () =&gt; </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Response</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">    );</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">expect</span><span style="color:#E1E4E8;">($response</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">isRedirect</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">url</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;/new-homepage&#39;</span><span style="color:#E1E4E8;">)))</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">toBeTrue</span><span style="color:#E1E4E8;">(); </span><span style="color:#6A737D;">// 正确配置了跳转时，访问页面会跳转</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 测试中间件能正常工作</span></span>
<span class="line"><span style="color:#B392F0;">it</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;will preform the right redirects&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> () {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">Route</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;my-test-router&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">fn</span><span style="color:#E1E4E8;"> () =&gt; </span><span style="color:#9ECBFF;">&#39;ok&#39;</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">middleware</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">RedirectMiddleware</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;/my-test-router&#39;</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">assertOk</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">Redirect</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">factory</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">([</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;from&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;/my-test-router&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;to&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;/new-homepage&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    ]);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;/my-test-router&#39;</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">assertRedirect</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;/new-homepage&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">createRequest</span><span style="color:#E1E4E8;">($method, $uri)</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\Illuminate\\Http\\Request</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    $symfony_request </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\Symfony\\Component\\HttpFoundation\\Request</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">        $uri,</span></span>
<span class="line"><span style="color:#E1E4E8;">        $method,</span></span>
<span class="line"><span style="color:#E1E4E8;">    );</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\Illuminate\\Http\\Request</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">createFromBase</span><span style="color:#E1E4E8;">($symfony_request);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">&lt;?</span><span style="color:#005CC5;">php</span></span>
<span class="line"><span style="color:#6A737D;">// tests/Unit/Http/Middleware/RedirectMiddlewareTest.php</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">use</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">App\\Models\\Redirect</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">use</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Illuminate\\Support\\Facades\\Route</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">use</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">App\\Http\\Middleware\\RedirectMiddleware</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">use</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Symfony\\Component\\HttpFoundation\\Response</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 测试中间件逻辑是否正确</span></span>
<span class="line"><span style="color:#6F42C1;">it</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;the middleware is in isolation&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#24292E;">    $response </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">RedirectMiddleware</span><span style="color:#24292E;">())</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">handle</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">createRequest</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;get&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;/&#39;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">fn</span><span style="color:#24292E;"> () =&gt; </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Response</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">    );</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">expect</span><span style="color:#24292E;">($response</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">isRedirect</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">url</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;/new-homepage&#39;</span><span style="color:#24292E;">)))</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">toBeFalse</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// 未配置跳转时，访问页面不会跳转</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">Redirect</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">factory</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">create</span><span style="color:#24292E;">([</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&#39;from&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;/&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&#39;to&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;/new-homepage&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    ]);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    $response </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">RedirectMiddleware</span><span style="color:#24292E;">())</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">handle</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">createRequest</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;get&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;/&#39;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">fn</span><span style="color:#24292E;"> () =&gt; </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Response</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">    );</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">expect</span><span style="color:#24292E;">($response</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">isRedirect</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">url</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;/new-homepage&#39;</span><span style="color:#24292E;">)))</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">toBeTrue</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// 正确配置了跳转时，访问页面会跳转</span></span>
<span class="line"><span style="color:#24292E;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 测试中间件能正常工作</span></span>
<span class="line"><span style="color:#6F42C1;">it</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;will preform the right redirects&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">Route</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;my-test-router&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">fn</span><span style="color:#24292E;"> () =&gt; </span><span style="color:#032F62;">&#39;ok&#39;</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">middleware</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">RedirectMiddleware</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;/my-test-router&#39;</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">assertOk</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">Redirect</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">factory</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">create</span><span style="color:#24292E;">([</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&#39;from&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;/my-test-router&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&#39;to&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;/new-homepage&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    ]);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;/my-test-router&#39;</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">assertRedirect</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;/new-homepage&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">createRequest</span><span style="color:#24292E;">($method, $uri)</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\Illuminate\\Http\\Request</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    $symfony_request </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\Symfony\\Component\\HttpFoundation\\Request</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">create</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">        $uri,</span></span>
<span class="line"><span style="color:#24292E;">        $method,</span></span>
<span class="line"><span style="color:#24292E;">    );</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\Illuminate\\Http\\Request</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">createFromBase</span><span style="color:#24292E;">($symfony_request);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">&lt;?</span><span style="color:#79B8FF;">php</span></span>
<span class="line"><span style="color:#6A737D;">// app\\Http\\Middleware\\RedirectMiddleware.php</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">namespace</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">App\\Http\\Middleware</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">use</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">App\\Models\\Redirect</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">use</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Closure</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">use</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Illuminate\\Http\\Request</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">RedirectMiddleware</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;">     * Handle an incoming request.</span></span>
<span class="line"><span style="color:#6A737D;">     *</span></span>
<span class="line"><span style="color:#6A737D;">     * </span><span style="color:#F97583;">@param</span><span style="color:#6A737D;">  </span><span style="color:#79B8FF;">\\Illuminate\\Http\\Request</span><span style="color:#6A737D;">  $request</span></span>
<span class="line"><span style="color:#6A737D;">     * </span><span style="color:#F97583;">@param</span><span style="color:#6A737D;">  </span><span style="color:#79B8FF;">\\Closure</span><span style="color:#6A737D;">(</span><span style="color:#79B8FF;">\\Illuminate\\Http\\Request</span><span style="color:#6A737D;">): (</span><span style="color:#79B8FF;">\\Illuminate\\Http\\Response</span><span style="color:#6A737D;">|</span><span style="color:#79B8FF;">\\Illuminate\\Http\\RedirectResponse</span><span style="color:#6A737D;">)  $</span><span style="color:#79B8FF;">next</span></span>
<span class="line"><span style="color:#6A737D;">     * @</span><span style="color:#79B8FF;">return</span><span style="color:#6A737D;"> </span><span style="color:#79B8FF;">\\Illuminate\\Http\\Response</span><span style="color:#6A737D;">|</span><span style="color:#79B8FF;">\\Illuminate\\Http\\RedirectResponse</span></span>
<span class="line"><span style="color:#6A737D;">     */</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">handle</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">Request</span><span style="color:#E1E4E8;"> $request, </span><span style="color:#79B8FF;">Closure</span><span style="color:#E1E4E8;"> $next)</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">        $path </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">parse_url</span><span style="color:#E1E4E8;">($request</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">fullUrl</span><span style="color:#E1E4E8;">(), </span><span style="color:#79B8FF;">PHP_URL_PATH</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">??</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;/&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line highlighted"><wbr></span>
<span class="line highlighted"><span style="color:#E1E4E8;">        $redirect </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Redirect</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">query</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">where</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;from&#39;</span><span style="color:#E1E4E8;">, $path)</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">first</span><span style="color:#E1E4E8;">();</span></span>
<span class="line highlighted"><wbr></span>
<span class="line highlighted"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;"> $redirect) {</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> $next($request);</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">        }</span></span>
<span class="line highlighted"><wbr></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">response</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">redirectTo</span><span style="color:#E1E4E8;">($redirect</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">to);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">&lt;?</span><span style="color:#005CC5;">php</span></span>
<span class="line"><span style="color:#6A737D;">// app\\Http\\Middleware\\RedirectMiddleware.php</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">namespace</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">App\\Http\\Middleware</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">use</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">App\\Models\\Redirect</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">use</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Closure</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">use</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Illuminate\\Http\\Request</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">RedirectMiddleware</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;">     * Handle an incoming request.</span></span>
<span class="line"><span style="color:#6A737D;">     *</span></span>
<span class="line"><span style="color:#6A737D;">     * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;">  </span><span style="color:#005CC5;">\\Illuminate\\Http\\Request</span><span style="color:#6A737D;">  $request</span></span>
<span class="line"><span style="color:#6A737D;">     * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;">  </span><span style="color:#005CC5;">\\Closure</span><span style="color:#6A737D;">(</span><span style="color:#005CC5;">\\Illuminate\\Http\\Request</span><span style="color:#6A737D;">): (</span><span style="color:#005CC5;">\\Illuminate\\Http\\Response</span><span style="color:#6A737D;">|</span><span style="color:#005CC5;">\\Illuminate\\Http\\RedirectResponse</span><span style="color:#6A737D;">)  $</span><span style="color:#005CC5;">next</span></span>
<span class="line"><span style="color:#6A737D;">     * @</span><span style="color:#005CC5;">return</span><span style="color:#6A737D;"> </span><span style="color:#005CC5;">\\Illuminate\\Http\\Response</span><span style="color:#6A737D;">|</span><span style="color:#005CC5;">\\Illuminate\\Http\\RedirectResponse</span></span>
<span class="line"><span style="color:#6A737D;">     */</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">handle</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">Request</span><span style="color:#24292E;"> $request, </span><span style="color:#005CC5;">Closure</span><span style="color:#24292E;"> $next)</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line highlighted"><span style="color:#24292E;">        $path </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">parse_url</span><span style="color:#24292E;">($request</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">fullUrl</span><span style="color:#24292E;">(), </span><span style="color:#005CC5;">PHP_URL_PATH</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">??</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;/&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line highlighted"><wbr></span>
<span class="line highlighted"><span style="color:#24292E;">        $redirect </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Redirect</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">query</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">where</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;from&#39;</span><span style="color:#24292E;">, $path)</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">first</span><span style="color:#24292E;">();</span></span>
<span class="line highlighted"><wbr></span>
<span class="line highlighted"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#24292E;"> $redirect) {</span></span>
<span class="line highlighted"><span style="color:#24292E;">            </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> $next($request);</span></span>
<span class="line highlighted"><span style="color:#24292E;">        }</span></span>
<span class="line highlighted"><wbr></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">response</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">redirectTo</span><span style="color:#24292E;">($redirect</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">to);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">&lt;?</span><span style="color:#79B8FF;">php</span></span>
<span class="line"><span style="color:#6A737D;">// app/Models/Redirect.php</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">namespace</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">App\\Models</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">use</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Illuminate\\Database\\Eloquent\\Factories\\HasFactory</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">use</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Illuminate\\Database\\Eloquent\\Model</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Redirect</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">extends</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Model</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">use</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">HasFactory</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">&lt;?</span><span style="color:#005CC5;">php</span></span>
<span class="line"><span style="color:#6A737D;">// app/Models/Redirect.php</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">namespace</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">App\\Models</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">use</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Illuminate\\Database\\Eloquent\\Factories\\HasFactory</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">use</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Illuminate\\Database\\Eloquent\\Model</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Redirect</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">extends</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Model</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">use</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">HasFactory</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">&lt;?</span><span style="color:#79B8FF;">php</span></span>
<span class="line"><span style="color:#6A737D;">// database/migrations/2022_03_23_121330_create_redirects_table.php</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">use</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Illuminate\\Database\\Migrations\\Migration</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">use</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Illuminate\\Database\\Schema\\Blueprint</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">use</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Illuminate\\Support\\Facades\\Schema</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">CreateRedirectsTable</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">extends</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Migration</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;">     * Run the migrations.</span></span>
<span class="line"><span style="color:#6A737D;">     *</span></span>
<span class="line"><span style="color:#6A737D;">     * </span><span style="color:#F97583;">@return</span><span style="color:#6A737D;"> </span><span style="color:#F97583;">void</span></span>
<span class="line"><span style="color:#6A737D;">     */</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">up</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">Schema</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;redirects&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">Blueprint</span><span style="color:#E1E4E8;"> $table) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            $table</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">id</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">            $table</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">string</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;from&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">            $table</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">string</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;to&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">            $table</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">timestamps</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">        });</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;">     * Reverse the migrations.</span></span>
<span class="line"><span style="color:#6A737D;">     *</span></span>
<span class="line"><span style="color:#6A737D;">     * </span><span style="color:#F97583;">@return</span><span style="color:#6A737D;"> </span><span style="color:#F97583;">void</span></span>
<span class="line"><span style="color:#6A737D;">     */</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">down</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">Schema</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">dropIfExists</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;redirects&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">&lt;?</span><span style="color:#005CC5;">php</span></span>
<span class="line"><span style="color:#6A737D;">// database/migrations/2022_03_23_121330_create_redirects_table.php</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">use</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Illuminate\\Database\\Migrations\\Migration</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">use</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Illuminate\\Database\\Schema\\Blueprint</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">use</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Illuminate\\Support\\Facades\\Schema</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">CreateRedirectsTable</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">extends</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Migration</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;">     * Run the migrations.</span></span>
<span class="line"><span style="color:#6A737D;">     *</span></span>
<span class="line"><span style="color:#6A737D;">     * </span><span style="color:#D73A49;">@return</span><span style="color:#6A737D;"> </span><span style="color:#D73A49;">void</span></span>
<span class="line"><span style="color:#6A737D;">     */</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">up</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">Schema</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">create</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;redirects&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">Blueprint</span><span style="color:#24292E;"> $table) {</span></span>
<span class="line"><span style="color:#24292E;">            $table</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">id</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">            $table</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">string</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;from&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">            $table</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">string</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;to&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">            $table</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">timestamps</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        });</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;">     * Reverse the migrations.</span></span>
<span class="line"><span style="color:#6A737D;">     *</span></span>
<span class="line"><span style="color:#6A737D;">     * </span><span style="color:#D73A49;">@return</span><span style="color:#6A737D;"> </span><span style="color:#D73A49;">void</span></span>
<span class="line"><span style="color:#6A737D;">     */</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">down</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">Schema</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">dropIfExists</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;redirects&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">&lt;?</span><span style="color:#79B8FF;">php</span></span>
<span class="line"><span style="color:#6A737D;">// database/factories/RedirectFactory.php</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">namespace</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Database\\Factories</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">use</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Illuminate\\Database\\Eloquent\\Factories\\Factory</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">RedirectFactory</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">extends</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Factory</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;">     * Define the model&#39;s default state.</span></span>
<span class="line"><span style="color:#6A737D;">     *</span></span>
<span class="line"><span style="color:#6A737D;">     * </span><span style="color:#F97583;">@return</span><span style="color:#6A737D;"> </span><span style="color:#F97583;">array</span></span>
<span class="line"><span style="color:#6A737D;">     */</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">definition</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">array</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#9ECBFF;">&#39;from&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">parse_url</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">faker</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">unique</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">url</span><span style="color:#E1E4E8;">(), </span><span style="color:#79B8FF;">PHP_URL_PATH</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#9ECBFF;">&#39;to&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">parse_url</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">faker</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">unique</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">url</span><span style="color:#E1E4E8;">(), </span><span style="color:#79B8FF;">PHP_URL_PATH</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">        ];</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">&lt;?</span><span style="color:#005CC5;">php</span></span>
<span class="line"><span style="color:#6A737D;">// database/factories/RedirectFactory.php</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">namespace</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Database\\Factories</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">use</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Illuminate\\Database\\Eloquent\\Factories\\Factory</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">RedirectFactory</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">extends</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Factory</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;">     * Define the model&#39;s default state.</span></span>
<span class="line"><span style="color:#6A737D;">     *</span></span>
<span class="line"><span style="color:#6A737D;">     * </span><span style="color:#D73A49;">@return</span><span style="color:#6A737D;"> </span><span style="color:#D73A49;">array</span></span>
<span class="line"><span style="color:#6A737D;">     */</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">definition</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">array</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#032F62;">&#39;from&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">parse_url</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">faker</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">unique</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">url</span><span style="color:#24292E;">(), </span><span style="color:#005CC5;">PHP_URL_PATH</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#032F62;">&#39;to&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">parse_url</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">faker</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">unique</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">url</span><span style="color:#24292E;">(), </span><span style="color:#005CC5;">PHP_URL_PATH</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">        ];</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div></div></div><h2 id="缓存-cache" tabindex="-1">缓存 Cache <a class="header-anchor" href="#缓存-cache" aria-label="Permalink to &quot;缓存 Cache&quot;">​</a></h2><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// controller</span></span>
<span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">CachedProductsApiController</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">extends</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Controller</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">__invoke</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Cache</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">remember</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;products&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">60</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> () {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Product</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">all</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">        });</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// test</span></span>
<span class="line"><span style="color:#B392F0;">it</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;calls cache remember method&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> () {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Assert</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">Cache</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">shouldReceive</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;remember&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">once</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">with</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;products&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">60</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">Closure</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">andReturn</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">Product</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">all</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Act</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">post</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">action</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">CachedProductsApiController</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// controller</span></span>
<span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">CachedProductsApiController</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">extends</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Controller</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">__invoke</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Cache</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">remember</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;products&#39;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">60</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Product</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">all</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        });</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// test</span></span>
<span class="line"><span style="color:#6F42C1;">it</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;calls cache remember method&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Assert</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">Cache</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">shouldReceive</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;remember&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">once</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">with</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;products&#39;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">60</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">Closure</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">andReturn</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">Product</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">all</span><span style="color:#24292E;">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Act</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">post</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">action</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">CachedProductsApiController</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><p>使用 Cache Facade 的 <code>shouldReceive</code> 方法来模拟 <code>remember</code> 方法。</p><p>还可以确保使用正确的参数调用它并返回预期的结果。</p><h2 id="文件上传-file-uploads" tabindex="-1">文件上传 File Uploads <a class="header-anchor" href="#文件上传-file-uploads" aria-label="Permalink to &quot;文件上传 File Uploads&quot;">​</a></h2><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">it</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;uploads CSV file&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> () {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Arrange</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">Storage</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">fake</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;uploads&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    $file </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">UploadedFile</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">fake</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">image</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;statistics.csv&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Act</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">post</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">action</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">CsvUploadController</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">), [</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;file&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> $file,</span></span>
<span class="line"><span style="color:#E1E4E8;">    ])</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">assertOk</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Assert</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">Storage</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">disk</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;uploads&#39;</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">assertExists</span><span style="color:#E1E4E8;">($file</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">hashName</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">it</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;uploads CSV file&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Arrange</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">Storage</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">fake</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;uploads&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    $file </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">UploadedFile</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">fake</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">image</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;statistics.csv&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Act</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">post</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">action</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">CsvUploadController</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">), [</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&#39;file&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> $file,</span></span>
<span class="line"><span style="color:#24292E;">    ])</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">assertOk</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Assert</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">Storage</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">disk</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;uploads&#39;</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">assertExists</span><span style="color:#24292E;">($file</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">hashName</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><p>Storage 门面的 <code>fake</code> 方法确保不会在真实的存储磁盘上存储任何文件。</p><p><code>UploadedFile</code> 类可以创建测试文件。</p><p>Storage 门面还提供了很多断言助手，例如 <code>assertExists</code>，以确保文件已上传。</p><h2 id="错误-exceptions" tabindex="-1">错误 Exceptions <a class="header-anchor" href="#错误-exceptions" aria-label="Permalink to &quot;错误 Exceptions&quot;">​</a></h2><p>有时抛出异常是一件好事，因为我们有意停止代码的执行。</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">it</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;stops if at least one account not found&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> () {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Act</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">artisan</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">MergeAccountsCommand</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">, [</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;userId&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;userToBeMergedId&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    ]);</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">throws</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">ModelNotFoundException</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">it</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;stops if at least one account not found&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Act</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">artisan</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">MergeAccountsCommand</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">, [</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&#39;userId&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&#39;userToBeMergedId&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    ]);</span></span>
<span class="line"><span style="color:#24292E;">})</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">throws</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">ModelNotFoundException</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">);</span></span></code></pre></div><p>可以使用 <a href="https://pestphp.com/" target="_blank" rel="noreferrer">Pest</a> 的 <code>throws</code> 方法确保抛出异常。</p><h2 id="单元测试-unit-tests" tabindex="-1">单元测试 Unit Tests <a class="header-anchor" href="#单元测试-unit-tests" aria-label="Permalink to &quot;单元测试 Unit Tests&quot;">​</a></h2><p>单元测试非常适合测试小段代码，例如单个方法。</p><p>不涉及其他依赖项。这使得它们非常快速且易于编写。</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-1ZaRo" id="tab-FEKinqN" checked="checked"><label for="tab-FEKinqN">test</label><input type="radio" name="group-1ZaRo" id="tab-ESvt9mc"><label for="tab-ESvt9mc">dto</label></div><div class="blocks"><div class="language-php vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">it</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;creates UserData object from paddle webhook call&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> () {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Arrange</span></span>
<span class="line"><span style="color:#E1E4E8;">    $payload </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&#39;client_email&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;test@test.com&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&#39;client_name&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;John doe&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&#39;client_country&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;AT&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    ];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Act</span></span>
<span class="line"><span style="color:#E1E4E8;">    $userData </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">UserData</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">fromWebhookPayload</span><span style="color:#E1E4E8;">($payload);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Assert</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">expect</span><span style="color:#E1E4E8;">($userData)</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">email</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">toBe</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;test@test.com&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">name</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">toBe</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;John doe&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">country</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">toBe</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;AT&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">it</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;creates UserData object from paddle webhook call&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Arrange</span></span>
<span class="line"><span style="color:#24292E;">    $payload </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&#39;client_email&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;test@test.com&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&#39;client_name&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;John doe&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&#39;client_country&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;AT&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    ];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Act</span></span>
<span class="line"><span style="color:#24292E;">    $userData </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">UserData</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">fromWebhookPayload</span><span style="color:#24292E;">($payload);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Assert</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">expect</span><span style="color:#24292E;">($userData)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">email</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">toBe</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;test@test.com&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">name</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">toBe</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;John doe&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">country</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">toBe</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;AT&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">readonly</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">UserData</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">__construct</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">string</span><span style="color:#E1E4E8;"> $email,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">string</span><span style="color:#E1E4E8;"> $name,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">string</span><span style="color:#E1E4E8;"> $country,</span></span>
<span class="line"><span style="color:#E1E4E8;">    )</span></span>
<span class="line"><span style="color:#E1E4E8;">    {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">fromWebhookPayload</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">array</span><span style="color:#E1E4E8;"> $webhookCallData)</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">UserData</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">self</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">            $webhookCallData[</span><span style="color:#9ECBFF;">&#39;client_email&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">            $webhookCallData[</span><span style="color:#9ECBFF;">&#39;client_name&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">            $webhookCallData[</span><span style="color:#9ECBFF;">&#39;client_country&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">        );</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">final</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">readonly</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">UserData</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">__construct</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">string</span><span style="color:#24292E;"> $email,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">string</span><span style="color:#24292E;"> $name,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">string</span><span style="color:#24292E;"> $country,</span></span>
<span class="line"><span style="color:#24292E;">    )</span></span>
<span class="line"><span style="color:#24292E;">    {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">fromWebhookPayload</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">array</span><span style="color:#24292E;"> $webhookCallData)</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">UserData</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">self</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">            $webhookCallData[</span><span style="color:#032F62;">&#39;client_email&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">            $webhookCallData[</span><span style="color:#032F62;">&#39;client_name&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">            $webhookCallData[</span><span style="color:#032F62;">&#39;client_country&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">        );</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div></div></div><p>它包含一个从 Webhook 负载创建新实例的方法，在相应的测试中，也只测试这个方法返回的内容。</p><h2 id="http请求-1" tabindex="-1">Http请求 <a class="header-anchor" href="#http请求-1" aria-label="Permalink to &quot;Http请求&quot;">​</a></h2><h3 id="伪造" tabindex="-1">伪造 <a class="header-anchor" href="#伪造" aria-label="Permalink to &quot;伪造&quot;">​</a></h3><p>当在应用程序中进行 HTTP 调用，这可能是从外部 API 获取数据或将数据发送到另一个服务。</p><p>经常希望在测试中伪造这些调用，这样就不必在测试时依赖外部服务。</p><p>HTTP 上的伪造方法将确保不会进行真正的调用，并且响应始终是 200 状态码。</p><p>比如正在测试一个从外部 API 获取数据并将其保存到数据库的操作：</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">it</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;imports product&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Arrange</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">Http</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">fake</span><span style="color:#E1E4E8;">([</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;https://christoph-rumpel.com/import&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Http</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">response</span><span style="color:#E1E4E8;">([</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#9ECBFF;">&#39;title&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;My new product&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#9ECBFF;">&#39;description&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;This is a description&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        ]),</span></span>
<span class="line"><span style="color:#E1E4E8;">    ]);</span></span>
<span class="line"><span style="color:#E1E4E8;">    $user </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">User</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">factory</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Act</span></span>
<span class="line"><span style="color:#E1E4E8;">    (</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">ImportProductAction</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">handle</span><span style="color:#E1E4E8;">($user);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Assert</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">assertDatabaseHas</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">Product</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">, [</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;title&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;My new product&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;description&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;This is a description&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    ]);</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">it</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;imports product&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Arrange</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">Http</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">fake</span><span style="color:#24292E;">([</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&#39;https://christoph-rumpel.com/import&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Http</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">response</span><span style="color:#24292E;">([</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#032F62;">&#39;title&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;My new product&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#032F62;">&#39;description&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;This is a description&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        ]),</span></span>
<span class="line"><span style="color:#24292E;">    ]);</span></span>
<span class="line"><span style="color:#24292E;">    $user </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">User</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">factory</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">create</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Act</span></span>
<span class="line"><span style="color:#24292E;">    (</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">ImportProductAction</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">handle</span><span style="color:#24292E;">($user);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Assert</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">assertDatabaseHas</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">Product</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">, [</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&#39;title&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;My new product&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&#39;description&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;This is a description&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    ]);</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><h3 id="测试请求" tabindex="-1">测试请求 <a class="header-anchor" href="#测试请求" aria-label="Permalink to &quot;测试请求&quot;">​</a></h3><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">it</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;make the right call&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> () {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Arrange</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">Http</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">fake</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    $user </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">User</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">factory</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Act</span></span>
<span class="line"><span style="color:#E1E4E8;">    (</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">ImportProductAction</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">handle</span><span style="color:#E1E4E8;">($user);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Assert</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">Http</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">assertSent</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> ($request) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> $request</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">url</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;https://christoph-rumpel.com/import&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> $request[</span><span style="color:#9ECBFF;">&#39;accessToken&#39;</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;faker-token&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    });</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">it</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;make the right call&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Arrange</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">Http</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">fake</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    $user </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">User</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">factory</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">create</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Act</span></span>
<span class="line"><span style="color:#24292E;">    (</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">ImportProductAction</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">handle</span><span style="color:#24292E;">($user);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Assert</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">Http</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">assertSent</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> ($request) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> $request</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">url</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;https://christoph-rumpel.com/import&#39;</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> $request[</span><span style="color:#032F62;">&#39;accessToken&#39;</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;faker-token&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    });</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><p>可以在<a href="https://laravel.com/docs/master/http-client#inspecting-requests" target="_blank" rel="noreferrer">官网</a>了解更多有关测试伪造 HTTP 调用的信息。</p><h2 id="模拟依赖关系-mock" tabindex="-1">模拟依赖关系 mock <a class="header-anchor" href="#模拟依赖关系-mock" aria-label="Permalink to &quot;模拟依赖关系 mock&quot;">​</a></h2><p>当使用具有依赖关系的代码时，模拟它们会很有帮助，这将使您专注于代码的逻辑而不是依赖项。</p><p>这也意味着模拟对于任何类型的测试都很有用。</p><p>在测试中希望重点测试是否发送了正确的电子邮件。</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-wO1hh" id="tab-gHxuykD" checked="checked"><label for="tab-gHxuykD">test</label><input type="radio" name="group-wO1hh" id="tab-N6RbBO9"><label for="tab-N6RbBO9">controller</label></div><div class="blocks"><div class="language-php vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">it</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;sends payment successful mail&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> () {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Arrange</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">Mail</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">fake</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Expect</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">mock</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">PaymentProvider</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">shouldReceive</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;handle&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">once</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Act</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">post</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;payment&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Assert</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">Mail</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">assertSent</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">PaymentSuccessfulMail</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">it</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;sends payment successful mail&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Arrange</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">Mail</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">fake</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Expect</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">mock</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">PaymentProvider</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">shouldReceive</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;handle&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">once</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Act</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">post</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;payment&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Assert</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">Mail</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">assertSent</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">PaymentSuccessfulMail</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">PaymentController</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">extends</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Controller</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">__invoke</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">PaymentProvider</span><span style="color:#E1E4E8;"> $paymentProvider, </span><span style="color:#79B8FF;">Mailer</span><span style="color:#E1E4E8;"> $mailer)</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span></span>
<span class="line"><span style="color:#E1E4E8;">        $paymentProvider</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">handle</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        $mailer</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">to</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">auth</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">user</span><span style="color:#E1E4E8;">())</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">send</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">PaymentSuccessfulMail</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">PaymentController</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">extends</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Controller</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">__invoke</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">PaymentProvider</span><span style="color:#24292E;"> $paymentProvider, </span><span style="color:#005CC5;">Mailer</span><span style="color:#24292E;"> $mailer)</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line"><span style="color:#24292E;">        $paymentProvider</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">handle</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        $mailer</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">to</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">auth</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">user</span><span style="color:#24292E;">())</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">send</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">PaymentSuccessfulMail</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div></div></div><h2 id="架构测试-architecture" tabindex="-1">架构测试 Architecture <a class="header-anchor" href="#架构测试-architecture" aria-label="Permalink to &quot;架构测试 Architecture&quot;">​</a></h2><p><a href="https://pestphp.com" target="_blank" rel="noreferrer">PEST</a> 引入了一种称为架构测试的新型测试，这是一种测试应用程序架构并确保它遵循定义的代码规则，并且可以确保代码保持干净且可维护的好方法。</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;no forgotten debug statements&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">expect</span><span style="color:#E1E4E8;">([</span><span style="color:#9ECBFF;">&#39;dd&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;dump&#39;</span><span style="color:#E1E4E8;">])</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">not</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">toBeUsed</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;no forgotten debug statements&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">expect</span><span style="color:#24292E;">([</span><span style="color:#032F62;">&#39;dd&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;dump&#39;</span><span style="color:#24292E;">])</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">not</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">toBeUsed</span><span style="color:#24292E;">();</span></span></code></pre></div><p>还可以定义更多规则。在<a href="https://pestphp.com/docs/arch-testing" target="_blank" rel="noreferrer">官方文档</a>中阅读有关它们的更多信息。</p><p>还可以参考 <a href="https://github.com/cachethq/core/tree/main/tests/Architecture" target="_blank" rel="noreferrer">cachethq/core</a> 仓库的测试代码风格。</p><h2 id="定时任务-schedules" tabindex="-1">定时任务 Schedules <a class="header-anchor" href="#定时任务-schedules" aria-label="Permalink to &quot;定时任务 Schedules&quot;">​</a></h2><p>断言定时任务一定会按照指定的规则执行。</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-OEcR7" id="tab-ZhJG2b7" checked="checked"><label for="tab-ZhJG2b7">App\\Console\\Kernel.php</label><input type="radio" name="group-OEcR7" id="tab-aZV88My"><label for="tab-aZV88My">Tests\\Integrations\\Console\\KernelTest.php</label></div><div class="blocks"><div class="language-php vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">&lt;?</span><span style="color:#79B8FF;">php</span></span>
<span class="line"><span style="color:#6A737D;">// App\\Console\\Kernel</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// ...</span></span>
<span class="line"><span style="color:#F97583;">protected</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">schedule</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">Schedule</span><span style="color:#E1E4E8;"> $schedule)</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    $schedule</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">command</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;check:api-token&#39;</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">dailyAt</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;10:00&#39;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// 检查是否需要发送apiToken到期通知</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">&lt;?</span><span style="color:#005CC5;">php</span></span>
<span class="line"><span style="color:#6A737D;">// App\\Console\\Kernel</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// ...</span></span>
<span class="line"><span style="color:#D73A49;">protected</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">schedule</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">Schedule</span><span style="color:#24292E;"> $schedule)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    $schedule</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">command</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;check:api-token&#39;</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">dailyAt</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;10:00&#39;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// 检查是否需要发送apiToken到期通知</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">&lt;?</span><span style="color:#79B8FF;">php</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">use</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Illuminate\\Console\\Scheduling\\Event</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">use</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Illuminate\\Console\\Scheduling\\Schedule</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">it</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;has some schedules&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">string</span><span style="color:#E1E4E8;"> $command, $expression) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    $schedule </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">app</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">Schedule</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">/** </span><span style="color:#F97583;">@var</span><span style="color:#6A737D;"> </span><span style="color:#79B8FF;">Event</span><span style="color:#6A737D;"> $event */</span></span>
<span class="line"><span style="color:#E1E4E8;">    $event </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">collect</span><span style="color:#E1E4E8;">($schedule</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">events</span><span style="color:#E1E4E8;">())</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">filter</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">fn</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">Event</span><span style="color:#E1E4E8;"> $event) =&gt; </span><span style="color:#79B8FF;">Str</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">containsAll</span><span style="color:#E1E4E8;">($event</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">command, [$command]),</span></span>
<span class="line"><span style="color:#E1E4E8;">        )</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">first</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">expect</span><span style="color:#E1E4E8;">($event)</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">toBeInstanceOf</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">Event</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">expression</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">toEqual</span><span style="color:#E1E4E8;">($expression);</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">with</span><span style="color:#E1E4E8;">([</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&#39;check api token command is scheduled at 10 am&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> [</span><span style="color:#9ECBFF;">&#39;check:api_token&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;0 10 * * *&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">]);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">&lt;?</span><span style="color:#005CC5;">php</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">use</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Illuminate\\Console\\Scheduling\\Event</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">use</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Illuminate\\Console\\Scheduling\\Schedule</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">it</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;has some schedules&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">string</span><span style="color:#24292E;"> $command, $expression) {</span></span>
<span class="line"><span style="color:#24292E;">    $schedule </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">app</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">Schedule</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">/** </span><span style="color:#D73A49;">@var</span><span style="color:#6A737D;"> </span><span style="color:#005CC5;">Event</span><span style="color:#6A737D;"> $event */</span></span>
<span class="line"><span style="color:#24292E;">    $event </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">collect</span><span style="color:#24292E;">($schedule</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">events</span><span style="color:#24292E;">())</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">filter</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">fn</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">Event</span><span style="color:#24292E;"> $event) =&gt; </span><span style="color:#005CC5;">Str</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">containsAll</span><span style="color:#24292E;">($event</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">command, [$command]),</span></span>
<span class="line"><span style="color:#24292E;">        )</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">first</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">expect</span><span style="color:#24292E;">($event)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">toBeInstanceOf</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">Event</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">expression</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">toEqual</span><span style="color:#24292E;">($expression);</span></span>
<span class="line"><span style="color:#24292E;">})</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">with</span><span style="color:#24292E;">([</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;check api token command is scheduled at 10 am&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&#39;check:api_token&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;0 10 * * *&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">]);</span></span></code></pre></div></div></div><p>其他的简单测试示例代码 <a href="https://github.com/curder/laravel-console-command-test-demo" target="_blank" rel="noreferrer">curder/laravel-console-command-test-demo</a> 。</p><h2 id="相关阅读" tabindex="-1">相关阅读 <a class="header-anchor" href="#相关阅读" aria-label="Permalink to &quot;相关阅读&quot;">​</a></h2><ul><li><a href="https://christoph-rumpel.com/2023/3/everything-you-can-test-in-your-laravel-application#testing-validation" target="_blank" rel="noreferrer">Everything You Can Test In Your Laravel Application</a></li><li><a href="https://laracasts.com/series/pest-driven-laravel" target="_blank" rel="noreferrer">Pest Driven Laravel - Laracasts Video Course</a></li><li><a href="https://learn.christoph-rumpel.com/products/getting-started-with-tdd-in-php" target="_blank" rel="noreferrer">Getting Started with TDD in PHP - Video Course</a></li><li><a href="https://christoph-rumpel.com/2021/4/how-I-test-livewire-components" target="_blank" rel="noreferrer">How I Test Livewire Components</a></li><li><a href="https://github.com/cachethq/core/tree/main/tests" target="_blank" rel="noreferrer">cachethq/core - GitHub Repository</a></li><li><a href="https://github.com/laravelio/laravel.io/tree/main/tests" target="_blank" rel="noreferrer">laravelio/laravel.io - Github Repository</a></li></ul>`,129),e=[o];function t(c,r,y,E,i,F){return a(),n("div",null,e)}const h=s(p,[["render",t]]);export{u as __pageData,h as default};
