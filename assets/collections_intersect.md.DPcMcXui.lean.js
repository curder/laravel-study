import{_ as i,c as a,a2 as t,o as e}from"./chunks/framework.BL1pH_9P.js";const d=JSON.parse('{"title":"intersect","description":"","frontmatter":{},"headers":[],"relativePath":"collections/intersect.md","filePath":"collections/intersect.md","lastUpdated":1695893036000}'),n={name:"collections/intersect.md"};function l(h,s,p,k,r,o){return e(),a("div",null,s[0]||(s[0]=[t(`<h1 id="intersect" tabindex="-1">intersect <a class="header-anchor" href="#intersect" aria-label="Permalink to &quot;intersect&quot;">​</a></h1><blockquote><p>从原集合中删除不在给定数组或集合中的任何值，最终的集合会保留原集合的键，相当于两个集合的交集。</p></blockquote><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">collect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Desk&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Sofa&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Chair&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    -&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">intersect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Desk&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Chair&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Bookcase&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// [ &quot;Desk&quot;, &quot;Chair&quot;]</span></span></code></pre></div><blockquote><p>不改变原数组或集合。</p></blockquote><h2 id="相关方法" tabindex="-1">相关方法 <a class="header-anchor" href="#相关方法" aria-label="Permalink to &quot;相关方法&quot;">​</a></h2><ul><li><a href="./union.html">union</a></li><li><a href="./diff.html">diff</a></li><li><a href="./intersectByKeys.html">intersectByKeys</a></li></ul>`,6)]))}const E=i(n,[["render",l]]);export{d as __pageData,E as default};
