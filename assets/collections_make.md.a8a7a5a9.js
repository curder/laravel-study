import{_ as s,o as a,c as l,Q as n}from"./chunks/framework.e8ee2c8f.js";const h=JSON.parse('{"title":"make","description":"","frontmatter":{},"headers":[],"relativePath":"collections/make.md","filePath":"collections/make.md","lastUpdated":1695895732000}'),o={name:"collections/make.md"},p=n(`<h1 id="make" tabindex="-1">make <a class="header-anchor" href="#make" aria-label="Permalink to &quot;make&quot;">​</a></h1><blockquote><p>静态 make 方法创建一个新的集合实例</p></blockquote><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">use</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Illuminate\\Support\\Collection</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">Collection</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">make</span><span style="color:#E1E4E8;">([</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">]); </span><span style="color:#6A737D;">// [1, 2, 3]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 等同于使用 collect 方法</span></span>
<span class="line"><span style="color:#B392F0;">collect</span><span style="color:#E1E4E8;">([</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">]); </span><span style="color:#6A737D;">// [1, 2, 3]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">use</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Illuminate\\Support\\Collection</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">Collection</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">make</span><span style="color:#24292E;">([</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">]); </span><span style="color:#6A737D;">// [1, 2, 3]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 等同于使用 collect 方法</span></span>
<span class="line"><span style="color:#6F42C1;">collect</span><span style="color:#24292E;">([</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">]); </span><span style="color:#6A737D;">// [1, 2, 3]</span></span></code></pre></div><h2 id="相关方法" tabindex="-1">相关方法 <a class="header-anchor" href="#相关方法" aria-label="Permalink to &quot;相关方法&quot;">​</a></h2><ul><li><a href="./macro.html">macro</a></li></ul>`,5),e=[p];function t(c,r,i,y,E,d){return a(),l("div",null,e)}const _=s(o,[["render",t]]);export{h as __pageData,_ as default};
