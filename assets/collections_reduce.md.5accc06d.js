import{_ as s,o as a,c as n,Q as p}from"./chunks/framework.5499cfac.js";const h=JSON.parse('{"title":"reduce","description":"","frontmatter":{},"headers":[],"relativePath":"collections/reduce.md","filePath":"collections/reduce.md","lastUpdated":1648089437000}'),l={name:"collections/reduce.md"},o=p(`<h1 id="reduce" tabindex="-1">reduce <a class="header-anchor" href="#reduce" aria-label="Permalink to &quot;reduce&quot;">​</a></h1><p>将每次迭代的结果传递给下一次迭代直到集合减少为单个值。</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">collect</span><span style="color:#E1E4E8;">([</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">])</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">reduce</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> ($carry, $item) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> $carry </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> $item;</span></span>
<span class="line"><span style="color:#E1E4E8;">}); </span><span style="color:#6A737D;">// 6</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">collect</span><span style="color:#24292E;">([</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">])</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">reduce</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> ($carry, $item) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> $carry </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> $item;</span></span>
<span class="line"><span style="color:#24292E;">}); </span><span style="color:#6A737D;">// 6</span></span></code></pre></div><blockquote><p>第一次迭代时 <code>$carry</code> 的数值为 <code>null</code>；</p></blockquote><p>也可以通过传入第二个参数到 <code>reduce()</code> 来指定它的初始值：</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">collect</span><span style="color:#E1E4E8;">([</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">])</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">reduce</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> ($carry, $item) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> $carry </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> $item;</span></span>
<span class="line"><span style="color:#E1E4E8;">}, </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// 10</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">collect</span><span style="color:#24292E;">([</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">])</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">reduce</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> ($carry, $item) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> $carry </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> $item;</span></span>
<span class="line"><span style="color:#24292E;">}, </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// 10</span></span></code></pre></div><blockquote><p>它与 <a href="./map.html">map</a> 的区别是 <a href="./map.html">map</a> 传入集合或数组，返回是集合；</p><p>而<code>reduce()</code>传入数组或集合，返回单一值。</p></blockquote>`,7),e=[o];function c(t,r,y,E,i,d){return a(),n("div",null,e)}const F=s(l,[["render",c]]);export{h as __pageData,F as default};
