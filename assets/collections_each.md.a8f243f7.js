import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.aefb929a.js";const h=JSON.parse('{"title":"each","description":"","frontmatter":{},"headers":[],"relativePath":"collections/each.md","filePath":"collections/each.md","lastUpdated":1695376233000}'),o={name:"collections/each.md"},p=l(`<h1 id="each" tabindex="-1">each <a class="header-anchor" href="#each" aria-label="Permalink to &quot;each&quot;">​</a></h1><p>迭代集合中的内容，<strong>不改变原集合</strong>的同时将其传递到回调函数中。</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">collect</span><span style="color:#E1E4E8;">([</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">])</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">each</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">fn</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> $value) =&gt; </span><span style="color:#B392F0;">dump</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;The current value is </span><span style="color:#E1E4E8;">\${value}</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// &quot;The current value is 1&quot;</span></span>
<span class="line"><span style="color:#6A737D;">// &quot;The current value is 2&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">collect</span><span style="color:#24292E;">([</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">])</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">each</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">fn</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> $value) =&gt; </span><span style="color:#6F42C1;">dump</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;The current value is </span><span style="color:#24292E;">\${value}</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// &quot;The current value is 1&quot;</span></span>
<span class="line"><span style="color:#6A737D;">// &quot;The current value is 2&quot;</span></span></code></pre></div><blockquote><p>不要尝试在回调函数中直接调用 <code>return</code> 改变集合，因为 <code>each</code> 方法不会改变原集合。</p><p>如果需要执行改变原数组的话可以使用 <a href="./map.html">map</a> 方法。例如：</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">collect</span><span style="color:#E1E4E8;">([</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">])</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">each</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">fn</span><span style="color:#E1E4E8;"> ($value) =&gt; </span><span style="color:#9ECBFF;">&quot;The current value is </span><span style="color:#E1E4E8;">\${value}</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">collect</span><span style="color:#24292E;">([</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">])</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">each</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">fn</span><span style="color:#24292E;"> ($value) =&gt; </span><span style="color:#032F62;">&quot;The current value is </span><span style="color:#24292E;">\${value}</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">);</span></span></code></pre></div></blockquote><h2 id="中断迭代" tabindex="-1">中断迭代 <a class="header-anchor" href="#中断迭代" aria-label="Permalink to &quot;中断迭代&quot;">​</a></h2><p>如果要中断对内容的迭代，那就从回调中返回 <code>false</code>，如下示例：</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">collect</span><span style="color:#E1E4E8;">([</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">])</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">each</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> ($value) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> ($value </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">dump</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;The current value is </span><span style="color:#E1E4E8;">\${value}</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// &quot;The current value is 1&quot;</span></span>
<span class="line"><span style="color:#6A737D;">// &quot;The current value is 2&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">collect</span><span style="color:#24292E;">([</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">])</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">each</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> ($value) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> ($value </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">dump</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;The current value is </span><span style="color:#24292E;">\${value}</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// &quot;The current value is 1&quot;</span></span>
<span class="line"><span style="color:#6A737D;">// &quot;The current value is 2&quot;</span></span></code></pre></div><blockquote><p>当触发条件返回 <code>false</code> 后的循环停止了。</p></blockquote><h2 id="获取二维数组" tabindex="-1">获取二维数组 <a class="header-anchor" href="#获取二维数组" aria-label="Permalink to &quot;获取二维数组&quot;">​</a></h2><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">collect</span><span style="color:#E1E4E8;">([</span></span>
<span class="line"><span style="color:#E1E4E8;">  [</span><span style="color:#9ECBFF;">&quot;banners&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">45</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;California&quot;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">  [</span><span style="color:#9ECBFF;">&quot;apples&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">20</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Florida&quot;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">  [</span><span style="color:#9ECBFF;">&quot;coconuts&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">60</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Texas&quot;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">])</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">each</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> ($value) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">dump</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;We have {</span><span style="color:#E1E4E8;">$value</span><span style="color:#9ECBFF;">[</span><span style="color:#79B8FF;">1</span><span style="color:#9ECBFF;">]} {</span><span style="color:#E1E4E8;">$value</span><span style="color:#9ECBFF;">[</span><span style="color:#79B8FF;">0</span><span style="color:#9ECBFF;">]} in our {</span><span style="color:#E1E4E8;">$value</span><span style="color:#9ECBFF;">[</span><span style="color:#79B8FF;">2</span><span style="color:#9ECBFF;">]} store.&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// &quot;We have 45 banners in our California store.&quot;</span></span>
<span class="line"><span style="color:#6A737D;">// &quot;We have 20 apples in our Florida store.&quot;</span></span>
<span class="line"><span style="color:#6A737D;">// &quot;We have 60 coconuts in our Texas store.&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">collect</span><span style="color:#24292E;">([</span></span>
<span class="line"><span style="color:#24292E;">  [</span><span style="color:#032F62;">&quot;banners&quot;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">45</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;California&quot;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">  [</span><span style="color:#032F62;">&quot;apples&quot;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">20</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Florida&quot;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">  [</span><span style="color:#032F62;">&quot;coconuts&quot;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">60</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Texas&quot;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">])</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">each</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> ($value) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">dump</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;We have {</span><span style="color:#24292E;">$value</span><span style="color:#032F62;">[</span><span style="color:#005CC5;">1</span><span style="color:#032F62;">]} {</span><span style="color:#24292E;">$value</span><span style="color:#032F62;">[</span><span style="color:#005CC5;">0</span><span style="color:#032F62;">]} in our {</span><span style="color:#24292E;">$value</span><span style="color:#032F62;">[</span><span style="color:#005CC5;">2</span><span style="color:#032F62;">]} store.&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// &quot;We have 45 banners in our California store.&quot;</span></span>
<span class="line"><span style="color:#6A737D;">// &quot;We have 20 apples in our Florida store.&quot;</span></span>
<span class="line"><span style="color:#6A737D;">// &quot;We have 60 coconuts in our Texas store.&quot;</span></span></code></pre></div><blockquote><p>在循环的回调函数中通过下标获取对应值的方式不是很优雅，可能过一段时间就忘了对应的值是什么。</p><p>有没有更加优雅的方式优化这个问题呢？可以使用 <a href="./eachSpread.html">eachSpread</a> 方法。</p></blockquote><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">collect</span><span style="color:#E1E4E8;">([</span></span>
<span class="line"><span style="color:#E1E4E8;">  [</span><span style="color:#9ECBFF;">&quot;banners&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">45</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;California&quot;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">  [</span><span style="color:#9ECBFF;">&quot;apples&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">20</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Florida&quot;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">  [</span><span style="color:#9ECBFF;">&quot;coconuts&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">60</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Texas&quot;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">])</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">eachSpread</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> ($product, $qty, $location) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">dump</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;We have {</span><span style="color:#E1E4E8;">$product</span><span style="color:#9ECBFF;">} {</span><span style="color:#E1E4E8;">$qty</span><span style="color:#9ECBFF;">} in our {</span><span style="color:#E1E4E8;">$location</span><span style="color:#9ECBFF;">} store.&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// &quot;We have banners 45 in our California store.&quot;</span></span>
<span class="line"><span style="color:#6A737D;">// &quot;We have apples 20 in our Florida store.&quot;</span></span>
<span class="line"><span style="color:#6A737D;">// &quot;We have coconuts 60 in our Texas store.&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">collect</span><span style="color:#24292E;">([</span></span>
<span class="line"><span style="color:#24292E;">  [</span><span style="color:#032F62;">&quot;banners&quot;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">45</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;California&quot;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">  [</span><span style="color:#032F62;">&quot;apples&quot;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">20</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Florida&quot;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">  [</span><span style="color:#032F62;">&quot;coconuts&quot;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">60</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Texas&quot;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">])</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">eachSpread</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> ($product, $qty, $location) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">dump</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;We have {</span><span style="color:#24292E;">$product</span><span style="color:#032F62;">} {</span><span style="color:#24292E;">$qty</span><span style="color:#032F62;">} in our {</span><span style="color:#24292E;">$location</span><span style="color:#032F62;">} store.&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// &quot;We have banners 45 in our California store.&quot;</span></span>
<span class="line"><span style="color:#6A737D;">// &quot;We have apples 20 in our Florida store.&quot;</span></span>
<span class="line"><span style="color:#6A737D;">// &quot;We have coconuts 60 in our Texas store.&quot;</span></span></code></pre></div><blockquote><p>可以看到通过调用 <a href="./eachSpread.html">eachSpread</a> 方法，在回调函数中有更明确的变量可供使用，变得更加有寓意话。</p></blockquote><h2 id="相关方法" tabindex="-1">相关方法 <a class="header-anchor" href="#相关方法" aria-label="Permalink to &quot;相关方法&quot;">​</a></h2><ul><li><a href="./map.html">map</a></li><li><a href="./mapSpread.html">mapSpread</a></li><li><a href="./eachSpread.html">eachSpread</a></li></ul>`,15),e=[p];function t(c,r,E,y,u,i){return a(),n("div",null,e)}const q=s(o,[["render",t]]);export{h as __pageData,q as default};
