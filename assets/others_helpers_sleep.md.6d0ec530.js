import{_ as s,o as n,c as a,Q as p}from"./chunks/framework.16715cb7.js";const h=JSON.parse('{"title":"Sleep 暂停执行","description":"","frontmatter":{},"headers":[],"relativePath":"others/helpers/sleep.md","filePath":"others/helpers/sleep.md","lastUpdated":1701053143000}'),l={name:"others/helpers/sleep.md"},o=p(`<h1 id="sleep-暂停执行" tabindex="-1">Sleep 暂停执行 <a class="header-anchor" href="#sleep-暂停执行" aria-label="Permalink to &quot;Sleep 暂停执行&quot;">​</a></h1><p>Laravel 的 <a href="https://laravel.com/docs/master/helpers#sleep" target="_blank" rel="noreferrer">Sleep 类</a>是 PHP 原生 <a href="https://www.php.net/manual/en/function.sleep" target="_blank" rel="noreferrer">sleep</a> 和 <a href="https://www.php.net/manual/en/function.usleep" target="_blank" rel="noreferrer">usleep</a> 函数的轻量级包装器，提供了更好的可测试性，同时还公开了一个开发人员友好的 API 来处理时间：</p><h2 id="基本使用" tabindex="-1">基本使用 <a class="header-anchor" href="#基本使用" aria-label="Permalink to &quot;基本使用&quot;">​</a></h2><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">use</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Illuminate\\Support\\Sleep</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">$waiting </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#F97583;">while</span><span style="color:#E1E4E8;"> ($waiting) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">Sleep</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">for</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">second</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">    $waiting </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">/* ... */</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">use</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Illuminate\\Support\\Sleep</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">$waiting </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#D73A49;">while</span><span style="color:#24292E;"> ($waiting) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">Sleep</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">for</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">second</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">    $waiting </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">/* ... */</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>Sleep 类提供了多种方法来使用不同的时间单位：</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">&lt;?</span><span style="color:#79B8FF;">php</span></span>
<span class="line"><span style="color:#F97583;">use</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Illuminate\\Support\\Sleep</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 暂停执行90秒</span></span>
<span class="line"><span style="color:#79B8FF;">Sleep</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">for</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1.5</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">minutes</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#6A737D;">// 暂停执行2秒</span></span>
<span class="line"><span style="color:#79B8FF;">Sleep</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">for</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">seconds</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#6A737D;">// 暂停执行500毫秒</span></span>
<span class="line"><span style="color:#79B8FF;">Sleep</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">for</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">500</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">milliseconds</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#6A737D;">// 暂停执行5000微秒</span></span>
<span class="line"><span style="color:#79B8FF;">Sleep</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">for</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">5000</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">microseconds</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#6A737D;">// 暂停执行直到给定时间(1分钟)</span></span>
<span class="line"><span style="color:#79B8FF;">Sleep</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">until</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">now</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">addMinute</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#6A737D;">// PHP本机 sleep 函数的别名</span></span>
<span class="line"><span style="color:#79B8FF;">Sleep</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">sleep</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#6A737D;">// PHP本机 usleep 函数的别名</span></span>
<span class="line"><span style="color:#79B8FF;">Sleep</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">usleep</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">5000</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">&lt;?</span><span style="color:#005CC5;">php</span></span>
<span class="line"><span style="color:#D73A49;">use</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Illuminate\\Support\\Sleep</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 暂停执行90秒</span></span>
<span class="line"><span style="color:#005CC5;">Sleep</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">for</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1.5</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">minutes</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6A737D;">// 暂停执行2秒</span></span>
<span class="line"><span style="color:#005CC5;">Sleep</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">for</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">seconds</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6A737D;">// 暂停执行500毫秒</span></span>
<span class="line"><span style="color:#005CC5;">Sleep</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">for</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">500</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">milliseconds</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6A737D;">// 暂停执行5000微秒</span></span>
<span class="line"><span style="color:#005CC5;">Sleep</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">for</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">5000</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">microseconds</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6A737D;">// 暂停执行直到给定时间(1分钟)</span></span>
<span class="line"><span style="color:#005CC5;">Sleep</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">until</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">now</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">addMinute</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6A737D;">// PHP本机 sleep 函数的别名</span></span>
<span class="line"><span style="color:#005CC5;">Sleep</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">sleep</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6A737D;">// PHP本机 usleep 函数的别名</span></span>
<span class="line"><span style="color:#005CC5;">Sleep</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">usleep</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">5000</span><span style="color:#24292E;">);</span></span></code></pre></div><h2 id="and-方法" tabindex="-1"><code>and</code> 方法 <a class="header-anchor" href="#and-方法" aria-label="Permalink to &quot;\`and\` 方法&quot;">​</a></h2><p><code>and</code> 方法用于轻松组合时间单位。</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// 暂停执行1分中10微秒</span></span>
<span class="line"><span style="color:#79B8FF;">Sleep</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">for</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">second</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">and</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">milliseconds</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 暂停执行1分中10微秒</span></span>
<span class="line"><span style="color:#005CC5;">Sleep</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">for</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">second</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">and</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">milliseconds</span><span style="color:#24292E;">();</span></span></code></pre></div><h2 id="测试" tabindex="-1">测试 <a class="header-anchor" href="#测试" aria-label="Permalink to &quot;测试&quot;">​</a></h2><p>当测试使用 Sleep 类或 PHP 的 sleep 函数的代码时，测试将暂停执行，这会使测试显着变慢。例如，假设在测试以下代码：</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">$waiting </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">/* ... */</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">$seconds </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#F97583;">while</span><span style="color:#E1E4E8;"> ($waiting) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">Sleep</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">for</span><span style="color:#E1E4E8;">($seconds</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">seconds</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">    $waiting </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">/* ... */</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">$waiting </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">/* ... */</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">$seconds </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#D73A49;">while</span><span style="color:#24292E;"> ($waiting) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">Sleep</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">for</span><span style="color:#24292E;">($seconds</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">seconds</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">    $waiting </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">/* ... */</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>通常，测试此代码至少需要一秒钟。</p><p>幸运的是，<code>Sleep</code> 类允许假装暂停，以便测试保持快速：</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark has-diff vp-code-dark"><code><span class="line"><span style="color:#B392F0;">it</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;waits until ready&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">Sleep</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">fake</span><span style="color:#E1E4E8;">(); </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// ...</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light has-diff vp-code-light"><code><span class="line"><span style="color:#6F42C1;">it</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;waits until ready&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;">() {</span></span>
<span class="line diff add"><span style="color:#24292E;">    </span><span style="color:#005CC5;">Sleep</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">fake</span><span style="color:#24292E;">(); </span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// ...</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><p>当伪造 Sleep 类时，实际的执行暂停被绕过，从而导致测试速度大大加快。</p>`,16),e=[o];function c(t,r,y,E,i,d){return n(),a("div",null,e)}const C=s(l,[["render",c]]);export{h as __pageData,C as default};
