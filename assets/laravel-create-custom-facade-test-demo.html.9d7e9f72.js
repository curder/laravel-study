import{r as p,o as t,c as o,b as n,a as e,F as c,d as s,e as l}from"./app.cc9213f7.js";import{_ as r}from"./plugin-vue_export-helper.21dcd24c.js";const u={},i=n("h1",{id:"laravel-\u521B\u5EFA\u81EA\u5B9A\u4E49-facade",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#laravel-\u521B\u5EFA\u81EA\u5B9A\u4E49-facade","aria-hidden":"true"},"#"),s(" Laravel \u521B\u5EFA\u81EA\u5B9A\u4E49 Facade")],-1),k={href:"https://github.com/curder/laravel-create-custom-facade-test-demo/actions?query=run-test%3Amaster",target:"_blank",rel:"noopener noreferrer"},d=n("img",{src:"https://github.com/curder/laravel-create-custom-facade-test-demo/actions/workflows/run-test.yml/badge.svg",alt:"GitHub Tests Action Status"},null,-1),b={href:"https://github.com/curder/laravel-create-custom-facade-test-demo/actions?query=workflow%3A%22Check+%26+fix+styling%22+branch%3Amaster",target:"_blank",rel:"noopener noreferrer"},m=n("img",{src:"https://github.com/curder/laravel-create-custom-facade-test-demo/actions/workflows/php-cs-fixer.yml/badge.svg",alt:"GitHub Code Style Action Status"},null,-1),g={href:"https://github.com/curder/laravel-create-custom-facade-test-demo",target:"_blank",rel:"noopener noreferrer"},h=s("GitHub \u6E90\u4EE3\u7801"),f=s("\u5728 Laravel \u5E94\u7528\u7A0B\u5E8F\u4E2D\uFF0C"),v={href:"https://laravel.com/docs/8.x/facades",target:"_blank",rel:"noopener noreferrer"},w=s("Facade"),y=s(" \u662F\u63D0\u4F9B\u4ECE\u5BB9\u5668\u8BBF\u95EE\u5BF9\u8C61\u7684\u7C7B\u3002"),_=l(`<p>Laravel \u7684\u5916\u89C2\u4EE5\u53CA\u60A8\u521B\u5EFA\u7684\u4EFB\u4F55\u81EA\u5B9A\u4E49\u5916\u89C2\u90FD\u5C06\u6269\u5C55\u57FA\u7840 <code>Illuminate\\Support\\Facades\\Facade</code> \u7C7B\u3002</p><p>Laravel \u63D0\u4F9B\u9ED8\u8BA4\u7684\u5916\u89C2\uFF0C\u4F8B\u5982 <code>Route</code>\uFF0C<code>Redirect</code>\uFF0C<code>Cookie</code>\uFF0C<code>App</code>\uFF0C<code>Crypt</code>\u7B49\u3002</p><p>\u5982\u679C\u8981\u4E3A\u81EA\u5DF1\u7684\u5E94\u7528\u7A0B\u5E8F\u521B\u5EFA <code>Facade</code> \uFF0C\u53EA\u9700\u9075\u5FAA\u4EE5\u4E0B\u6B65\u9AA4\uFF1A</p><h2 id="\u5B89\u88C5laravle" tabindex="-1"><a class="header-anchor" href="#\u5B89\u88C5laravle" aria-hidden="true">#</a> \u5B89\u88C5Laravle</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">composer</span> create-project laravel/laravel laravel-create-custom-facade-test-demo -vvv
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="\u521B\u5EFA\u5B9E\u73B0\u7C7B" tabindex="-1"><a class="header-anchor" href="#\u521B\u5EFA\u5B9E\u73B0\u7C7B" aria-hidden="true">#</a> \u521B\u5EFA\u5B9E\u73B0\u7C7B</h2><p>\u8FD9\u91CC\u4E3E\u4F8B\u5B9E\u73B0\u7C7B\u653E\u5728 <code>app/Services</code>\u76EE\u5F55\u4E0B\u3002\u7C7B\u7684\u5185\u5BB9\u5982\u4E0B\uFF1A</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\\</span>Services</span><span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token package">Carbon<span class="token punctuation">\\</span>Carbon</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * Class DateFormatService
 *
 * <span class="token keyword">@package</span> <span class="token class-name">App<span class="token punctuation">\\</span>Services</span>
 */</span>
<span class="token keyword">class</span> <span class="token class-name-definition class-name">DateFormatService</span>
<span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * <span class="token keyword">@param</span> <span class="token class-name"><span class="token keyword">string</span><span class="token punctuation">|</span>Carbon</span> <span class="token parameter">$date</span>
     *
     * <span class="token keyword">@return</span> <span class="token class-name"><span class="token keyword">string</span></span>
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">dateFormatYMD</span><span class="token punctuation">(</span><span class="token variable">$date</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword return-type">string</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name static-context">Carbon</span><span class="token operator">::</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token variable">$date</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Y-m-d&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * <span class="token keyword">@param</span> <span class="token class-name"><span class="token keyword">string</span><span class="token punctuation">|</span>Carbon</span> <span class="token parameter">$date</span>
     *
     * <span class="token keyword">@return</span> <span class="token class-name"><span class="token keyword">string</span></span>
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">dateFormatMDY</span><span class="token punctuation">(</span><span class="token variable">$date</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword return-type">string</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name static-context">Carbon</span><span class="token operator">::</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token variable">$date</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;m/d/Y&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><h2 id="\u521B\u5EFA\u95E8\u9762" tabindex="-1"><a class="header-anchor" href="#\u521B\u5EFA\u95E8\u9762" aria-hidden="true">#</a> \u521B\u5EFA\u95E8\u9762</h2><p>\u5728 <code>app\\Services\\Facades</code>\u76EE\u5F55\u4E0B\u521B\u5EFA\u5BF9\u5E94\u6587\u4EF6\u5982\u4E0B\uFF1A</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\\</span>Services<span class="token punctuation">\\</span>Facades</span><span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\\</span>Services<span class="token punctuation">\\</span>DateFormatService</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Support<span class="token punctuation">\\</span>Facades<span class="token punctuation">\\</span>Facade</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@method</span> static string dateFormatMDY(string|mixed $date)
 * <span class="token keyword">@method</span> static string dateFormatYMD(string|mixed $date)
 *
 * <span class="token keyword">@see</span> DateFormatService
 */</span>
<span class="token keyword">class</span> <span class="token class-name-definition class-name">DateFormatFacade</span> <span class="token keyword">extends</span> <span class="token class-name">Facade</span>
<span class="token punctuation">{</span>
    <span class="token keyword">protected</span> <span class="token keyword">static</span> <span class="token keyword">function</span> <span class="token function-definition function">getFacadeAccessor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword return-type">string</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name static-context">DateFormatService</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h2 id="\u521B\u5EFA\u6D4B\u8BD5" tabindex="-1"><a class="header-anchor" href="#\u521B\u5EFA\u6D4B\u8BD5" aria-hidden="true">#</a> \u521B\u5EFA\u6D4B\u8BD5</h2><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">namespace</span> <span class="token package">Tests<span class="token punctuation">\\</span>Unit</span><span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\\</span>Services<span class="token punctuation">\\</span>DateFormatService</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\\</span>Services<span class="token punctuation">\\</span>Facades<span class="token punctuation">\\</span>DateFormatFacade</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Tests<span class="token punctuation">\\</span>TestCase</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">DateFormatFacadeTest</span> <span class="token keyword">extends</span> <span class="token class-name">TestCase</span>
<span class="token punctuation">{</span>
    <span class="token doc-comment comment">/** <span class="token keyword">@test</span> */</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">it_can_run_methods</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DateFormatService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">dateFormatMDY</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;2021-04-16&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;04/16/2021&quot;</span><span class="token punctuation">,</span> <span class="token variable">$result</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DateFormatService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">dateFormatYMD</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;04/16/2021&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;2021-04-16&quot;</span><span class="token punctuation">,</span> <span class="token variable">$result</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/** <span class="token keyword">@test</span> */</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">it_can_use_date_format_facade</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token class-name static-context">DateFormatFacade</span><span class="token operator">::</span><span class="token function">dateFormatMDY</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;2021-04-16&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;04/16/2021&quot;</span><span class="token punctuation">,</span> <span class="token variable">$result</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token class-name static-context">DateFormatFacade</span><span class="token operator">::</span><span class="token function">dateFormatYMD</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;04/16/2021&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;2021-04-16&quot;</span><span class="token punctuation">,</span> <span class="token variable">$result</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/** <span class="token keyword">@test</span> */</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">it_can_use_carbon_instance_date_format_facade</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token class-name static-context">DateFormatFacade</span><span class="token operator">::</span><span class="token function">dateFormatMDY</span><span class="token punctuation">(</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;m/d/Y&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">$result</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token class-name static-context">DateFormatFacade</span><span class="token operator">::</span><span class="token function">dateFormatYMD</span><span class="token punctuation">(</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Y-m-d&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">$result</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br></div></div><h2 id="\u53C2\u8003\u5730\u5740" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003\u5730\u5740" aria-hidden="true">#</a> \u53C2\u8003\u5730\u5740</h2>`,14),F={href:"https://www.itsolutionstuff.com/post/laravel-create-custom-facade-exampleexample.html",target:"_blank",rel:"noopener noreferrer"},x=s("Laravel Create Custom Facade Class Example");function q(D,$){const a=p("ExternalLinkIcon");return t(),o(c,null,[i,n("p",null,[n("a",k,[d,e(a)]),n("a",b,[m,e(a)])]),n("p",null,[n("a",g,[h,e(a)])]),n("p",null,[f,n("a",v,[w,e(a)]),y]),_,n("ul",null,[n("li",null,[n("a",F,[x,e(a)])])])],64)}var Y=r(u,[["render",q]]);export{Y as default};
