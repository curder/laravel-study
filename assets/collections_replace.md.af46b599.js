import{_ as s,o as a,c as l,Q as e}from"./chunks/framework.16715cb7.js";const h=JSON.parse('{"title":"replace","description":"","frontmatter":{},"headers":[],"relativePath":"collections/replace.md","filePath":"collections/replace.md","lastUpdated":1696668976000}'),n={name:"collections/replace.md"},o=e(`<h1 id="replace" tabindex="-1">replace <a class="header-anchor" href="#replace" aria-label="Permalink to &quot;replace&quot;">​</a></h1><blockquote><p>通过指定格式替换集合元素。</p></blockquote><p>替换方法的行为与 <a href="./merge.html">merge</a> 类似；除了覆盖具有字符串键的匹配项之外，replace 方法还可以通过指定对应的键覆盖集合元素。</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">collect</span><span style="color:#E1E4E8;">([</span><span style="color:#9ECBFF;">&#39;Taylor&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;Abigail&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;James&#39;</span><span style="color:#E1E4E8;">])</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">replace</span><span style="color:#E1E4E8;">([</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;Victoria&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;Finn&#39;</span><span style="color:#E1E4E8;">]);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// [&#39;Taylor&#39;, &#39;Victoria&#39;, &#39;James&#39;, &#39;Finn&#39;]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">collect</span><span style="color:#24292E;">([</span><span style="color:#032F62;">&#39;Taylor&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;Abigail&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;James&#39;</span><span style="color:#24292E;">])</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">replace</span><span style="color:#24292E;">([</span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;Victoria&#39;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;Finn&#39;</span><span style="color:#24292E;">]);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// [&#39;Taylor&#39;, &#39;Victoria&#39;, &#39;James&#39;, &#39;Finn&#39;]</span></span></code></pre></div><h2 id="相关方法" tabindex="-1">相关方法 <a class="header-anchor" href="#相关方法" aria-label="Permalink to &quot;相关方法&quot;">​</a></h2><ul><li><a href="./merge.html">merge</a></li></ul>`,6),p=[o];function t(c,r,i,y,E,d){return a(),l("div",null,p)}const _=s(n,[["render",t]]);export{h as __pageData,_ as default};
