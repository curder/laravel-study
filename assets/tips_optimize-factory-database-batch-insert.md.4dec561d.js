import{_ as s,o as a,c as n,Q as p}from"./chunks/framework.16715cb7.js";const o="/laravel-study/assets/speed-comparison-preview.96f332b1.png",g=JSON.parse('{"title":"优化 Factory 数据库批量插入","description":"","frontmatter":{},"headers":[],"relativePath":"tips/optimize-factory-database-batch-insert.md","filePath":"tips/optimize-factory-database-batch-insert.md","lastUpdated":1695291452000}'),l={name:"tips/optimize-factory-database-batch-insert.md"},t=p(`<h1 id="优化-factory-数据库批量插入" tabindex="-1">优化 Factory 数据库批量插入 <a class="header-anchor" href="#优化-factory-数据库批量插入" aria-label="Permalink to &quot;优化 Factory 数据库批量插入&quot;">​</a></h1><p>在创建测试数据时，使用批量插入数据库记录，而不是在单独的插入每一行，因为这将使您的测试更快。</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-B6A9K" id="tab-vVjfddU" checked="checked"><label for="tab-vVjfddU">错误 ❌</label><input type="radio" name="group-B6A9K" id="tab-g5Geac2"><label for="tab-g5Geac2">正确 ✅</label></div><div class="blocks"><div class="language-php vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// 如果使用这种方式批量写入大量测试数据，建议采用下面的方式批量插入数据库记录。</span></span>
<span class="line"><span style="color:#79B8FF;">Post</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">factory</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">count</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1000</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 如果使用这种方式批量写入大量测试数据，建议采用下面的方式批量插入数据库记录。</span></span>
<span class="line"><span style="color:#005CC5;">Post</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">factory</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">count</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1000</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">create</span><span style="color:#24292E;">();</span></span></code></pre></div><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">Post</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">query</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">insert</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">Post</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">factory</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">count</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1000</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">make</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">toArray</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">Post</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">query</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">insert</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">Post</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">factory</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">count</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1000</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">make</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">toArray</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">);</span></span></code></pre></div></div></div><p>具体代码查看仓库地址<a href="https://github.com/curder/laravel-tips/tree/optimize-factory-database-batch-insert" target="_blank" rel="noreferrer">github.com/curder/laravel-tips</a></p><h2 id="执行速度对比" tabindex="-1">执行速度对比 <a class="header-anchor" href="#执行速度对比" aria-label="Permalink to &quot;执行速度对比&quot;">​</a></h2><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// Before</span></span>
<span class="line"><span style="color:#E1E4E8;">$start </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">microtime</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#79B8FF;">Post</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">factory</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">count</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1000</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#B392F0;">ray</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">microtime</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> $start); </span><span style="color:#6A737D;">// 0.49113798141479</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// After</span></span>
<span class="line"><span style="color:#E1E4E8;">$start </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">microtime</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#79B8FF;">Post</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">query</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">insert</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">Post</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">factory</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">count</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1000</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">make</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">toArray</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#B392F0;">ray</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">microtime</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> $start); </span><span style="color:#6A737D;">// 0.15621304512024</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// Before</span></span>
<span class="line"><span style="color:#24292E;">$start </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">microtime</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">true</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#005CC5;">Post</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">factory</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">count</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1000</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">create</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#6F42C1;">ray</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">microtime</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">true</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> $start); </span><span style="color:#6A737D;">// 0.49113798141479</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// After</span></span>
<span class="line"><span style="color:#24292E;">$start </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">microtime</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">true</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#005CC5;">Post</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">query</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">insert</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">Post</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">factory</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">count</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1000</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">make</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">toArray</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#6F42C1;">ray</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">microtime</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">true</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> $start); </span><span style="color:#6A737D;">// 0.15621304512024</span></span></code></pre></div><p><img src="`+o+'" alt=""></p>',7),e=[t];function c(r,y,E,i,F,d){return a(),n("div",null,e)}const h=s(l,[["render",c]]);export{g as __pageData,h as default};
