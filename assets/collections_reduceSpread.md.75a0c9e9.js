import{_ as s,o as a,c as n,Q as e}from"./chunks/framework.16715cb7.js";const h=JSON.parse('{"title":"reduceSpread","description":"","frontmatter":{},"headers":[],"relativePath":"collections/reduceSpread.md","filePath":"collections/reduceSpread.md","lastUpdated":1696668594000}'),l={name:"collections/reduceSpread.md"},p=e(`<h1 id="reducespread" tabindex="-1">reduceSpread <a class="header-anchor" href="#reducespread" aria-label="Permalink to &quot;reduceSpread&quot;">​</a></h1><blockquote><p>将集合缩减为值数组，将每次迭代的结果传递到后续迭代中，与 <a href="./reduce.html"><code>reduce</code></a> 方法不同的是，它可以接受多个初始值（多维数组）。</p></blockquote><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">collect</span><span style="color:#E1E4E8;">([[</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">], [</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">], [</span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;">]])</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">reduceSpread</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">fn</span><span style="color:#E1E4E8;">($carry, $item, $key) =&gt; [$carry </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> $item[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> $item[</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">]],</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">0</span></span>
<span class="line"><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// [21]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">collect</span><span style="color:#24292E;">([[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">], [</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">], [</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">6</span><span style="color:#24292E;">]])</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">reduceSpread</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">fn</span><span style="color:#24292E;">($carry, $item, $key) =&gt; [$carry </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> $item[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> $item[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">]],</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#24292E;">); </span><span style="color:#6A737D;">// [21]</span></span></code></pre></div><h2 id="相关方法" tabindex="-1">相关方法 <a class="header-anchor" href="#相关方法" aria-label="Permalink to &quot;相关方法&quot;">​</a></h2><ul><li><a href="./reduce.html">reduce</a></li></ul>`,5),o=[p];function c(t,r,y,E,d,i){return a(),n("div",null,o)}const _=s(l,[["render",c]]);export{h as __pageData,_ as default};
