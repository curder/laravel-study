import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.e8ee2c8f.js";const m=JSON.parse('{"title":"times","description":"","frontmatter":{},"headers":[],"relativePath":"collections/times.md","filePath":"collections/times.md","lastUpdated":1697181458000}'),p={name:"collections/times.md"},o=l(`<h1 id="times" tabindex="-1">times <a class="header-anchor" href="#times" aria-label="Permalink to &quot;times&quot;">​</a></h1><blockquote><p>通过回调在给定次数内创建一个新集合</p></blockquote><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">collect</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">times</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">fn</span><span style="color:#E1E4E8;">($value) =&gt; $value </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;"> );</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// [3, 6, 9]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">collect</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">times</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">fn</span><span style="color:#24292E;">($value) =&gt; $value </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">3</span><span style="color:#24292E;"> );</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// [3, 6, 9]</span></span></code></pre></div><p>使用这个方法可以与工厂结合使用创建出 <code>Eloquent</code> 模型</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">use</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">App\\Models\\User</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">collect</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">times</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">fn</span><span style="color:#E1E4E8;"> ($number) =&gt; </span><span style="color:#79B8FF;">User</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">factory</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">([</span><span style="color:#9ECBFF;">&#39;name&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> $number </span><span style="color:#F97583;">.</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39; Cool Name&#39;</span><span style="color:#E1E4E8;">]));</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">use</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">App\\Models\\User</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">collect</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">times</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">fn</span><span style="color:#24292E;"> ($number) =&gt; </span><span style="color:#005CC5;">User</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">factory</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">create</span><span style="color:#24292E;">([</span><span style="color:#032F62;">&#39;name&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> $number </span><span style="color:#D73A49;">.</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39; Cool Name&#39;</span><span style="color:#24292E;">]));</span></span></code></pre></div>`,5),e=[o];function t(c,r,y,E,i,d){return a(),n("div",null,e)}const u=s(p,[["render",t]]);export{m as __pageData,u as default};
