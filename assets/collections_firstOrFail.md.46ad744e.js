import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.16715cb7.js";const f=JSON.parse('{"title":"firstOrFail","description":"","frontmatter":{},"headers":[],"relativePath":"collections/firstOrFail.md","filePath":"collections/firstOrFail.md","lastUpdated":1695377800000}'),o={name:"collections/firstOrFail.md"},p=l(`<h1 id="firstorfail" tabindex="-1">firstOrFail <a class="header-anchor" href="#firstorfail" aria-label="Permalink to &quot;firstOrFail&quot;">​</a></h1><p><code>firstOrFail</code> 方法与 <a href="./first.html"><code>first</code></a> 方法相同；</p><p>如果没有找到结果则会抛出 <code>Illuminate\\Support\\ItemNotFoundException</code> 异常。</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">collect</span><span style="color:#E1E4E8;">([])</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">firstOrFail</span><span style="color:#E1E4E8;">(); </span><span style="color:#6A737D;">// Throws ItemNotFoundException...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">collect</span><span style="color:#E1E4E8;">([</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">])</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">firstOrFail</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">fn</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> $value, </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> $key) =&gt; $value </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">5</span></span>
<span class="line"><span style="color:#E1E4E8;">    ); </span><span style="color:#6A737D;">// Throws ItemNotFoundException...</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">collect</span><span style="color:#24292E;">([])</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">firstOrFail</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// Throws ItemNotFoundException...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">collect</span><span style="color:#24292E;">([</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">])</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">firstOrFail</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">fn</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> $value, </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> $key) =&gt; $value </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">5</span></span>
<span class="line"><span style="color:#24292E;">    ); </span><span style="color:#6A737D;">// Throws ItemNotFoundException...</span></span></code></pre></div><h2 id="相关方法" tabindex="-1">相关方法 <a class="header-anchor" href="#相关方法" aria-label="Permalink to &quot;相关方法&quot;">​</a></h2><ul><li><a href="./first.html">first</a></li></ul>`,6),t=[p];function e(r,c,i,y,E,d){return a(),n("div",null,t)}const h=s(o,[["render",e]]);export{f as __pageData,h as default};
