(self.webpackChunklaravel_study=self.webpackChunklaravel_study||[]).push([[4388],{8486:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>t});const t={key:"v-561ddf88",path:"/collections/flatten.html",title:"flatten",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[],filePathRelative:"collections/flatten.md",git:{updatedTime:1616865921e3,contributors:[]}}},3224:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>u});var t=a(6252);const p=(0,t.uE)('<h1 id="flatten"><a class="header-anchor" href="#flatten">#</a> flatten</h1><p>将多维集合转为一维。</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token function">collect</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;taylor&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;languages&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;php&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;javascript&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">flatten</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// output</span>\n<span class="token doc-comment comment">/**\n=&gt; Illuminate\\Support\\Collection <span class="token punctuation">{</span>#1079\n     all: [\n       &quot;taylor&quot;,\n       &quot;php&quot;,\n       &quot;javascript&quot;,\n     ],\n   <span class="token punctuation">}</span>\n */</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>还可以选择性地传入「深度」参数：</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token function">collect</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n  <span class="token string single-quoted-string">&#39;Apple&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;iPhone 6S&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;brand&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;Apple&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token string single-quoted-string">&#39;Samsung&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;Galaxy S7&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;brand&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;Samsung&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">flatten</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// output</span>\n<span class="token doc-comment comment">/**\n=&gt; Illuminate\\Support\\Collection <span class="token punctuation">{</span>#1093\n     all: [\n       [\n         &quot;name&quot; =&gt; &quot;iPhone 6S&quot;,\n         &quot;brand&quot; =&gt; &quot;Apple&quot;,\n       ],\n       [\n         &quot;name&quot; =&gt; &quot;Galaxy S7&quot;,\n         &quot;brand&quot; =&gt; &quot;Samsung&quot;,\n       ],\n     ],\n   <span class="token punctuation">}</span>\n */</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>在这个例子里，调用 flatten 方法时不传入深度参数的话也会将嵌套数组转成一维的，然后返回 <code>[&#39;iPhone 6S&#39;, &#39;Apple&#39;, &#39;Galaxy S7&#39;, &#39;Samsung&#39;]</code>，传入深度参数能限制设置返回数组的层数。</p>',6),e=(0,t.Uk)("有时候我们需要对数据进行分组可以使用 "),l={href:"/collections/groupBy.md",target:"_blank",rel:"noopener noreferrer"},o=(0,t.Uk)("groupBy"),c=(0,t.Uk)(" 方法。"),u={render:function(n,s){const a=(0,t.up)("OutboundLink");return(0,t.wg)(),(0,t.j4)(t.HY,null,[p,(0,t.Wm)("p",null,[e,(0,t.Wm)("a",l,[o,(0,t.Wm)(a)]),c])],64)}}}}]);