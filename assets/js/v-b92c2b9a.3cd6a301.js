(self.webpackChunklaravel_study=self.webpackChunklaravel_study||[]).push([[3014],{1725:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>e});const e={key:"v-b92c2b9a",path:"/model/laravel-model-observers.html",title:"模型观察者",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"数据准备",slug:"数据准备",children:[]},{level:2,title:"模型内容",slug:"模型内容",children:[]},{level:2,title:"观察者类",slug:"观察者类",children:[]},{level:2,title:"对数据进行增删改操作",slug:"对数据进行增删改操作",children:[{level:3,title:"增加",slug:"增加",children:[]},{level:3,title:"删除",slug:"删除",children:[]},{level:3,title:"更新",slug:"更新",children:[]}]}],filePathRelative:"model/laravel-model-observers.md",git:{updatedTime:1617072411e3,contributors:[]}}},8874:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>r});var e=a(6252);const p=(0,e.Wm)("h1",{id:"模型观察者",tabindex:"-1"},[(0,e.Wm)("a",{class:"header-anchor",href:"#模型观察者","aria-hidden":"true"},"#"),(0,e.Uk)(" 模型观察者")],-1),t=(0,e.Wm)("p",null,"如果想在一个模型中监听多个事件，那么也可以把它写成一个类，类中的方法名称即是想要监听的事件名称。",-1),o=(0,e.Uk)("阅读之前建议看下"),c={href:"/model/laravel-model-events.md",target:"_blank",rel:"noopener noreferrer"},l=(0,e.Uk)("模型事件"),i=(0,e.Uk)("模型的事件观察者是模型的高级应用，我们不局限于将模型事件书写在模型中，可以使用模型观察者将相应事件独立出来。"),u=(0,e.uE)('<p>创建观察者类，类所在目录：<code>app\\Observers</code>下，命名为：<code>PostObservers</code></p><h2 id="数据准备" tabindex="-1"><a class="header-anchor" href="#数据准备" aria-hidden="true">#</a> 数据准备</h2><p>命令行执行如下命令：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>laravel new laravel-model-observers-demo\n<span class="token builtin class-name">cd</span> laravel-model-observers-demo\nphp artisan make:model Post -m\n<span class="token function">touch</span> database/database.sqlite\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><blockquote><p>上面的命令会创建一个 <code>Laravel</code> 项目并创建一个 <code>Post</code> 模型文件和对应的迁移文件与数据库配置文件。</p></blockquote><p>修改项目本地环境文件 <code>.env</code> 文件中的数据库连接</p><div class="language-dotenv ext-dotenv line-numbers-mode"><pre class="language-dotenv"><code>DB_CONNECTION=sqlite\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>修改数据库迁移文件 <code>database\\migrations\\****_**_**_******_create_posts_table.php</code> 中的 <code>up()</code> 方法。</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">up</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n    <span class="token class-name static-context">Schema</span><span class="token operator">::</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;posts&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name type-declaration">Blueprint</span> <span class="token variable">$table</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token variable">$table</span><span class="token operator">-&gt;</span><span class="token function">increments</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token variable">$table</span><span class="token operator">-&gt;</span><span class="token keyword type-declaration">string</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;title&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token variable">$table</span><span class="token operator">-&gt;</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;body&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token variable">$table</span><span class="token operator">-&gt;</span><span class="token function">softDeletes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token variable">$table</span><span class="token operator">-&gt;</span><span class="token function">timestamps</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>修改好迁移文件之后，执行迁移</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>php artisan migrate\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="模型内容" tabindex="-1"><a class="header-anchor" href="#模型内容" aria-hidden="true">#</a> 模型内容</h2><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\\</span>Models</span><span class="token punctuation">;</span>\n\n<span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\\</span>Observers<span class="token punctuation">\\</span>PostObserver</span><span class="token punctuation">;</span>\n<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Database<span class="token punctuation">\\</span>Eloquent<span class="token punctuation">\\</span>Model</span><span class="token punctuation">;</span>\n<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Database<span class="token punctuation">\\</span>Eloquent<span class="token punctuation">\\</span>SoftDeletes</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name-definition class-name">Post</span> <span class="token keyword">extends</span> <span class="token class-name">Model</span>\n<span class="token punctuation">{</span>\n  <span class="token keyword">use</span> <span class="token package">SoftDeletes</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">protected</span> <span class="token variable">$fillable</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;title&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;body&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">function</span> <span class="token function-definition function">boot</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token punctuation">{</span>\n    <span class="token keyword static-context">parent</span><span class="token operator">::</span><span class="token function">boot</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword static-context">static</span><span class="token operator">::</span><span class="token function">observe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">PostObserver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><blockquote><p>使用类的 <code>boot()</code> 静态方法注册模型观察者类。</p></blockquote><h2 id="观察者类" tabindex="-1"><a class="header-anchor" href="#观察者类" aria-hidden="true">#</a> 观察者类</h2><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\\</span>Observers</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name-definition class-name">PostObserver</span>\n<span class="token punctuation">{</span>\n  <span class="token comment">// 新增模型数据触发</span>\n  <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">creating</span><span class="token punctuation">(</span><span class="token variable">$post</span><span class="token punctuation">)</span>\n  <span class="token punctuation">{</span>\n    <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;creating event is fired\\n&quot;</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token comment">// 新增模型数据触发</span>\n  <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">created</span><span class="token punctuation">(</span><span class="token variable">$post</span><span class="token punctuation">)</span>\n  <span class="token punctuation">{</span>\n    <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;created event is fired\\n&quot;</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token comment">// 编辑模型数据触发</span>\n  <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">updating</span><span class="token punctuation">(</span><span class="token variable">$post</span><span class="token punctuation">)</span>\n  <span class="token punctuation">{</span>\n    <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;updating event is fired\\n&quot;</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token comment">// 编辑模型数据触发</span>\n  <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">updated</span><span class="token punctuation">(</span><span class="token variable">$post</span><span class="token punctuation">)</span>\n  <span class="token punctuation">{</span>\n    <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;updated event is fired\\n&quot;</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token comment">// 新增、编辑模型数据触发</span>\n  <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">saving</span><span class="token punctuation">(</span><span class="token variable">$post</span><span class="token punctuation">)</span>\n  <span class="token punctuation">{</span>\n    <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;saving event is fired\\n&quot;</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token comment">// 新增、编辑模型数据触发</span>\n  <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">saved</span><span class="token punctuation">(</span><span class="token variable">$post</span><span class="token punctuation">)</span>\n  <span class="token punctuation">{</span>\n    <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;saved event is fired\\n&quot;</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token comment">// 删除模型数据触发</span>\n  <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">deleting</span><span class="token punctuation">(</span><span class="token variable">$post</span><span class="token punctuation">)</span>\n  <span class="token punctuation">{</span>\n    <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;deleting event is fired\\n&quot;</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token comment">// 删除模型数据触发</span>\n  <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">deleted</span><span class="token punctuation">(</span><span class="token variable">$post</span><span class="token punctuation">)</span>\n  <span class="token punctuation">{</span>\n    <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;deleted event is fired\\n&quot;</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token comment">// 监听数据即将从软删除状态恢复的事件。</span>\n  <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">restoring</span><span class="token punctuation">(</span><span class="token variable">$post</span><span class="token punctuation">)</span>\n  <span class="token punctuation">{</span>\n    <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;restoring event is fired\\n&quot;</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token comment">// 监听数据从软删除状态恢复后的事件。</span>\n  <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">restored</span><span class="token punctuation">(</span><span class="token variable">$post</span><span class="token punctuation">)</span>\n  <span class="token punctuation">{</span>\n    <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;restored event is fired\\n&quot;</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br></div></div><blockquote><p><strong>注意:</strong> 如果 <code>saving</code> 、 <code>creating</code> 、 <code>updating</code> 、 <code>deleting</code> 、 <code>restoring</code> 事件逻辑中返回 <code>false</code> ，则相应的创建、更新、删除操作会退出，不再往下执行。 其中 <code>restoring</code> 和 <code>restored</code> 事件需要模型 <code>use Illuminate\\Database\\Eloquent\\SoftDeletes;</code> 才能正常使用。</p></blockquote><h2 id="对数据进行增删改操作" tabindex="-1"><a class="header-anchor" href="#对数据进行增删改操作" aria-hidden="true">#</a> 对数据进行增删改操作</h2><h3 id="增加" tabindex="-1"><a class="header-anchor" href="#增加" aria-hidden="true">#</a> 增加</h3><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\\</span>Models<span class="token punctuation">\\</span>Post</span><span class="token punctuation">;</span>\n\n\n<span class="token class-name static-context">Post</span><span class="token operator">::</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;title&#39;</span><span class="token operator">=&gt;</span><span class="token string single-quoted-string">&#39;title&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;body&#39;</span><span class="token operator">=&gt;</span><span class="token string single-quoted-string">&#39;Body&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token doc-comment comment">/**\nsaving event is fired\ncreating event is fired\ncreated event is fired\nsaved event is fired\n */</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><blockquote><p>通过执行上面的代码我们可以看到，执行模型 <code>create()</code> 方法，会依次触发 <code>saving</code> 、 <code>creating</code> 、 <code>created</code> 和 <code>saved</code> 事件。</p></blockquote><h3 id="删除" tabindex="-1"><a class="header-anchor" href="#删除" aria-hidden="true">#</a> 删除</h3><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\\</span>Models<span class="token punctuation">\\</span>Post</span><span class="token punctuation">;</span>\n\n<span class="token class-name static-context">Post</span><span class="token operator">::</span><span class="token function">destroy</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token doc-comment comment">/**\ndeleting event is fired\ndeleted event is fired\n */</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><blockquote><p>通过执行上面的删除代码，可以看到会依次触发 <code>deleting</code> 和 <code>deleted</code> 事件。</p></blockquote><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\\</span>Models<span class="token punctuation">\\</span>Post</span><span class="token punctuation">;</span>\n\n<span class="token variable">$post</span> <span class="token operator">=</span> <span class="token class-name static-context">Post</span><span class="token operator">::</span><span class="token function">withTrashed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">latest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token variable">$post</span><span class="token operator">-&gt;</span><span class="token function">restore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token doc-comment comment">/**\nrestoring event is fired\nsaving event is fired\nupdating event is fired\nupdated event is fired\nsaved event is fired\nrestored event is fired\n */</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><blockquote><p>通过执行上面的恢复删除代码，可以依次触发了<code>restoring</code>、<code>saving</code>、<code>updating</code>、<code>updated</code>、<code>saved</code>和<code>restored</code>事件中的代码</p></blockquote><h3 id="更新" tabindex="-1"><a class="header-anchor" href="#更新" aria-hidden="true">#</a> 更新</h3><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\\</span>Models<span class="token punctuation">\\</span>Post</span><span class="token punctuation">;</span>\n\n<span class="token variable">$post</span> <span class="token operator">=</span> <span class="token class-name static-context">Post</span><span class="token operator">::</span><span class="token function">latest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token variable">$post</span><span class="token operator">-&gt;</span><span class="token property">title</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;New Title&#39;</span><span class="token punctuation">;</span>\n<span class="token variable">$post</span><span class="token operator">-&gt;</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token doc-comment comment">/**\nsaving event is fired\nupdating event is fired\nupdated event is fired\nsaved event is fired\n */</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><blockquote><p>通过执行上面的代码，我们可以看到会依次触发 <code>saving</code> 、 <code>updating</code> 、 <code>updated</code> 和 <code>saved</code> 事件。</p></blockquote>',29),r={render:function(n,s){const a=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.j4)(e.HY,null,[p,t,(0,e.Wm)("p",null,[o,(0,e.Wm)("a",c,[l,(0,e.Wm)(a)]),i]),u],64)}}}}]);