(self.webpackChunklaravel_study=self.webpackChunklaravel_study||[]).push([[6855],{2738:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>t});const t={key:"v-e8d5b774",path:"/collections/times.html",title:"times",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[],filePathRelative:"collections/times.md",git:{updatedTime:1617169109e3,contributors:[]}}},4531:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>p});const t=(0,a(6252).uE)('<h1 id="times"><a class="header-anchor" href="#times">#</a> times</h1><p><code>times</code> 方法是 Collection 类的静态方法，通过 <code>Collection::times()</code> 调用</p><p>通过回调在给定次数内创建一个新集合。</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Support<span class="token punctuation">\\</span>Collection</span><span class="token punctuation">;</span>\n\n<span class="token variable">$collection</span> <span class="token operator">=</span> <span class="token class-name static-context">Collection</span><span class="token operator">::</span><span class="token function">times</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token variable">$value</span> <span class="token operator">*</span> <span class="token number">3</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token variable">$collection</span><span class="token operator">-&gt;</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// output</span>\n<span class="token doc-comment comment">/**\nIlluminate\\Support\\Collection <span class="token punctuation">{</span>#1074\n all: [\n   3,\n   6,\n   9,\n ],\n<span class="token punctuation">}</span>\n*/</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>使用这个方法可以与工厂结合使用创建出 <code>Eloquent</code> 模型</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\\</span>Models<span class="token punctuation">\\</span>User</span><span class="token punctuation">;</span>\n<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Support<span class="token punctuation">\\</span>Collection</span><span class="token punctuation">;</span>\n\n<span class="token class-name static-context">Collection</span><span class="token operator">::</span><span class="token function">times</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token function">fn </span><span class="token punctuation">(</span><span class="token variable">$number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token class-name static-context">User</span><span class="token operator">::</span><span class="token function">factory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$number</span> <span class="token operator">.</span> <span class="token string single-quoted-string">&#39; Cool Name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// output</span>\n<span class="token doc-comment comment">/**\n[\n [\n   &quot;NAME&quot; =&gt; &quot;1 cOOL nAME&quot;,\n   &quot;EMAIL&quot; =&gt; &quot;UPTON.SAUL@EXAMPLE.COM&quot;,\n   &quot;EMAIL_VERIFIED_AT&quot; =&gt; &quot;2021-03-23t10:40:16.000000z&quot;,\n   &quot;UPDATED_AT&quot; =&gt; &quot;2021-03-23t10:40:16.000000z&quot;,\n   &quot;CREATED_AT&quot; =&gt; &quot;2021-03-23t10:40:16.000000z&quot;,\n   &quot;ID&quot; =&gt; 26,\n   &quot;PROFILE_PHOTO_URL&quot; =&gt; &quot;HTTPS://UI-AVATARS.COM/API/?NAME=1+cOOL+nAME&amp;COLOR=7f9cf5&amp;BACKGROUND=ebf4ff&quot;,\n ],\n [\n   &quot;NAME&quot; =&gt; &quot;2 cOOL nAME&quot;,\n   &quot;EMAIL&quot; =&gt; &quot;OHANSEN@EXAMPLE.ORG&quot;,\n   &quot;EMAIL_VERIFIED_AT&quot; =&gt; &quot;2021-03-23t10:40:16.000000z&quot;,\n   &quot;UPDATED_AT&quot; =&gt; &quot;2021-03-23t10:40:16.000000z&quot;,\n   &quot;CREATED_AT&quot; =&gt; &quot;2021-03-23t10:40:16.000000z&quot;,\n   &quot;ID&quot; =&gt; 27,\n   &quot;PROFILE_PHOTO_URL&quot; =&gt; &quot;HTTPS://UI-AVATARS.COM/API/?NAME=2+cOOL+nAME&amp;COLOR=7f9cf5&amp;BACKGROUND=ebf4ff&quot;,\n ],\n [\n   &quot;NAME&quot; =&gt; &quot;3 cOOL nAME&quot;,\n   &quot;EMAIL&quot; =&gt; &quot;ZBORER@EXAMPLE.NET&quot;,\n   &quot;EMAIL_VERIFIED_AT&quot; =&gt; &quot;2021-03-23t10:40:16.000000z&quot;,\n   &quot;UPDATED_AT&quot; =&gt; &quot;2021-03-23t10:40:16.000000z&quot;,\n   &quot;CREATED_AT&quot; =&gt; &quot;2021-03-23t10:40:16.000000z&quot;,\n   &quot;ID&quot; =&gt; 28,\n   &quot;PROFILE_PHOTO_URL&quot; =&gt; &quot;HTTPS://UI-AVATARS.COM/API/?NAME=3+cOOL+nAME&amp;COLOR=7f9cf5&amp;BACKGROUND=ebf4ff&quot;,\n ],\n] \n*/</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br></div></div>',6),p={render:function(n,s){return t}}}}]);