(self.webpackChunklaravel_study=self.webpackChunklaravel_study||[]).push([[3005],{3849:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>p});const p={key:"v-55c0e7f9",path:"/collections/whenEmpty.html",title:"whenEmpty",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[],filePathRelative:"collections/whenEmpty.md",git:{updatedTime:161707193e4,contributors:[]}}},8712:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>i});var p=a(6252);const t=(0,p.uE)('<h1 id="whenempty"><a class="header-anchor" href="#whenempty">#</a> whenEmpty</h1><p>当集合为空时，<code>whenEmpty</code> 方法将执行给定的回调。</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token function">collect</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;Michael&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;Tom&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n  <span class="token operator">-&gt;</span><span class="token function">whenEmpty</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$collection</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token variable">$collection</span><span class="token operator">-&gt;</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Adam&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token operator">-&gt;</span><span class="token function">dump</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token function">collect</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token operator">-&gt;</span><span class="token function">whenEmpty</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$collection</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token variable">$collection</span><span class="token operator">-&gt;</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Adam&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token operator">-&gt;</span><span class="token function">dd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token doc-comment comment">/**\narray:2 [\n  0 =&gt; &quot;Michael&quot;\n  1 =&gt; &quot;Tom&quot;\n]\n\narray:1 [\n  0 =&gt; &quot;Adam&quot;\n]\n */</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p>第二个闭包可以传递给 <code>whenEmpty</code> 方法，当集合不为空时将执行该方法。</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token function">collect</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;Michael&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;Tom&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n  <span class="token operator">-&gt;</span><span class="token function">whenEmpty</span><span class="token punctuation">(</span>\n    <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$collection</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> <span class="token variable">$collection</span><span class="token operator">-&gt;</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Adam&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$collection</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> <span class="token variable">$collection</span><span class="token operator">-&gt;</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Taylor&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">)</span>\n  <span class="token operator">-&gt;</span><span class="token function">dd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token doc-comment comment">/**\narray:3 [\n  0 =&gt; &quot;Michael&quot;\n  1 =&gt; &quot;Tom&quot;\n  2 =&gt; &quot;Taylor&quot;\n]\n */</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div>',5),e=(0,p.Uk)("如果需要和 "),o=(0,p.Wm)("code",null,"whenEmpty",-1),c=(0,p.Uk)(" 方法相反的操作，可以使用 "),l={href:"/collections/whenNotEmpty.md",target:"_blank",rel:"noopener noreferrer"},u=(0,p.Uk)("whereNotEmpty"),r=(0,p.Uk)(" 方法。"),i={render:function(n,s){const a=(0,p.up)("OutboundLink");return(0,p.wg)(),(0,p.j4)(p.HY,null,[t,(0,p.Wm)("p",null,[e,o,c,(0,p.Wm)("a",l,[u,(0,p.Wm)(a)]),r])],64)}}}}]);