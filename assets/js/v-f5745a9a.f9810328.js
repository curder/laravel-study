(self.webpackChunklaravel_study=self.webpackChunklaravel_study||[]).push([[6794],{1443:(e,t,l)=>{"use strict";l.r(t),l.d(t,{data:()=>n});const n={key:"v-f5745a9a",path:"/collections/",title:"基础",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"创建集合",slug:"创建集合",children:[]},{level:2,title:"可用的方法",slug:"可用的方法",children:[]},{level:2,title:"其它项目中单独使用",slug:"其它项目中单独使用",children:[{level:3,title:"安装",slug:"安装",children:[]},{level:3,title:"使用",slug:"使用",children:[]}]},{level:2,title:"在JavaScript中使用集合相关操作",slug:"在javascript中使用集合相关操作",children:[]}],filePathRelative:"collections/README.md",git:{updatedTime:1617169109e3,contributors:[]}}},7233:(e,t,l)=>{"use strict";l.r(t),l.d(t,{default:()=>im});var n=l(6252);const r=(0,n.uE)('<h1 id="基础"><a class="header-anchor" href="#基础">#</a> 基础</h1><p><code>Illuminate\\Support\\Collection</code> 类提供了一个更具可读性的、更便于处理数组数据的封装，具体例子看下面的代码。</p><p>我们使用了 <code>collect</code> 函数从数组中创建新的集合实例，对其中的每个元素运行 <code>strtoupper</code> 函数之后再移除所有的空元素：</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token function">collect</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;taylor&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;abigail&#39;</span><span class="token punctuation">,</span> <span class="token constant">null</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n  <span class="token operator">-&gt;</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token function">strtoupper</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token operator">-&gt;</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>正如你看到的，<code>Collection</code> 类允许你链式调用其方法，以达到在底层数组上优雅地执行 <code>map</code> 和 <code>reject</code> 操作。一般来说，集合是不可改变的，这意味着每个 <code>Collection</code> 方法都会返回一个全新的 <code>Collection</code> 实例。</p><h2 id="创建集合"><a class="header-anchor" href="#创建集合">#</a> 创建集合</h2><p>如上所述，辅助函数 <code>collect</code> 会为给定的数组返回一个新的 <code>Illuminate\\Support\\Collection</code> 实例。也就是说，创建一个集合就这么简单：</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token function">collect</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',8),a=(0,n.Uk)("默认情况下， "),o={href:"https://laravel.com/docs/8.x/eloquent",target:"_blank",rel:"noopener noreferrer"},s=(0,n.Uk)("Eloquent"),m=(0,n.Uk)(" 查询的结果返回的内容都是 "),i=(0,n.Wm)("code",null,"Collection",-1),W=(0,n.Uk)(" 实例。"),c=(0,n.Wm)("h2",{id:"可用的方法"},[(0,n.Wm)("a",{class:"header-anchor",href:"#可用的方法"},"#"),(0,n.Uk)(" 可用的方法")],-1),f=(0,n.Wm)("p",null,[(0,n.Uk)("接下来的内容，我们会探讨 "),(0,n.Wm)("code",null,"Collection"),(0,n.Uk)(" 类每个可用的方法。**记住，所有方法都可以以方法链的形式优雅地操纵数组。**而且，几乎所有的方法都会返回新的 "),(0,n.Wm)("code",null,"Collection"),(0,n.Uk)(" 实例，允许在必要时保存集合的原始副本。")],-1),p=(0,n.Wm)("thead",null,[(0,n.Wm)("tr",null,[(0,n.Wm)("th",{style:{"text-align":"left"}},"方法名"),(0,n.Wm)("th",{style:{"text-align":"left"}},"简单说明")])],-1),d={style:{"text-align":"left"}},g={href:"/collections/toJson.md",target:"_blank",rel:"noopener noreferrer"},k=(0,n.Uk)("toJson"),u=(0,n.Wm)("td",{style:{"text-align":"left"}},"将集合转换成 JSON 字符串",-1),y={style:{"text-align":"left"}},h={href:"/collections/all.md",target:"_blank",rel:"noopener noreferrer"},x=(0,n.Uk)("all"),b=(0,n.Wm)("td",{style:{"text-align":"left"}},[(0,n.Uk)("返回该集合表示的底层"),(0,n.Wm)("strong",null,"数组")],-1),U={style:{"text-align":"left"}},_={href:"/collections/toArray.md",target:"_blank",rel:"noopener noreferrer"},v=(0,n.Uk)("toArray"),w=(0,n.Wm)("td",{style:{"text-align":"left"}},"将集合转换成 PHP 数组",-1),E={style:{"text-align":"left"}},S={href:"/collections/times.md",target:"_blank",rel:"noopener noreferrer"},I=(0,n.Uk)("times"),B=(0,n.Wm)("td",{style:{"text-align":"left"}},"通过回调在给定次数内创建一个新的集合",-1),N={style:{"text-align":"left"}},C={href:"/collections/dump.md",target:"_blank",rel:"noopener noreferrer"},q=(0,n.Uk)("dump"),j=(0,n.Wm)("td",{style:{"text-align":"left"}},"打印集合的元素，调试时很有帮助",-1),J={style:{"text-align":"left"}},K={href:"/collections/each.md",target:"_blank",rel:"noopener noreferrer"},A=(0,n.Uk)("each"),D=(0,n.Wm)("td",{style:{"text-align":"left"}},"迭代集合中的内容，同时将其传递到回调函数中",-1),P={style:{"text-align":"left"}},R={href:"/collections/eachSpread.md",target:"_blank",rel:"noopener noreferrer"},T=(0,n.Uk)("eachSpread"),O=(0,n.Wm)("td",{style:{"text-align":"left"}},"迭代集合中的内容，同时将其传递到回调函数中",-1),$={style:{"text-align":"left"}},z={href:"/collections/only.md",target:"_blank",rel:"noopener noreferrer"},L=(0,n.Uk)("only"),M=(0,n.Wm)("td",{style:{"text-align":"left"}},"返回集合中给定键的所有项目",-1),G={style:{"text-align":"left"}},H={href:"/collections/nth.md",target:"_blank",rel:"noopener noreferrer"},Y=(0,n.Uk)("nth"),F=(0,n.Wm)("td",{style:{"text-align":"left"}},[(0,n.Uk)("创建由每隔"),(0,n.Wm)("code",null,"n"),(0,n.Uk)("个元素组成一个新集合")],-1),Q={style:{"text-align":"left"}},V={href:"/collections/take.md",target:"_blank",rel:"noopener noreferrer"},X=(0,n.Uk)("take"),Z=(0,n.Wm)("td",{style:{"text-align":"left"}},"返回给定数量项目的新集合",-1),ee={style:{"text-align":"left"}},te={href:"/collections/takeUntil.md",target:"_blank",rel:"noopener noreferrer"},le=(0,n.Uk)("takeUntil"),ne=(0,n.Wm)("td",{style:{"text-align":"left"}},[(0,n.Uk)("将返回集合中的项目，直到给定的回调返回 "),(0,n.Wm)("code",null,"true")],-1),re={style:{"text-align":"left"}},ae={href:"/collections/takeWhile.md",target:"_blank",rel:"noopener noreferrer"},oe=(0,n.Uk)("takeWhile"),se=(0,n.Wm)("td",{style:{"text-align":"left"}},[(0,n.Uk)("返回集合中的项目，直到给定的回调返回 "),(0,n.Wm)("code",null,"false")],-1),me={style:{"text-align":"left"}},ie={href:"/collections/reverse.md",target:"_blank",rel:"noopener noreferrer"},We=(0,n.Uk)("reverse"),ce=(0,n.Wm)("td",{style:{"text-align":"left"}},"倒转集合中项目的顺序",-1),fe={style:{"text-align":"left"}},pe={href:"/collections/isEmpty.md",target:"_blank",rel:"noopener noreferrer"},de=(0,n.Uk)("isEmpty"),ge=(0,n.Wm)("td",{style:{"text-align":"left"}},"判断集合是否为空",-1),ke={style:{"text-align":"left"}},ue={href:"/collections/isNotEmpty.md",target:"_blank",rel:"noopener noreferrer"},ye=(0,n.Uk)("isNotEmpty"),he=(0,n.Wm)("td",{style:{"text-align":"left"}},"判断集合是否不为空",-1),xe={style:{"text-align":"left"}},be={href:"/collections/last.md",target:"_blank",rel:"noopener noreferrer"},Ue=(0,n.Uk)("last"),_e=(0,n.Wm)("td",{style:{"text-align":"left"}},"返回集合中通过给定真实测试的最后一个元素",-1),ve={style:{"text-align":"left"}},we={href:"/collections/first.md",target:"_blank",rel:"noopener noreferrer"},Ee=(0,n.Uk)("first"),Se=(0,n.Wm)("td",{style:{"text-align":"left"}},"返回集合中通过给定真实测试的第一个元素",-1),Ie={style:{"text-align":"left"}},Be={href:"/collections/groupBy.md",target:"_blank",rel:"noopener noreferrer"},Ne=(0,n.Uk)("groupBy"),Ce=(0,n.Wm)("td",{style:{"text-align":"left"}},"根据给定的键对集合内的项目进行分组",-1),qe={style:{"text-align":"left"}},je={href:"/collections/sortBy.md",target:"_blank",rel:"noopener noreferrer"},Je=(0,n.Uk)("sortBy"),Ke=(0,n.Wm)("td",{style:{"text-align":"left"}},"以给定的键对集合进行正序排序",-1),Ae={style:{"text-align":"left"}},De={href:"/collections/sortByDesc.md",target:"_blank",rel:"noopener noreferrer"},Pe=(0,n.Uk)("sortByDesc"),Re={style:{"text-align":"left"}},Te=(0,n.Uk)("与 "),Oe={href:"/collections/sortBy.md",target:"_blank",rel:"noopener noreferrer"},$e=(0,n.Uk)("sortBy"),ze=(0,n.Uk)(" 一样，以相反的顺序来对集合进行排序"),Le={style:{"text-align":"left"}},Me={href:"/collections/sort.md",target:"_blank",rel:"noopener noreferrer"},Ge=(0,n.Uk)("sort"),He=(0,n.Wm)("td",{style:{"text-align":"left"}},"保留原数组的键，对集合进行排序",-1),Ye={style:{"text-align":"left"}},Fe={href:"/collections/zip.md",target:"_blank",rel:"noopener noreferrer"},Qe=(0,n.Uk)("zip"),Ve=(0,n.Wm)("td",{style:{"text-align":"left"}},"将给定数组的值与相应索引处的原集合的值合并在一起",-1),Xe={style:{"text-align":"left"}},Ze={href:"/collections/dd.md",target:"_blank",rel:"noopener noreferrer"},et=(0,n.Uk)("dd"),tt=(0,n.Wm)("td",{style:{"text-align":"left"}},"打印集合的元素并终止脚本的执行",-1),lt={style:{"text-align":"left"}},nt={href:"/collections/firstWhere.md",target:"_blank",rel:"noopener noreferrer"},rt=(0,n.Uk)("firstWhere"),at=(0,n.Wm)("td",{style:{"text-align":"left"}},"返回给定键值对的第一个元素",-1),ot={style:{"text-align":"left"}},st={href:"/collections/pluck.md",target:"_blank",rel:"noopener noreferrer"},mt=(0,n.Uk)("pluck"),it=(0,n.Wm)("td",{style:{"text-align":"left"}},"获取集合中给定键对应的所有值",-1),Wt={style:{"text-align":"left"}},ct={href:"/collections/filter.md",target:"_blank",rel:"noopener noreferrer"},ft=(0,n.Uk)("filter"),pt=(0,n.Wm)("td",{style:{"text-align":"left"}},"使用给定的回调函数过滤集合的内容，只留下那些通过给定真实测试的内容",-1),dt={style:{"text-align":"left"}},gt={href:"/collections/unwrap.md",target:"_blank",rel:"noopener noreferrer"},kt=(0,n.Uk)("unwrap"),ut=(0,n.Wm)("td",{style:{"text-align":"left"}},"静态 unwrap 方法在适用时从给定值返回集合的基础项",-1),yt={style:{"text-align":"left"}},ht={href:"/collections/wrap.md",target:"_blank",rel:"noopener noreferrer"},xt=(0,n.Uk)("wrap"),bt=(0,n.Wm)("td",{style:{"text-align":"left"}},"静态 wrap 方法在适用时将给定值包装在集合中",-1),Ut={style:{"text-align":"left"}},_t={href:"/collections/whereInstanceOf.md",target:"_blank",rel:"noopener noreferrer"},vt=(0,n.Uk)("whereInstanceOf"),wt=(0,n.Wm)("td",{style:{"text-align":"left"}},"按给定的类类型过滤集合",-1),Et={style:{"text-align":"left"}},St={href:"/collections/whereNotIn.md",target:"_blank",rel:"noopener noreferrer"},It=(0,n.Uk)("whereNotIn"),Bt=(0,n.Wm)("td",{style:{"text-align":"left"}},"集合中不包含的给定键值对进行匹配",-1),Nt={style:{"text-align":"left"}},Ct={href:"/collections/whereNotInStrict.md",target:"_blank",rel:"noopener noreferrer"},qt=(0,n.Uk)("whereNotInStrict"),jt=(0,n.Wm)("td",{style:{"text-align":"left"}},"使用严格模式通过集合中不包含的给定键值对进行匹配",-1),Jt={style:{"text-align":"left"}},Kt={href:"/collections/whereIn.md",target:"_blank",rel:"noopener noreferrer"},At=(0,n.Uk)("whereIn"),Dt=(0,n.Wm)("td",{style:{"text-align":"left"}},"通过给定的键值数组来过滤集合",-1),Pt={style:{"text-align":"left"}},Rt={href:"/collections/whereInStrict.md",target:"_blank",rel:"noopener noreferrer"},Tt=(0,n.Uk)("whereInStrict"),Ot=(0,n.Wm)("td",{style:{"text-align":"left"}},"使用严格模式通过给定的键值数组来过滤集合",-1),$t={style:{"text-align":"left"}},zt={href:"/collections/whereBetween.md",target:"_blank",rel:"noopener noreferrer"},Lt=(0,n.Uk)("whereBetween"),Mt=(0,n.Wm)("td",{style:{"text-align":"left"}},"通过确定指定的项目值是否在给定范围内来过滤集合",-1),Gt={style:{"text-align":"left"}},Ht={href:"/collections/whereNotBetween.md",target:"_blank",rel:"noopener noreferrer"},Yt=(0,n.Uk)("whereNotBetween"),Ft=(0,n.Wm)("td",{style:{"text-align":"left"}},"通过确定指定的项目值不存在给定范围内来过滤集合",-1),Qt={style:{"text-align":"left"}},Vt={href:"/collections/where.md",target:"_blank",rel:"noopener noreferrer"},Xt=(0,n.Uk)("where"),Zt=(0,n.Wm)("td",{style:{"text-align":"left"}},"通过给定的键值过滤集合",-1),el={style:{"text-align":"left"}},tl={href:"/collections/whereStrict.md",target:"_blank",rel:"noopener noreferrer"},ll=(0,n.Uk)("whereStrict"),nl=(0,n.Wm)("td",{style:{"text-align":"left"}},"使用严格模式通过给定的键值过滤集合",-1),rl={style:{"text-align":"left"}},al={href:"/collections/mapToDictionary.md",target:"_blank",rel:"noopener noreferrer"},ol=(0,n.Uk)("mapToDirectory"),sl=(0,n.Wm)("td",{style:{"text-align":"left"}},"通过给定的闭包对集合的项目进行分组。该闭包应返回一个包含单个键/值对的关联数组，从而形成一个新的分组值数组",-1),ml={style:{"text-align":"left"}},il={href:"/collections/mapToGroup.md",target:"_blank",rel:"noopener noreferrer"},Wl=(0,n.Uk)("mapToGroup"),cl=(0,n.Wm)("td",{style:{"text-align":"left"}},"通过给定的闭包对集合的项目进行分组。 该闭包应返回一个包含单个键/值对的关联数组，从而形成一个新的分组值集合",-1),fl={style:{"text-align":"left"}},pl={href:"/collections/mapSpread.md",target:"_blank",rel:"noopener noreferrer"},dl=(0,n.Uk)("mapSpread"),gl=(0,n.Wm)("td",{style:{"text-align":"left"}},[(0,n.Wm)("strong",null,"改变原集合"),(0,n.Uk)("，迭代集合的项目，将每个嵌套的项目值传递到给定的闭包中。 闭包可以自由修改并返回它，从而形成一个新的修改后的集合。")],-1),kl={style:{"text-align":"left"}},ul={href:"/collections/mapInto.md",target:"_blank",rel:"noopener noreferrer"},yl=(0,n.Uk)("mapInto"),hl=(0,n.Wm)("td",{style:{"text-align":"left"}},"遍历集合，通过将值传递给构造函数来创建给定类的新实例",-1),xl={style:{"text-align":"left"}},bl={href:"/collections/mapWithKeys.md",target:"_blank",rel:"noopener noreferrer"},Ul=(0,n.Uk)("mapWithKeys"),_l=(0,n.Wm)("td",{style:{"text-align":"left"}},"遍历集合并将每个值传入给定的回调",-1),vl={style:{"text-align":"left"}},wl={href:"/collections/map.md",target:"_blank",rel:"noopener noreferrer"},El=(0,n.Uk)("map"),Sl=(0,n.Wm)("td",{style:{"text-align":"left"}},"遍历集合并将每一个值传入给定的回调",-1),Il={style:{"text-align":"left"}},Bl={href:"/collections/tap.md",target:"_blank",rel:"noopener noreferrer"},Nl=(0,n.Uk)("tap"),Cl=(0,n.Wm)("td",{style:{"text-align":"left"}},"将集合传递给回调，在特定点「tap」集合",-1),ql={style:{"text-align":"left"}},jl={href:"/collections/diffUsing.md",target:"_blank",rel:"noopener noreferrer"},Jl=(0,n.Uk)("diffUsing"),Kl=(0,n.Wm)("td",{style:{"text-align":"left"}},"获取集合中不存在给定项目的项目",-1),Al={style:{"text-align":"left"}},Dl={href:"/collections/diffAssocUsing.md",target:"_blank",rel:"noopener noreferrer"},Pl=(0,n.Uk)("diffAssocUsing"),Rl=(0,n.Wm)("td",{style:{"text-align":"left"}},"使用回调获取集合中键和值不存在的项目",-1),Tl={style:{"text-align":"left"}},Ol={href:"/collections/diffKeysUsing.md",target:"_blank",rel:"noopener noreferrer"},$l=(0,n.Uk)("diffKeysUsing"),zl=(0,n.Wm)("td",{style:{"text-align":"left"}},"使用回调获取集合中键不存在于给定项中的项",-1),Ll={style:{"text-align":"left"}},Ml={href:"/collections/diff.md",target:"_blank",rel:"noopener noreferrer"},Gl=(0,n.Uk)("diff"),Hl=(0,n.Wm)("td",{style:{"text-align":"left"}},"基于值求差集",-1),Yl={style:{"text-align":"left"}},Fl={href:"/collections/diffAssoc.md",target:"_blank",rel:"noopener noreferrer"},Ql=(0,n.Uk)("diffAssoc"),Vl=(0,n.Wm)("td",{style:{"text-align":"left"}},"基于键值对求差集",-1),Xl={style:{"text-align":"left"}},Zl={href:"/collections/diffKeys.md",target:"_blank",rel:"noopener noreferrer"},en=(0,n.Uk)("diffKeys"),tn=(0,n.Wm)("td",{style:{"text-align":"left"}},"基于键求差集",-1),ln={style:{"text-align":"left"}},nn={href:"/collections/crossJoin.md",target:"_blank",rel:"noopener noreferrer"},rn=(0,n.Uk)("crossJoin"),an=(0,n.Wm)("td",{style:{"text-align":"left"}},"将集合的值交叉连接到给定的数组或集合中，返回具有所有可能排列的笛卡尔积",-1),on={style:{"text-align":"left"}},sn={href:"/collections/count.md",target:"_blank",rel:"noopener noreferrer"},mn=(0,n.Uk)("count"),Wn=(0,n.Wm)("td",{style:{"text-align":"left"}},"返回该集合内的项目总数",-1),cn={style:{"text-align":"left"}},fn={href:"/collections/contains.md",target:"_blank",rel:"noopener noreferrer"},pn=(0,n.Uk)("contains"),dn=(0,n.Wm)("td",{style:{"text-align":"left"}},"判断集合是否包含给定的项目",-1),gn={style:{"text-align":"left"}},kn={href:"/collections/containsStrict.md",target:"_blank",rel:"noopener noreferrer"},un=(0,n.Uk)("containsStrict"),yn=(0,n.Wm)("td",{style:{"text-align":"left"}},"使用「严格模式」来比较所有值",-1),hn={style:{"text-align":"left"}},xn={href:"/collections/concat.md",target:"_blank",rel:"noopener noreferrer"},bn=(0,n.Uk)("concat"),Un=(0,n.Wm)("td",{style:{"text-align":"left"}},"将给定数组或集合的值附加到另一个集合的末尾",-1),_n={style:{"text-align":"left"}},vn={href:"/collections/combine.md",target:"_blank",rel:"noopener noreferrer"},wn=(0,n.Uk)("combine"),En=(0,n.Wm)("td",{style:{"text-align":"left"}},"将一个集合的值作为「键」，再将另一个数组或者集合的值作为「值」合并成一个集合",-1),Sn={style:{"text-align":"left"}},In={href:"/collections/chuck.md",target:"_blank",rel:"noopener noreferrer"},Bn=(0,n.Uk)("chunk"),Nn=(0,n.Wm)("td",{style:{"text-align":"left"}},"将集合拆成多个指定大小的小集合",-1),Cn={style:{"text-align":"left"}},qn={href:"/collections/collapse.md",target:"_blank",rel:"noopener noreferrer"},jn=(0,n.Uk)("collapse"),Jn=(0,n.Wm)("td",{style:{"text-align":"left"}},"将多个数组合并成一个",-1),Kn={style:{"text-align":"left"}},An={href:"/collections/min.md",target:"_blank",rel:"noopener noreferrer"},Dn=(0,n.Uk)("min"),Pn=(0,n.Wm)("td",{style:{"text-align":"left"}},"返回给定键的最小值",-1),Rn={style:{"text-align":"left"}},Tn={href:"/collections/median.md",target:"_blank",rel:"noopener noreferrer"},On=(0,n.Uk)("median"),$n=(0,n.Wm)("td",{style:{"text-align":"left"}},[(0,n.Uk)("方法返回给定"),(0,n.Wm)("strong",null,"键"),(0,n.Uk)("的中间值")],-1),zn={style:{"text-align":"left"}},Ln={href:"/collections/max.md",target:"_blank",rel:"noopener noreferrer"},Mn=(0,n.Uk)("max"),Gn=(0,n.Wm)("td",{style:{"text-align":"left"}},[(0,n.Uk)("返回给定"),(0,n.Wm)("strong",null,"键"),(0,n.Uk)("的最大值")],-1),Hn={style:{"text-align":"left"}},Yn={href:"/collections/avg.md",target:"_blank",rel:"noopener noreferrer"},Fn=(0,n.Uk)("average"),Qn=(0,n.Wm)("td",{style:{"text-align":"left"}},[(0,n.Uk)("方法"),(0,n.Wm)("code",null,"avg()"),(0,n.Uk)("的别名")],-1),Vn={style:{"text-align":"left"}},Xn={href:"/collections/avg.md",target:"_blank",rel:"noopener noreferrer"},Zn=(0,n.Uk)("avg"),er=(0,n.Wm)("td",{style:{"text-align":"left"}},[(0,n.Uk)("返回给定键的"),(0,n.Wm)("strong",null,"平均值")],-1),tr={style:{"text-align":"left"}},lr={href:"/collections/every.md",target:"_blank",rel:"noopener noreferrer"},nr=(0,n.Uk)("every"),rr=(0,n.Wm)("td",{style:{"text-align":"left"}},"可用于验证集合中每一个元素都通过给定的真实测试",-1),ar={style:{"text-align":"left"}},or={href:"/collections/except.md",target:"_blank",rel:"noopener noreferrer"},sr=(0,n.Uk)("except"),mr=(0,n.Wm)("td",{style:{"text-align":"left"}},"返回集合中除了指定键以外的所有项目",-1),ir={style:{"text-align":"left"}},Wr={href:"/collections/flatMap.md",target:"_blank",rel:"noopener noreferrer"},cr=(0,n.Uk)("flatMap"),fr=(0,n.Wm)("td",{style:{"text-align":"left"}},"遍历集合并将其中的每个值传递到给定的回调",-1),pr={style:{"text-align":"left"}},dr={href:"/collections/flatten.md",target:"_blank",rel:"noopener noreferrer"},gr=(0,n.Uk)("flatten"),kr=(0,n.Wm)("td",{style:{"text-align":"left"}},"将多维集合转为一维",-1),ur={style:{"text-align":"left"}},yr={href:"/collections/flip.md",target:"_blank",rel:"noopener noreferrer"},hr=(0,n.Uk)("flip"),xr=(0,n.Wm)("td",{style:{"text-align":"left"}},"将集合中的键和对应的数值进行互换",-1),br={style:{"text-align":"left"}},Ur={href:"/collections/forget.md",target:"_blank",rel:"noopener noreferrer"},_r=(0,n.Uk)("forget"),vr=(0,n.Wm)("td",{style:{"text-align":"left"}},[(0,n.Wm)("strong",null,"改变原集合"),(0,n.Uk)("，通过给定的键来移除掉集合中对应的内容")],-1),wr={style:{"text-align":"left"}},Er={href:"/collections/forPage.md",target:"_blank",rel:"noopener noreferrer"},Sr=(0,n.Uk)("forPage"),Ir=(0,n.Wm)("td",{style:{"text-align":"left"}},"返回给定页码上显示的项目的新集合",-1),Br={style:{"text-align":"left"}},Nr={href:"/collections/get.md",target:"_blank",rel:"noopener noreferrer"},Cr=(0,n.Uk)("get"),qr=(0,n.Wm)("td",{style:{"text-align":"left"}},"返回给定键的项目",-1),jr={style:{"text-align":"left"}},Jr={href:"/collections/has.md",target:"_blank",rel:"noopener noreferrer"},Kr=(0,n.Uk)("has"),Ar=(0,n.Wm)("td",{style:{"text-align":"left"}},"判断集合中是否存在给定的键",-1),Dr={style:{"text-align":"left"}},Pr={href:"/collections/implode.md",target:"_blank",rel:"noopener noreferrer"},Rr=(0,n.Uk)("implode"),Tr=(0,n.Wm)("td",{style:{"text-align":"left"}},"合并集合中的项目",-1),Or={style:{"text-align":"left"}},$r={href:"/collections/intersect.md",target:"_blank",rel:"noopener noreferrer"},zr=(0,n.Uk)("intersect"),Lr=(0,n.Wm)("td",{style:{"text-align":"left"}},"从原集合中删除不在给定数组或集合中的任何值",-1),Mr={style:{"text-align":"left"}},Gr={href:"/collections/intersectByKeys.md",target:"_blank",rel:"noopener noreferrer"},Hr=(0,n.Uk)("intersectByKeys"),Yr=(0,n.Wm)("td",{style:{"text-align":"left"}},"删除原集合中不存在于给定数组或集合中的任何键",-1),Fr={style:{"text-align":"left"}},Qr={href:"/collections/keyBy.md",target:"_blank",rel:"noopener noreferrer"},Vr=(0,n.Uk)("keyBy"),Xr=(0,n.Wm)("td",{style:{"text-align":"left"}},"以给定的键作为集合的键",-1),Zr={style:{"text-align":"left"}},ea={href:"/collections/keys.md",target:"_blank",rel:"noopener noreferrer"},ta=(0,n.Uk)("keys"),la=(0,n.Wm)("td",{style:{"text-align":"left"}},"返回集合的所有键",-1),na={style:{"text-align":"left"}},ra={href:"/collections/merge.md",target:"_blank",rel:"noopener noreferrer"},aa=(0,n.Uk)("merge"),oa=(0,n.Wm)("td",{style:{"text-align":"left"}},"将给定数组或集合合并到原集合",-1),sa={style:{"text-align":"left"}},ma={href:"/collections/mergeRecursive.md",target:"_blank",rel:"noopener noreferrer"},ia=(0,n.Uk)("mergeRecursive"),Wa=(0,n.Wm)("td",{style:{"text-align":"left"}},"将给定的数组或集合与原始集合递归合并",-1),ca={style:{"text-align":"left"}},fa={href:"/collections/mode.md",target:"_blank",rel:"noopener noreferrer"},pa=(0,n.Uk)("mode"),da={style:{"text-align":"left"}},ga=(0,n.Uk)("返回给定"),ka=(0,n.Wm)("strong",null,"键",-1),ua=(0,n.Uk)("的"),ya={href:"https://baike.baidu.com/item/%E4%BC%97%E6%95%B0/44796",title:"百度百科-众数值",target:"_blank",rel:"noopener noreferrer"},ha=(0,n.Uk)("众数值"),xa={style:{"text-align":"left"}},ba={href:"/collections/partition.md",target:"_blank",rel:"noopener noreferrer"},Ua=(0,n.Uk)("partition"),_a=(0,n.Wm)("td",{style:{"text-align":"left"}},[(0,n.Uk)("配合"),(0,n.Wm)("code",null,"list()"),(0,n.Uk)("方法区分回调函数满足和不满足的数据")],-1),va={style:{"text-align":"left"}},wa={href:"/collections/pipe.md",target:"_blank",rel:"noopener noreferrer"},Ea=(0,n.Uk)("pipe"),Sa=(0,n.Wm)("td",{style:{"text-align":"left"}},"将集合传给给定的回调并返回结果",-1),Ia={style:{"text-align":"left"}},Ba={href:"/collections/pipeInto.md",target:"_blank",rel:"noopener noreferrer"},Na=(0,n.Uk)("pipeInto"),Ca=(0,n.Wm)("td",{style:{"text-align":"left"}},"创建给定类的新实例，并将集合传递给构造函数",-1),qa={style:{"text-align":"left"}},ja={href:"/collections/pop.md",target:"_blank",rel:"noopener noreferrer"},Ja=(0,n.Uk)("pop"),Ka=(0,n.Wm)("td",{style:{"text-align":"left"}},[(0,n.Wm)("strong",null,"改变原集合"),(0,n.Uk)("，移除并返回集合中的最后一个项目")],-1),Aa={style:{"text-align":"left"}},Da={href:"/collections/prepend.md",target:"_blank",rel:"noopener noreferrer"},Pa=(0,n.Uk)("prepend"),Ra=(0,n.Wm)("td",{style:{"text-align":"left"}},[(0,n.Wm)("strong",null,"改变原集合"),(0,n.Uk)("，将给定的值添加到集合的开头")],-1),Ta={style:{"text-align":"left"}},Oa={href:"/collections/pull.md",target:"_blank",rel:"noopener noreferrer"},$a=(0,n.Uk)("pull"),za=(0,n.Wm)("td",{style:{"text-align":"left"}},[(0,n.Wm)("strong",null,"改变原集合"),(0,n.Uk)("，把给定键对应的值从集合中移除并返回")],-1),La={style:{"text-align":"left"}},Ma={href:"/collections/push.md",target:"_blank",rel:"noopener noreferrer"},Ga=(0,n.Uk)("push"),Ha=(0,n.Wm)("td",{style:{"text-align":"left"}},[(0,n.Wm)("strong",null,"改变原集合"),(0,n.Uk)("，把给定值添加到集合的末尾")],-1),Ya={style:{"text-align":"left"}},Fa={href:"/collections/put.md",target:"_blank",rel:"noopener noreferrer"},Qa=(0,n.Uk)("put"),Va=(0,n.Wm)("td",{style:{"text-align":"left"}},[(0,n.Wm)("strong",null,"改变原集合"),(0,n.Uk)("，在集合内设置给定的键值对")],-1),Xa={style:{"text-align":"left"}},Za={href:"/collections/random.md",target:"_blank",rel:"noopener noreferrer"},eo=(0,n.Uk)("random"),to=(0,n.Wm)("td",{style:{"text-align":"left"}},"从集合中返回一个随机项",-1),lo={style:{"text-align":"left"}},no={href:"/collections/reduce.md",target:"_blank",rel:"noopener noreferrer"},ro=(0,n.Uk)("reduce"),ao=(0,n.Wm)("td",{style:{"text-align":"left"}},"将每次迭代的结果传递给下一次迭代直到集合减少为单个值",-1),oo={style:{"text-align":"left"}},so={href:"/collections/reject.md",target:"_blank",rel:"noopener noreferrer"},mo=(0,n.Uk)("reject"),io=(0,n.Wm)("td",{style:{"text-align":"left"}},"使用指定的回调过滤集合",-1),Wo={style:{"text-align":"left"}},co={href:"/collections/search.md",target:"_blank",rel:"noopener noreferrer"},fo=(0,n.Uk)("search"),po=(0,n.Wm)("td",{style:{"text-align":"left"}},"搜索给定的值并返回它的键",-1),go={style:{"text-align":"left"}},ko={href:"/collections/shift.md",target:"_blank",rel:"noopener noreferrer"},uo=(0,n.Uk)("shift"),yo=(0,n.Wm)("td",{style:{"text-align":"left"}},[(0,n.Wm)("strong",null,"改变原集合"),(0,n.Uk)("，移除并返回集合的第一个项目")],-1),ho={style:{"text-align":"left"}},xo={href:"/collections/shuffle.md",target:"_blank",rel:"noopener noreferrer"},bo=(0,n.Uk)("shuffle"),Uo=(0,n.Wm)("td",{style:{"text-align":"left"}},"随机排序集合中的项目",-1),_o={style:{"text-align":"left"}},vo={href:"/collections/skip.md",target:"_blank",rel:"noopener noreferrer"},wo=(0,n.Uk)("skip"),Eo=(0,n.Wm)("td",{style:{"text-align":"left"}},"返回一个新的集合，其中给定数量的元素从集合的开头删除",-1),So={style:{"text-align":"left"}},Io={href:"/collections/skipUntil.md",target:"_blank",rel:"noopener noreferrer"},Bo=(0,n.Uk)("skipUntil"),No=(0,n.Wm)("td",{style:{"text-align":"left"}},[(0,n.Uk)("跳过集合中的项目，直到给定的回调返回 "),(0,n.Wm)("code",null,"true"),(0,n.Uk)(" ，然后将集合中的其余项目作为新集合实例返回")],-1),Co={style:{"text-align":"left"}},qo={href:"/collections/skipWhile.md",target:"_blank",rel:"noopener noreferrer"},jo=(0,n.Uk)("skipWhile"),Jo=(0,n.Wm)("td",{style:{"text-align":"left"}},[(0,n.Uk)("跳过集合中的项目，同时给定的回调返回 "),(0,n.Wm)("code",null,"true"),(0,n.Uk)(" ，然后将集合中的其余项目作为新集合返回")],-1),Ko={style:{"text-align":"left"}},Ao={href:"/collections/slice.md",target:"_blank",rel:"noopener noreferrer"},Do=(0,n.Uk)("slice"),Po=(0,n.Wm)("td",{style:{"text-align":"left"}},"返回集合中给定值后面的部分",-1),Ro={style:{"text-align":"left"}},To={href:"/collections/contains.md",target:"_blank",rel:"noopener noreferrer"},Oo=(0,n.Uk)("some"),$o={style:{"text-align":"left"}},zo={href:"/collections/contains.md",target:"_blank",rel:"noopener noreferrer"},Lo=(0,n.Uk)("contains"),Mo=(0,n.Uk)(" 方法的别名"),Go={style:{"text-align":"left"}},Ho={href:"/collections/splice.md",target:"_blank",rel:"noopener noreferrer"},Yo=(0,n.Uk)("splice"),Fo=(0,n.Wm)("td",{style:{"text-align":"left"}},"删除并返回从给定值后的内容，原集合也会受到影响",-1),Qo={style:{"text-align":"left"}},Vo={href:"/collections/split.md",target:"_blank",rel:"noopener noreferrer"},Xo=(0,n.Uk)("split"),Zo=(0,n.Wm)("td",{style:{"text-align":"left"}},"将集合按给定的值拆分",-1),es={style:{"text-align":"left"}},ts={href:"/collections/splitIn.md",target:"_blank",rel:"noopener noreferrer"},ls=(0,n.Uk)("splitIn"),ns=(0,n.Wm)("td",{style:{"text-align":"left"}},"将集合分为给定数量的组",-1),rs={style:{"text-align":"left"}},as={href:"/collections/sum.md",target:"_blank",rel:"noopener noreferrer"},os=(0,n.Uk)("sum"),ss=(0,n.Wm)("td",{style:{"text-align":"left"}},"返回集合内所有项目的总和",-1),ms={style:{"text-align":"left"}},is={href:"/collections/transform.md",target:"_blank",rel:"noopener noreferrer"},Ws=(0,n.Uk)("transform"),cs=(0,n.Wm)("td",{style:{"text-align":"left"}},[(0,n.Wm)("strong",null,"改变原集合"),(0,n.Uk)("，迭代集合并对集合内的每个项目调用给定的回调")],-1),fs={style:{"text-align":"left"}},ps={href:"/collections/union.md",target:"_blank",rel:"noopener noreferrer"},ds=(0,n.Uk)("union"),gs=(0,n.Wm)("td",{style:{"text-align":"left"}},"将给定的数组添加到集合中",-1),ks={style:{"text-align":"left"}},us={href:"/collections/unique.md",target:"_blank",rel:"noopener noreferrer"},ys=(0,n.Uk)("unique"),hs=(0,n.Wm)("td",{style:{"text-align":"left"}},"返回集合中所有唯一的项目",-1),xs={style:{"text-align":"left"}},bs={href:"/collections/uniqueStrict.md",target:"_blank",rel:"noopener noreferrer"},Us=(0,n.Uk)("uniqueStrict"),_s=(0,n.Wm)("td",{style:{"text-align":"left"}},"使用严格模式返回集合中所有唯一的项目",-1),vs={style:{"text-align":"left"}},ws={href:"/collections/unless.md",target:"_blank",rel:"noopener noreferrer"},Es=(0,n.Uk)("unless"),Ss=(0,n.Wm)("td",{style:{"text-align":"left"}},"除非方法的第一个参数的计算结果为true，否则该方法将执行给定的回调",-1),Is={style:{"text-align":"left"}},Bs={href:"/collections/whenNotEmpty.md",target:"_blank",rel:"noopener noreferrer"},Ns=(0,n.Uk)("unlessEmpty"),Cs={style:{"text-align":"left"}},qs={href:"/collections/whenNotEmpty.md",target:"_blank",rel:"noopener noreferrer"},js=(0,n.Uk)("whenNotEmpty"),Js=(0,n.Uk)(" 方法的别名"),Ks={style:{"text-align":"left"}},As={href:"/collections/whenEmpty.md",target:"_blank",rel:"noopener noreferrer"},Ds=(0,n.Uk)("unlessNotEmpty"),Ps={style:{"text-align":"left"}},Rs={href:"/collections/whenEmpty.md",target:"_blank",rel:"noopener noreferrer"},Ts=(0,n.Uk)("whenEmpty"),Os=(0,n.Uk)(" 方法别名"),$s={style:{"text-align":"left"}},zs={href:"/collections/values.md",target:"_blank",rel:"noopener noreferrer"},Ls=(0,n.Uk)("values"),Ms=(0,n.Wm)("td",{style:{"text-align":"left"}},"返回键被重置为连续编号的新集合",-1),Gs={style:{"text-align":"left"}},Hs={href:"/collections/when.md",target:"_blank",rel:"noopener noreferrer"},Ys=(0,n.Uk)("when"),Fs=(0,n.Wm)("td",{style:{"text-align":"left"}},"当传入的第一个参数为 true 的时，将执行给定的回调",-1),Qs={style:{"text-align":"left"}},Vs={href:"/collections/whenEmpty.md",target:"_blank",rel:"noopener noreferrer"},Xs=(0,n.Uk)("whenEmpty"),Zs=(0,n.Wm)("td",{style:{"text-align":"left"}},[(0,n.Uk)("当集合为空时，"),(0,n.Wm)("code",null,"whenEmpty"),(0,n.Uk)(" 方法将执行给定的回调")],-1),em={style:{"text-align":"left"}},tm={href:"/collections/whenNotEmpty.md",target:"_blank",rel:"noopener noreferrer"},lm=(0,n.Uk)("whenNotEmpty"),nm=(0,n.Wm)("td",{style:{"text-align":"left"}},[(0,n.Uk)("当集合不为空时，"),(0,n.Wm)("code",null,"whenNotEmpty"),(0,n.Uk)(" 方法将执行给定的回调")],-1),rm=(0,n.uE)('<h2 id="其它项目中单独使用"><a class="header-anchor" href="#其它项目中单独使用">#</a> 其它项目中单独使用</h2><h3 id="安装"><a class="header-anchor" href="#安装">#</a> 安装</h3><p>Laravel 中的 Collection 使用 Composer 管理，所以可以在项目中使用 composer 安装到非 Laravel 项目中，比如新建一个 collections-demo 目录，通过下面使用命令安装</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">mkdir</span> collections-demo <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">cd</span> collections-demo\n<span class="token function">composer</span> require illuminate/support\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>执行完上面的命令将得到所需要的拓展包。</p><h3 id="使用"><a class="header-anchor" href="#使用">#</a> 使用</h3><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>\n<span class="token comment">// 引入 package</span>\n<span class="token keyword">require</span> <span class="token constant">__DIR__</span> <span class="token operator">.</span> <span class="token string single-quoted-string">&#39;/vendor/autoload.php&#39;</span><span class="token punctuation">;</span>\n\n<span class="token comment">// 简单使用</span>\n<span class="token function">collect</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Illuminate\\Support\\Collection {#1070 all: [1, 2, 3]}</span>\n</span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="在javascript中使用集合相关操作"><a class="header-anchor" href="#在javascript中使用集合相关操作">#</a> 在JavaScript中使用集合相关操作</h2>',8),am=(0,n.Uk)("如果在 JavaScript 中也需要使用类似的数组操作，可以参考 "),om={href:"https://github.com/ecrmnn/collect.js",target:"_blank",rel:"noopener noreferrer"},sm=(0,n.Uk)("ecrmnn/collect.js"),mm=(0,n.Uk)("。"),im={render:function(e,t){const l=(0,n.up)("OutboundLink");return(0,n.wg)(),(0,n.j4)(n.HY,null,[r,(0,n.Wm)("blockquote",null,[(0,n.Wm)("p",null,[a,(0,n.Wm)("a",o,[s,(0,n.Wm)(l)]),m,i,W])]),c,f,(0,n.Wm)("table",null,[p,(0,n.Wm)("tbody",null,[(0,n.Wm)("tr",null,[(0,n.Wm)("td",d,[(0,n.Wm)("a",g,[k,(0,n.Wm)(l)])]),u]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",y,[(0,n.Wm)("a",h,[x,(0,n.Wm)(l)])]),b]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",U,[(0,n.Wm)("a",_,[v,(0,n.Wm)(l)])]),w]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",E,[(0,n.Wm)("a",S,[I,(0,n.Wm)(l)])]),B]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",N,[(0,n.Wm)("a",C,[q,(0,n.Wm)(l)])]),j]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",J,[(0,n.Wm)("a",K,[A,(0,n.Wm)(l)])]),D]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",P,[(0,n.Wm)("a",R,[T,(0,n.Wm)(l)])]),O]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",$,[(0,n.Wm)("a",z,[L,(0,n.Wm)(l)])]),M]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",G,[(0,n.Wm)("a",H,[Y,(0,n.Wm)(l)])]),F]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",Q,[(0,n.Wm)("a",V,[X,(0,n.Wm)(l)])]),Z]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",ee,[(0,n.Wm)("a",te,[le,(0,n.Wm)(l)])]),ne]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",re,[(0,n.Wm)("a",ae,[oe,(0,n.Wm)(l)])]),se]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",me,[(0,n.Wm)("a",ie,[We,(0,n.Wm)(l)])]),ce]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",fe,[(0,n.Wm)("a",pe,[de,(0,n.Wm)(l)])]),ge]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",ke,[(0,n.Wm)("a",ue,[ye,(0,n.Wm)(l)])]),he]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",xe,[(0,n.Wm)("a",be,[Ue,(0,n.Wm)(l)])]),_e]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",ve,[(0,n.Wm)("a",we,[Ee,(0,n.Wm)(l)])]),Se]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",Ie,[(0,n.Wm)("a",Be,[Ne,(0,n.Wm)(l)])]),Ce]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",qe,[(0,n.Wm)("a",je,[Je,(0,n.Wm)(l)])]),Ke]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",Ae,[(0,n.Wm)("a",De,[Pe,(0,n.Wm)(l)])]),(0,n.Wm)("td",Re,[Te,(0,n.Wm)("a",Oe,[$e,(0,n.Wm)(l)]),ze])]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",Le,[(0,n.Wm)("a",Me,[Ge,(0,n.Wm)(l)])]),He]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",Ye,[(0,n.Wm)("a",Fe,[Qe,(0,n.Wm)(l)])]),Ve]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",Xe,[(0,n.Wm)("a",Ze,[et,(0,n.Wm)(l)])]),tt]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",lt,[(0,n.Wm)("a",nt,[rt,(0,n.Wm)(l)])]),at]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",ot,[(0,n.Wm)("a",st,[mt,(0,n.Wm)(l)])]),it]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",Wt,[(0,n.Wm)("a",ct,[ft,(0,n.Wm)(l)])]),pt]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",dt,[(0,n.Wm)("a",gt,[kt,(0,n.Wm)(l)])]),ut]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",yt,[(0,n.Wm)("a",ht,[xt,(0,n.Wm)(l)])]),bt]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",Ut,[(0,n.Wm)("a",_t,[vt,(0,n.Wm)(l)])]),wt]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",Et,[(0,n.Wm)("a",St,[It,(0,n.Wm)(l)])]),Bt]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",Nt,[(0,n.Wm)("a",Ct,[qt,(0,n.Wm)(l)])]),jt]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",Jt,[(0,n.Wm)("a",Kt,[At,(0,n.Wm)(l)])]),Dt]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",Pt,[(0,n.Wm)("a",Rt,[Tt,(0,n.Wm)(l)])]),Ot]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",$t,[(0,n.Wm)("a",zt,[Lt,(0,n.Wm)(l)])]),Mt]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",Gt,[(0,n.Wm)("a",Ht,[Yt,(0,n.Wm)(l)])]),Ft]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",Qt,[(0,n.Wm)("a",Vt,[Xt,(0,n.Wm)(l)])]),Zt]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",el,[(0,n.Wm)("a",tl,[ll,(0,n.Wm)(l)])]),nl]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",rl,[(0,n.Wm)("a",al,[ol,(0,n.Wm)(l)])]),sl]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",ml,[(0,n.Wm)("a",il,[Wl,(0,n.Wm)(l)])]),cl]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",fl,[(0,n.Wm)("a",pl,[dl,(0,n.Wm)(l)])]),gl]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",kl,[(0,n.Wm)("a",ul,[yl,(0,n.Wm)(l)])]),hl]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",xl,[(0,n.Wm)("a",bl,[Ul,(0,n.Wm)(l)])]),_l]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",vl,[(0,n.Wm)("a",wl,[El,(0,n.Wm)(l)])]),Sl]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",Il,[(0,n.Wm)("a",Bl,[Nl,(0,n.Wm)(l)])]),Cl]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",ql,[(0,n.Wm)("a",jl,[Jl,(0,n.Wm)(l)])]),Kl]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",Al,[(0,n.Wm)("a",Dl,[Pl,(0,n.Wm)(l)])]),Rl]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",Tl,[(0,n.Wm)("a",Ol,[$l,(0,n.Wm)(l)])]),zl]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",Ll,[(0,n.Wm)("a",Ml,[Gl,(0,n.Wm)(l)])]),Hl]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",Yl,[(0,n.Wm)("a",Fl,[Ql,(0,n.Wm)(l)])]),Vl]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",Xl,[(0,n.Wm)("a",Zl,[en,(0,n.Wm)(l)])]),tn]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",ln,[(0,n.Wm)("a",nn,[rn,(0,n.Wm)(l)])]),an]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",on,[(0,n.Wm)("a",sn,[mn,(0,n.Wm)(l)])]),Wn]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",cn,[(0,n.Wm)("a",fn,[pn,(0,n.Wm)(l)])]),dn]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",gn,[(0,n.Wm)("a",kn,[un,(0,n.Wm)(l)])]),yn]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",hn,[(0,n.Wm)("a",xn,[bn,(0,n.Wm)(l)])]),Un]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",_n,[(0,n.Wm)("a",vn,[wn,(0,n.Wm)(l)])]),En]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",Sn,[(0,n.Wm)("a",In,[Bn,(0,n.Wm)(l)])]),Nn]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",Cn,[(0,n.Wm)("a",qn,[jn,(0,n.Wm)(l)])]),Jn]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",Kn,[(0,n.Wm)("a",An,[Dn,(0,n.Wm)(l)])]),Pn]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",Rn,[(0,n.Wm)("a",Tn,[On,(0,n.Wm)(l)])]),$n]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",zn,[(0,n.Wm)("a",Ln,[Mn,(0,n.Wm)(l)])]),Gn]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",Hn,[(0,n.Wm)("a",Yn,[Fn,(0,n.Wm)(l)])]),Qn]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",Vn,[(0,n.Wm)("a",Xn,[Zn,(0,n.Wm)(l)])]),er]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",tr,[(0,n.Wm)("a",lr,[nr,(0,n.Wm)(l)])]),rr]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",ar,[(0,n.Wm)("a",or,[sr,(0,n.Wm)(l)])]),mr]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",ir,[(0,n.Wm)("a",Wr,[cr,(0,n.Wm)(l)])]),fr]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",pr,[(0,n.Wm)("a",dr,[gr,(0,n.Wm)(l)])]),kr]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",ur,[(0,n.Wm)("a",yr,[hr,(0,n.Wm)(l)])]),xr]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",br,[(0,n.Wm)("a",Ur,[_r,(0,n.Wm)(l)])]),vr]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",wr,[(0,n.Wm)("a",Er,[Sr,(0,n.Wm)(l)])]),Ir]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",Br,[(0,n.Wm)("a",Nr,[Cr,(0,n.Wm)(l)])]),qr]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",jr,[(0,n.Wm)("a",Jr,[Kr,(0,n.Wm)(l)])]),Ar]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",Dr,[(0,n.Wm)("a",Pr,[Rr,(0,n.Wm)(l)])]),Tr]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",Or,[(0,n.Wm)("a",$r,[zr,(0,n.Wm)(l)])]),Lr]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",Mr,[(0,n.Wm)("a",Gr,[Hr,(0,n.Wm)(l)])]),Yr]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",Fr,[(0,n.Wm)("a",Qr,[Vr,(0,n.Wm)(l)])]),Xr]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",Zr,[(0,n.Wm)("a",ea,[ta,(0,n.Wm)(l)])]),la]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",na,[(0,n.Wm)("a",ra,[aa,(0,n.Wm)(l)])]),oa]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",sa,[(0,n.Wm)("a",ma,[ia,(0,n.Wm)(l)])]),Wa]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",ca,[(0,n.Wm)("a",fa,[pa,(0,n.Wm)(l)])]),(0,n.Wm)("td",da,[ga,ka,ua,(0,n.Wm)("a",ya,[ha,(0,n.Wm)(l)])])]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",xa,[(0,n.Wm)("a",ba,[Ua,(0,n.Wm)(l)])]),_a]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",va,[(0,n.Wm)("a",wa,[Ea,(0,n.Wm)(l)])]),Sa]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",Ia,[(0,n.Wm)("a",Ba,[Na,(0,n.Wm)(l)])]),Ca]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",qa,[(0,n.Wm)("a",ja,[Ja,(0,n.Wm)(l)])]),Ka]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",Aa,[(0,n.Wm)("a",Da,[Pa,(0,n.Wm)(l)])]),Ra]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",Ta,[(0,n.Wm)("a",Oa,[$a,(0,n.Wm)(l)])]),za]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",La,[(0,n.Wm)("a",Ma,[Ga,(0,n.Wm)(l)])]),Ha]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",Ya,[(0,n.Wm)("a",Fa,[Qa,(0,n.Wm)(l)])]),Va]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",Xa,[(0,n.Wm)("a",Za,[eo,(0,n.Wm)(l)])]),to]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",lo,[(0,n.Wm)("a",no,[ro,(0,n.Wm)(l)])]),ao]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",oo,[(0,n.Wm)("a",so,[mo,(0,n.Wm)(l)])]),io]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",Wo,[(0,n.Wm)("a",co,[fo,(0,n.Wm)(l)])]),po]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",go,[(0,n.Wm)("a",ko,[uo,(0,n.Wm)(l)])]),yo]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",ho,[(0,n.Wm)("a",xo,[bo,(0,n.Wm)(l)])]),Uo]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",_o,[(0,n.Wm)("a",vo,[wo,(0,n.Wm)(l)])]),Eo]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",So,[(0,n.Wm)("a",Io,[Bo,(0,n.Wm)(l)])]),No]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",Co,[(0,n.Wm)("a",qo,[jo,(0,n.Wm)(l)])]),Jo]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",Ko,[(0,n.Wm)("a",Ao,[Do,(0,n.Wm)(l)])]),Po]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",Ro,[(0,n.Wm)("a",To,[Oo,(0,n.Wm)(l)])]),(0,n.Wm)("td",$o,[(0,n.Wm)("a",zo,[Lo,(0,n.Wm)(l)]),Mo])]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",Go,[(0,n.Wm)("a",Ho,[Yo,(0,n.Wm)(l)])]),Fo]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",Qo,[(0,n.Wm)("a",Vo,[Xo,(0,n.Wm)(l)])]),Zo]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",es,[(0,n.Wm)("a",ts,[ls,(0,n.Wm)(l)])]),ns]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",rs,[(0,n.Wm)("a",as,[os,(0,n.Wm)(l)])]),ss]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",ms,[(0,n.Wm)("a",is,[Ws,(0,n.Wm)(l)])]),cs]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",fs,[(0,n.Wm)("a",ps,[ds,(0,n.Wm)(l)])]),gs]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",ks,[(0,n.Wm)("a",us,[ys,(0,n.Wm)(l)])]),hs]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",xs,[(0,n.Wm)("a",bs,[Us,(0,n.Wm)(l)])]),_s]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",vs,[(0,n.Wm)("a",ws,[Es,(0,n.Wm)(l)])]),Ss]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",Is,[(0,n.Wm)("a",Bs,[Ns,(0,n.Wm)(l)])]),(0,n.Wm)("td",Cs,[(0,n.Wm)("a",qs,[js,(0,n.Wm)(l)]),Js])]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",Ks,[(0,n.Wm)("a",As,[Ds,(0,n.Wm)(l)])]),(0,n.Wm)("td",Ps,[(0,n.Wm)("a",Rs,[Ts,(0,n.Wm)(l)]),Os])]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",$s,[(0,n.Wm)("a",zs,[Ls,(0,n.Wm)(l)])]),Ms]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",Gs,[(0,n.Wm)("a",Hs,[Ys,(0,n.Wm)(l)])]),Fs]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",Qs,[(0,n.Wm)("a",Vs,[Xs,(0,n.Wm)(l)])]),Zs]),(0,n.Wm)("tr",null,[(0,n.Wm)("td",em,[(0,n.Wm)("a",tm,[lm,(0,n.Wm)(l)])]),nm])])]),rm,(0,n.Wm)("p",null,[am,(0,n.Wm)("a",om,[sm,(0,n.Wm)(l)]),mm])],64)}}}}]);