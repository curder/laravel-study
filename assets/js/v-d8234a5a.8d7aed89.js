(self.webpackChunklaravel_study=self.webpackChunklaravel_study||[]).push([[4036],{2822:(e,n,a)=>{"use strict";a.r(n),a.d(n,{data:()=>s});const s={key:"v-d8234a5a",path:"/others/laravel_packages.html",title:"",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"创建目录",slug:"创建目录",children:[]},{level:2,title:"修改 composer.json 文件",slug:"修改-composer-json-文件",children:[]},{level:2,title:"生成Provider并注册",slug:"生成provider并注册",children:[{level:3,title:"创建一个测试文件 Admin.php",slug:"创建一个测试文件-admin-php",children:[]},{level:3,title:"生成Provider文件并挪到相应位置",slug:"生成provider文件并挪到相应位置",children:[]},{level:3,title:"修改Provider文件并注册到Laravel的IOC容器中",slug:"修改provider文件并注册到laravel的ioc容器中",children:[]},{level:3,title:"测试",slug:"测试",children:[]}]},{level:2,title:"将package放到github仓库",slug:"将package放到github仓库",children:[{level:3,title:"到github登录自己的账号和密码，创建一个新的仓库并上传源代码",slug:"到github登录自己的账号和密码-创建一个新的仓库并上传源代码",children:[]}]},{level:2,title:"配置github提交时自动通知Packagist",slug:"配置github提交时自动通知packagist",children:[]},{level:2,title:"提交package到Packagist",slug:"提交package到packagist",children:[]}],filePathRelative:"others/laravel_packages.md",git:{updatedTime:1617071363e3,contributors:[]}}},9600:(e,n,a)=>{"use strict";a.r(n),a.d(n,{default:()=>C});var s=a(6252);const r=(0,s.uE)('<p>Laravel 5.4 GitHub托管数据 Packagist托管Composer包</p><p>首先，使用composer获取到Laravel项目，并做好相关配置。</p><blockquote><p>注意： 在下例中使用到 php 相关命令行执行操作的时候，如无特殊说明都是在项目的根目录下操作。</p></blockquote><h2 id="创建目录"><a class="header-anchor" href="#创建目录">#</a> 创建目录</h2><ul><li>创建<code>packages</code>目录存放本地的开发包，</li><li>在<code>packages</code>目录下，创建相应的<code>vendor</code>目录，如<code>github</code>的用户名等，如这里我使用的<code>curder</code></li><li>在<code>curder</code>目录下创建软件包名称，<code>laravel-admin</code></li></ul><p>具体的目录结构如下：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>app/\nartisan/\n...\ndatabase/\npackage.json\npackages\n└── curder\n    └── laravel-admin\n        └── src\nphpunit.xml\npublic/\n...\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="修改-composer-json-文件"><a class="header-anchor" href="#修改-composer-json-文件">#</a> 修改 <code>composer.json</code> 文件</h2><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>&quot;autoload&quot;: {\n    &quot;classmap&quot;: [\n        &quot;database/seeds&quot;,\n        &quot;database/factories&quot;\n    ],\n    &quot;psr-4&quot;: {\n        &quot;App\\\\&quot;: &quot;app/&quot;\n    }\n},\n&quot;autoload-dev&quot;: {\n    &quot;psr-4&quot;: {\n        &quot;Tests\\\\&quot;: &quot;tests/&quot;,\n        &quot;Curder\\\\Admin\\\\&quot;: &quot;packages/curder/laravel-admin/src/&quot;\n    }\n},\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><blockquote><p>注意看上述配置中 <code>Curder\\\\Admin\\\\</code>（命名空间）的值，配置值指向目录真实路径。</p></blockquote><h2 id="生成provider并注册"><a class="header-anchor" href="#生成provider并注册">#</a> 生成<code>Provider</code>并注册</h2><h3 id="创建一个测试文件-admin-php"><a class="header-anchor" href="#创建一个测试文件-admin-php">#</a> 创建一个测试文件 Admin.php</h3><p>文件内容如下：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>&lt;?php\nnamespace Curder\\Admin;\n\nclass Admin {\n    public function sayHello() {\n        return &#39;Hello&#39;;\n    }\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="生成provider文件并挪到相应位置"><a class="header-anchor" href="#生成provider文件并挪到相应位置">#</a> 生成<code>Provider</code>文件并挪到相应位置</h3><p>使用命令生成一个<code>Provider</code>，如下：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>php artisan make:provider AdminProvider\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>执行完这个命令将生成 <code>AdminProvider.php</code> 文件在 <code>app/providers/</code>目录下，我们需要将其复制到我的本地packages目录的相应位置，在 <code>packages/curder/laravel-admin/src/</code>下， 此时我们可以看到目录下有如下变化：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>app/\nartisan/\n...\ndatabase/\npackage.json\npackages\n└── curder\n    └── laravel-admin\n        └── src\n            └── Admin.php\n            └── AdminProvider.php\nphpunit.xml\npublic/\n...\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h3 id="修改provider文件并注册到laravel的ioc容器中"><a class="header-anchor" href="#修改provider文件并注册到laravel的ioc容器中">#</a> 修改Provider文件并注册到Laravel的IOC容器中</h3><p>打开 <code>packages/curder/laravel-admin/src/AdminProvider.php</code>文件，修改<code>命名空间</code>和<code>register()</code>方法里的相关内容，如下：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>&lt;?php\nnamespace Curder\\Admin;\n\nuse Illuminate\\Support\\ServiceProvider;\n\nclass AdminProvider extends ServiceProvider\n{\n    /**\n     * Bootstrap the application services.\n     *\n     * @return void\n     */\n    public function boot()\n    {\n        //\n    }\n\n    /**\n     * Register the application services.\n     *\n     * @return void\n     */\n    public function register()\n    {\n        $this-&gt;app-&gt;singleton(&#39;admin&#39;,function(){\n            return new Admin;\n        });\n    }\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><p>然后，修改 <code>config/app.php</code>中的 <code>providers</code>数组的值中添加上面的 Provider，如下：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>/*\n * Package Service Providers...\n */\nLaravel\\Tinker\\TinkerServiceProvider::class,\nCurder\\Admin\\AdminProvider::class,\n\n...\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="测试"><a class="header-anchor" href="#测试">#</a> 测试</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>☁  rbac [master] ⚡ php artisan tinker \nPsy Shell v0.8.11 (PHP 7.1.8 — cli) by Justin Hileman\n&gt;&gt;&gt; app(&#39;admin&#39;)-&gt;sayHello();\n=&gt; &quot;Hello&quot;\n&gt;&gt;&gt;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>',26),l=(0,s.Uk)("至此，Laravel 就引入本地的插件完毕了，接下来我们将代码放到"),p={href:"https://github.com",target:"_blank",rel:"noopener noreferrer"},i=(0,s.Uk)("GitHub"),c=(0,s.Uk)("上托管，然后在"),t={href:"https://packagist.org/",target:"_blank",rel:"noopener noreferrer"},u=(0,s.Uk)("Packagist"),b=(0,s.Uk)("拉取代码。"),d=(0,s.uE)('<h2 id="将package放到github仓库"><a class="header-anchor" href="#将package放到github仓库">#</a> 将package放到github仓库</h2><h3 id="到github登录自己的账号和密码-创建一个新的仓库并上传源代码"><a class="header-anchor" href="#到github登录自己的账号和密码-创建一个新的仓库并上传源代码">#</a> 到github登录自己的账号和密码，创建一个新的仓库并上传源代码</h3><p><img src="https://ws2.sinaimg.cn/large/006tKfTcgy1fq0ikshdfdj30kt0ifac2.jpg" alt=""></p><p>获取到 Remote Addr 后，再回到本地开发目录 <code>packages/curder/laravel-admin</code>执行如下命令：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>git init\ngit remote add origin git@github.com:curder/caravel-admin.git\ngit push -u origin master\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>至此代码已经部署到GitHub站点。</p><p>登录到GItHub应该就能看到如下图所示的内容：</p><p><img src="https://ws2.sinaimg.cn/large/006tKfTcgy1fq0iktwklij30t20jrtbn.jpg" alt=""></p><h2 id="配置github提交时自动通知packagist"><a class="header-anchor" href="#配置github提交时自动通知packagist">#</a> 配置github提交时自动通知Packagist</h2><p>在项目列表下：即 https://github.com/curder/caravel-admin 下点击 &quot;Settings&quot; -&gt; &quot;Integrations &amp; services&quot; -&gt; &quot;Add Service&quot;下拉菜单中选择 &quot;Packagist&quot;，如下图</p><p><img src="https://ws3.sinaimg.cn/large/006tKfTcgy1fq0ikv95o3j30so0e140u.jpg" alt=""></p>',11),o=(0,s.Uk)("点击进去后，会需要我们提供 'User' 和 ‘Token’ 信息我们需要登录"),m={href:"https://packagist.org/profile/",target:"_blank",rel:"noopener noreferrer"},g=(0,s.Uk)("Packagist"),h=(0,s.Uk)("获取。"),v=(0,s.Wm)("p",null,[(0,s.Wm)("img",{src:"https://ws3.sinaimg.cn/large/006tKfTcgy1fq0ikwl5h0j30wq05xt9h.jpg",alt:""})],-1),k=(0,s.Wm)("p",null,"将上面获取的两个关键信息填入GitHub的表单中，如下：",-1),q=(0,s.Wm)("p",null,[(0,s.Wm)("img",{src:"https://ws2.sinaimg.cn/large/006tKfTcgy1fq0ikxlxqzj30ky0mojtb.jpg",alt:""})],-1),f=(0,s.Wm)("h2",{id:"提交package到packagist"},[(0,s.Wm)("a",{class:"header-anchor",href:"#提交package到packagist"},"#"),(0,s.Uk)(" 提交package到Packagist")],-1),x=(0,s.Uk)("登录packagist后，点击"),P={href:"https://packagist.org/packages/submit",target:"_blank",rel:"noopener noreferrer"},j=(0,s.Uk)("submit"),W=(0,s.Uk)("输入："),A=(0,s.Wm)("code",null,"https://github.com/curder/caravel-admin",-1),w=(0,s.Uk)("，如下： "),y=(0,s.Wm)("img",{src:"https://ws3.sinaimg.cn/large/006tKfTcgy1fq0il0115sj30xd09ewgx.jpg",alt:""},null,-1),U=(0,s.Wm)("p",null,"成功后会看到如下的界面：",-1),H=(0,s.Wm)("p",null,[(0,s.Wm)("img",{src:"https://ws3.sinaimg.cn/large/006tKfTcgy1fq0il0sosrj30xd0j1jto.jpg",alt:""})],-1),T=(0,s.Wm)("p",null,"至此，同步完成。",-1),C={render:function(e,n){const a=(0,s.up)("OutboundLink");return(0,s.wg)(),(0,s.j4)(s.HY,null,[r,(0,s.Wm)("p",null,[l,(0,s.Wm)("a",p,[i,(0,s.Wm)(a)]),c,(0,s.Wm)("a",t,[u,(0,s.Wm)(a)]),b]),d,(0,s.Wm)("p",null,[o,(0,s.Wm)("a",m,[g,(0,s.Wm)(a)]),h]),v,k,q,f,(0,s.Wm)("p",null,[x,(0,s.Wm)("a",P,[j,(0,s.Wm)(a)]),W,A,w,y]),U,H,T],64)}}}}]);