(self.webpackChunklaravel_study=self.webpackChunklaravel_study||[]).push([[8572],{1312:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>p});const p={key:"v-10f10b60",path:"/collections/demo/format_github_events_score.html",title:"计算 GitHub 事件得分总和",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"用 foreach 方法",slug:"用-foreach-方法",children:[]},{level:2,title:"使用 pluck、map 和 sum 方法",slug:"使用-pluck、map-和-sum-方法",children:[]},{level:2,title:"使用 pluck、map、get 和 sum 方法",slug:"使用-pluck、map、get-和-sum-方法",children:[]},{level:2,title:"封装 GitHubScore 类",slug:"封装-githubscore-类",children:[]}],filePathRelative:"collections/demo/format_github_events_score.md",git:{updatedTime:1617071687e3,contributors:[]}}},4640:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>S});var p=a(6252);const e=(0,p.uE)('<h1 id="计算-github-事件得分总和"><a class="header-anchor" href="#计算-github-事件得分总和">#</a> 计算 GitHub 事件得分总和</h1><p>首先，通过 API 接口地址 https://api.github.com/users/YOUR_USRE_NAME/events 获取到个人事件数据，其中 <code>YOUR_USER_NAME</code> 为 GitHub 个人账号。</p><p>假如：一个 <code>PushEvent</code> 计 5 分，一个 <code>CreateEvent</code> 计 4 分，一个<code>IssueCommentEvent</code>计 3 分，一个 <code>IssueCommentEvent</code> 计 2 分，除此之外的其它类型的事件计 1 分，计算当前用户的时间得分总和。</p><blockquote><p>GitHub 用户名以 <code>Curder</code> 为例。</p></blockquote><h2 id="用-foreach-方法"><a class="header-anchor" href="#用-foreach-方法">#</a> 用 foreach 方法</h2><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$events</span> <span class="token operator">=</span> <span class="token class-name static-context">Http</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;https://api.github.com/users/curder/events&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token variable">$eventTypes</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// 事件类型</span>\n<span class="token variable">$score</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// 总得分</span>\n<span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$events</span> <span class="token keyword">as</span> <span class="token variable">$event</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token variable">$eventTypes</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$event</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;type&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$eventTypes</span> <span class="token keyword">as</span> <span class="token variable">$eventType</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">switch</span> <span class="token punctuation">(</span><span class="token variable">$eventType</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">case</span> <span class="token string single-quoted-string">&#39;PushEvent&#39;</span><span class="token punctuation">:</span>\n      <span class="token variable">$score</span> <span class="token operator">+=</span> <span class="token number">5</span><span class="token punctuation">;</span>\n      <span class="token keyword">break</span><span class="token punctuation">;</span>\n    <span class="token keyword">case</span> <span class="token string single-quoted-string">&#39;CreateEvent&#39;</span><span class="token punctuation">:</span>\n      <span class="token variable">$score</span> <span class="token operator">+=</span> <span class="token number">4</span><span class="token punctuation">;</span>\n      <span class="token keyword">break</span><span class="token punctuation">;</span>\n    <span class="token keyword">case</span> <span class="token string single-quoted-string">&#39;IssueEvent&#39;</span><span class="token punctuation">:</span>\n      <span class="token variable">$score</span> <span class="token operator">+=</span> <span class="token number">3</span><span class="token punctuation">;</span>\n      <span class="token keyword">break</span><span class="token punctuation">;</span>\n    <span class="token keyword">case</span> <span class="token string single-quoted-string">&#39;IssueCommentEvent&#39;</span><span class="token punctuation">:</span>\n      <span class="token variable">$score</span> <span class="token operator">+=</span> <span class="token number">2</span><span class="token punctuation">;</span>\n      <span class="token keyword">break</span><span class="token punctuation">;</span>\n    <span class="token keyword">default</span><span class="token punctuation">:</span>\n      <span class="token variable">$score</span> <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n      <span class="token keyword">break</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token function">dd</span><span class="token punctuation">(</span><span class="token variable">$score</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token doc-comment comment">/**\n134\n */</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div>',6),t={id:"使用-pluck、map-和-sum-方法"},o=(0,p.Wm)("a",{class:"header-anchor",href:"#使用-pluck、map-和-sum-方法"},"#",-1),c=(0,p.Uk)(" 使用 "),l={href:"/collections/pluck.md",target:"_blank",rel:"noopener noreferrer"},r=(0,p.Uk)("pluck"),u=(0,p.Uk)("、"),i={href:"/collections/map.md",target:"_blank",rel:"noopener noreferrer"},k=(0,p.Uk)("map"),b=(0,p.Uk)(" 和 "),m={href:"/collections/sum.md",target:"_blank",rel:"noopener noreferrer"},d=(0,p.Uk)("sum"),g=(0,p.Uk)(" 方法"),v=(0,p.uE)('<div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$events</span> <span class="token operator">=</span> <span class="token function">collect</span><span class="token punctuation">(</span>\n  <span class="token class-name static-context">Http</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;https://api.github.com/users/curder/events&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token variable">$score</span> <span class="token operator">=</span> <span class="token variable">$events</span>\n  <span class="token operator">-&gt;</span><span class="token function">pluck</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;type&#39;</span><span class="token punctuation">)</span>\n  <span class="token operator">-&gt;</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$eventType</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">switch</span> <span class="token punctuation">(</span><span class="token variable">$eventType</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">case</span> <span class="token string single-quoted-string">&#39;PushEvent&#39;</span><span class="token punctuation">:</span>\n        <span class="token keyword">return</span> <span class="token number">5</span><span class="token punctuation">;</span>\n        <span class="token keyword">break</span><span class="token punctuation">;</span>\n      <span class="token keyword">case</span> <span class="token string single-quoted-string">&#39;CreateEvent&#39;</span><span class="token punctuation">:</span>\n        <span class="token keyword">return</span> <span class="token number">4</span><span class="token punctuation">;</span>\n        <span class="token keyword">break</span><span class="token punctuation">;</span>\n      <span class="token keyword">case</span> <span class="token string single-quoted-string">&#39;IssueEvent&#39;</span><span class="token punctuation">:</span>\n        <span class="token keyword">return</span> <span class="token number">3</span><span class="token punctuation">;</span>\n        <span class="token keyword">break</span><span class="token punctuation">;</span>\n      <span class="token keyword">case</span> <span class="token string single-quoted-string">&#39;IssueCommentEvent&#39;</span><span class="token punctuation">:</span>\n        <span class="token keyword">return</span> <span class="token number">2</span><span class="token punctuation">;</span>\n        <span class="token keyword">break</span><span class="token punctuation">;</span>\n      <span class="token keyword">default</span><span class="token punctuation">:</span>\n        <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>\n        <span class="token keyword">break</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token operator">-&gt;</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token doc-comment comment">/**\n=&gt; 134\n */</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div>',1),h={id:"使用-pluck、map、get-和-sum-方法"},f=(0,p.Wm)("a",{class:"header-anchor",href:"#使用-pluck、map、get-和-sum-方法"},"#",-1),y=(0,p.Uk)(" 使用 "),w={href:"/collections/pluck.md",target:"_blank",rel:"noopener noreferrer"},$=(0,p.Uk)("pluck"),E=(0,p.Uk)("、"),q={href:"/collections/map.md",target:"_blank",rel:"noopener noreferrer"},_=(0,p.Uk)("map"),U=(0,p.Uk)("、"),W={href:"/collections/get.md",target:"_blank",rel:"noopener noreferrer"},C=(0,p.Uk)("get"),T=(0,p.Uk)(" 和 "),H={href:"/collections/sum.md",target:"_blank",rel:"noopener noreferrer"},I=(0,p.Uk)("sum"),x=(0,p.Uk)(" 方法"),G=(0,p.uE)('<div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$events</span> <span class="token operator">=</span> <span class="token function">collect</span><span class="token punctuation">(</span>\n  <span class="token class-name static-context">Http</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;https://api.github.com/users/curder/events&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token variable">$score</span> <span class="token operator">=</span> <span class="token variable">$events</span>\n  <span class="token operator">-&gt;</span><span class="token function">pluck</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;type&#39;</span><span class="token punctuation">)</span>\n  <span class="token operator">-&gt;</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$eventType</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token function">collect</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n      <span class="token string single-quoted-string">&#39;PushEvent&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">5</span><span class="token punctuation">,</span>\n      <span class="token string single-quoted-string">&#39;CreateEvent&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">4</span><span class="token punctuation">,</span>\n      <span class="token string single-quoted-string">&#39;IssueEvent&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">3</span><span class="token punctuation">,</span>\n      <span class="token string single-quoted-string">&#39;IssueCommentEvent&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">2</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token variable">$eventType</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 如果不存在则默认等于1</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token operator">-&gt;</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token doc-comment comment">/**\n=&gt; 134\n */</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h2 id="封装-githubscore-类"><a class="header-anchor" href="#封装-githubscore-类">#</a> 封装 GitHubScore 类</h2><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$events</span> <span class="token operator">=</span> <span class="token function">collect</span><span class="token punctuation">(</span>\n  <span class="token class-name static-context">Http</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;https://api.github.com/users/curder/events&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">GithubScore</span>\n<span class="token punctuation">{</span>\n  <span class="token keyword">private</span> <span class="token variable">$events</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">private</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token variable">$events</span><span class="token punctuation">)</span>\n  <span class="token punctuation">{</span>\n    <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">events</span> <span class="token operator">=</span> <span class="token variable">$events</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">function</span> <span class="token function">score</span><span class="token punctuation">(</span><span class="token variable">$events</span><span class="token punctuation">)</span>\n  <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token keyword">static</span><span class="token punctuation">(</span><span class="token variable">$events</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">scoreEvents</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">private</span> <span class="token keyword">function</span> <span class="token function">scoreEvents</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">events</span>\n      <span class="token operator">-&gt;</span><span class="token function">pluck</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;type&#39;</span><span class="token punctuation">)</span>\n      <span class="token operator">-&gt;</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$eventType</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">lookupEventScore</span><span class="token punctuation">(</span><span class="token variable">$eventType</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n      <span class="token operator">-&gt;</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">lookupEventScore</span><span class="token punctuation">(</span><span class="token variable">$eventType</span><span class="token punctuation">,</span> <span class="token variable">$default_value</span><span class="token punctuation">)</span>\n  <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token function">collect</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n      <span class="token string single-quoted-string">&#39;PushEvent&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">5</span><span class="token punctuation">,</span>\n      <span class="token string single-quoted-string">&#39;CreateEvent&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">4</span><span class="token punctuation">,</span>\n      <span class="token string single-quoted-string">&#39;IssueEvent&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">3</span><span class="token punctuation">,</span>\n      <span class="token string single-quoted-string">&#39;IssueCommentEvent&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">2</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token variable">$eventType</span><span class="token punctuation">,</span> <span class="token variable">$default_value</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 如果不存在则默认等于1</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token class-name static-context">GithubScore</span><span class="token operator">::</span><span class="token function">score</span><span class="token punctuation">(</span><span class="token variable">$events</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token doc-comment comment">/**\n=&gt; 134\n */</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br></div></div>',3),S={render:function(n,s){const a=(0,p.up)("OutboundLink");return(0,p.wg)(),(0,p.j4)(p.HY,null,[e,(0,p.Wm)("h2",t,[o,c,(0,p.Wm)("a",l,[r,(0,p.Wm)(a)]),u,(0,p.Wm)("a",i,[k,(0,p.Wm)(a)]),b,(0,p.Wm)("a",m,[d,(0,p.Wm)(a)]),g]),v,(0,p.Wm)("h2",h,[f,y,(0,p.Wm)("a",w,[$,(0,p.Wm)(a)]),E,(0,p.Wm)("a",q,[_,(0,p.Wm)(a)]),U,(0,p.Wm)("a",W,[C,(0,p.Wm)(a)]),T,(0,p.Wm)("a",H,[I,(0,p.Wm)(a)]),x]),G],64)}}}}]);