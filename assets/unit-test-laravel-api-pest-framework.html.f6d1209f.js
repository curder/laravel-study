import{r as o,o as c,c as l,b as n,a as t,F as u,d as s,e as p}from"./app.f24d8ee0.js";import{_ as i}from"./plugin-vue_export-helper.21dcd24c.js";const r={},k=n("h1",{id:"\u4F7F\u7528-pest-\u6D4B\u8BD5-laravel-api",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u4F7F\u7528-pest-\u6D4B\u8BD5-laravel-api","aria-hidden":"true"},"#"),s(" \u4F7F\u7528 pest \u6D4B\u8BD5 Laravel API")],-1),d={href:"https://pestphp.com/",target:"_blank",rel:"noopener noreferrer"},b=s("Pest"),g=s(" \u662F "),m={href:"https://twitter.com/enunomaduro",target:"_blank",rel:"noopener noreferrer"},h=s("Nuno Maduro"),v=s(" \u5F00\u53D1\u7684\u4E00\u4E2A\u65B0\u7684\u6D4B\u8BD5PHP\u6846\u67B6\u3002"),_=n("p",null,"\u867D\u7136 Pest \u672C\u8EAB\u662F\u5EFA\u7ACB\u5728\u6D41\u884C\u7684PHP\u6D4B\u8BD5\u6846\u67B6 PHPUnit \u4E4B\u4E0A\uFF0C\u4F46 Pest \u65E8\u5728\u4E3A\u7F16\u5199\u6D4B\u8BD5\u63D0\u4F9B\u66F4\u597D\u7684\u4F53\u9A8C\uFF0C\u54F2\u5B66\u5F88\u7B80\u5355\u3002",-1),f=n("p",null,"\u901A\u8FC7\u63D0\u4F9B\u5BCC\u6709\u8868\u73B0\u529B\u7684\u754C\u9762\uFF0C\u4F7F TDD \u4F53\u9A8C\u7B80\u5355\u800C\u4F18\u96C5\u3002",-1),q=n("p",null,"\u5728\u672C\u6587\u4E2D\u4E86\u89E3\u5982\u4F55\u5728 Laravel \u9879\u76EE\u4E2D\u5F00\u59CB\u4F7F\u7528 Pest \u3002",-1),y=n("p",null,[s("\u4F7F\u7528\u6D4B\u8BD5\u9A71\u52A8\u7684\u65B9\u6CD5\uFF0C\u5C06\u6784\u5EFA\u4E00\u4E2A\u7B80\u5355\u7684 "),n("code",null,"todos"),s(" \u5F85\u529E\u5E94\u7528\u7A0B\u5E8F\uFF0C\u53EF\u4EE5\u521B\u5EFA\u3001\u7F16\u8F91\u3001\u66F4\u65B0\u548C\u5220\u9664\u4EFB\u52A1\u3002")],-1),w=n("h2",{id:"\u6280\u672F\u8981\u6C42",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u6280\u672F\u8981\u6C42","aria-hidden":"true"},"#"),s(" \u6280\u672F\u8981\u6C42")],-1),T=n("li",null,"PHP 7.3 \u6216\u66F4\u9AD8\u7248\u672C\u3002Pest\u9700\u8981PHP 7.3+\u624D\u80FD\u8FD0\u884C\u3002",-1),$={href:"https://laravel.com/docs/8.x/installation",target:"_blank",rel:"noopener noreferrer"},x=s("Laravel 8"),P={href:"https://getcomposer.org/",target:"_blank",rel:"noopener noreferrer"},L=s("Composer"),C=s("\u5BF9 "),R={href:"https://phpunit.readthedocs.io/en/9.0/index.html",target:"_blank",rel:"noopener noreferrer"},S=s("PHPUnit"),E=s(" \u7684\u57FA\u672C\u4E86\u89E3"),D=n("li",null,"\u5BF9 SQLite \u57FA\u672C\u4E86\u89E3\uFF0C\u672C\u6587\u5C06\u4F7F\u7528 SQLite\uFF0C\u56E0\u4E3A\u5B83\u53EF\u4EE5\u66F4\u5FEB\u5730\u8FD0\u884C\u6D4B\u8BD5\u3002",-1),A=p(`<h2 id="\u5B89\u88C5-laravel" tabindex="-1"><a class="header-anchor" href="#\u5B89\u88C5-laravel" aria-hidden="true">#</a> \u5B89\u88C5 Laravel</h2><p>\u8BBE\u7F6E\u65B0\u7684 Laravel \u9879\u76EE\u6709\u591A\u79CD\u65B9\u6CD5\uFF0C\u53EF\u4EE5\u901A\u8FC7 Laravel \u5B89\u88C5\u7A0B\u5E8F\u6216\u4F7F\u7528 Composer \u8FDB\u884C\u64CD\u4F5C\uFF0C\u8FD9\u91CC\u4F7F\u7528 Composer \u3002</p><p>\u5728\u7EC8\u7AEF\u4E2D\u8FD0\u884C\u4EE5\u4E0B\u547D\u4EE4\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">composer</span> create-project --prefer-dist laravel/laravel:^8.0 laravel-pest-todo-test-demo
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>\u8FD9\u5C06\u5728 <code>laravel-pest-todo-test-demo</code> \u76EE\u5F55\u4E2D\u4E3A\u6211\u4EEC\u5EFA\u7ACB\u4E00\u4E2A\u65B0\u7684 Laravel 8 \u7684\u9879\u76EE\u3002</p><h2 id="\u5B89\u88C5-pest" tabindex="-1"><a class="header-anchor" href="#\u5B89\u88C5-pest" aria-hidden="true">#</a> \u5B89\u88C5 Pest</h2><p>\u73B0\u5728\u5DF2\u7ECF\u5EFA\u7ACB\u4E86\u4E00\u4E2A\u65B0\u7684 Laravel 8 \u9879\u76EE\uFF0C\u8FD8\u9700\u8981\u6267\u884C\u51E0\u4E2A\u989D\u5916\u7684\u6B65\u9AA4\u6765\u4E0E Laravel \u4E00\u8D77\u5EFA\u7ACB <a href="">Pest</a>\u3002</p>`,7),F=s("\u8FDB\u5165 "),H=n("code",null,"laravel-pest-todo-test-demo",-1),I=s(" \u76EE\u5F55\uFF0C\u7136\u540E\u8FD0\u884C\u4EE5\u4E0B\u547D\u4EE4\u5B89\u88C5 "),N={href:"https://pestphp.com/docs/plugins/laravel/",target:"_blank",rel:"noopener noreferrer"},U=s("Laravel Pest\u63D2\u4EF6"),j=s("\u3002"),B=p(`<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> laravel-pest-todo-test-demo

<span class="token function">composer</span> require --dev pestphp/pest-plugin-laravel
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>`,1),J={class:"custom-container warning"},O=n("p",{class:"custom-container-title"},"\u6CE8\u610F",-1),M=s("\u7531\u4E8E\u5F53\u524D\u7248\u672C "),V=n("code",null,"pestphp/pest-plugin-laravel@v1.0.0",-1),Q=s(" \u5BF9 phpunit \u7684\u7248\u672C\u8981\u6C42 "),Y=n("code",null,'"phpunit/phpunit": ">= 9.3.7 <= 9.5.3"',-1),G=s("\uFF0C\u53EF\u4EE5\u901A\u8FC7 "),X={href:"https://github.com/pestphp/pest/blob/master/composer.json#L26",target:"_blank",rel:"noopener noreferrer"},z=s("composer.json"),K=s(" \u67E5\u770B\u3002 \u6240\u4EE5\u9700\u8981\u4FEE\u6539\u6211\u4EEC\u9879\u76EE\u7684 phpunit \u7248\u672C\uFF0C\u4FEE\u6539 "),W=n("code",null,"composer.json",-1),Z=s(" \u4E2D "),nn=n("code",null,'"phpunit/phpunit": "9.5.3"',-1),sn=s("\uFF0C\u6307\u5B9A phpunit \u7684\u7248\u672C\u4E3A\uFF1A"),an=n("code",null,"9.5.3",-1),tn=s("\u3002"),pn=n("p",null,"\u63D2\u4EF6\u5B89\u88C5\u5B8C\u6210\u540E\uFF0C\u8FD0\u884C\u4EE5\u4E0B\u547D\u4EE4\uFF1A",-1),en=n("div",{class:"language-bash ext-sh line-numbers-mode"},[n("pre",{class:"language-bash"},[n("code",null,`php artisan pest:install
`)]),n("div",{class:"line-numbers"},[n("span",{class:"line-number"},"1"),n("br")])],-1),on=n("p",null,[s("\u5C06\u5728\u9879\u76EE\u76EE\u5F55 "),n("code",null,"tests"),s(" \u76EE\u5F55\u4E2D\u521B\u5EFA\u4E00\u4E2A"),n("code",null,"Pest.php"),s("\u6587\u4EF6\u3002")],-1),cn=s("\u8BE5 "),ln=n("code",null,"Pest.php",-1),un=s(" \u6587\u4EF6\u88AB"),rn={href:"https://getcomposer.org/doc/01-basic-usage.md#autoloading",target:"_blank",rel:"noopener noreferrer"},kn=s("\u81EA\u52A8\u52A0\u8F7D"),dn=s(" \u3002Laravel \u9644\u5E26\u4E86\u4E00\u4E9B\u57FA\u4E8E PHPUnit \u7684\u793A\u4F8B\u6D4B\u8BD5\u6587\u4EF6\u3002 \u8BA9\u66F4\u6539\u8FD9\u4E9B\u6D4B\u8BD5\u4EE5\u6539\u4E3A\u4F7F\u7528 Pest \u3002\u8F6C\u5230 "),bn=n("code",null,"tests/Future",-1),gn=s(" \u76EE\u5F55\u5E76\u67E5\u770B "),mn=n("code",null,"ExampleTest.php",-1),hn=s(" \u6587\u4EF6\u3002"),vn=p(`<div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">namespace</span> <span class="token package">Tests<span class="token punctuation">\\</span>Feature</span><span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token package">Tests<span class="token punctuation">\\</span>TestCase</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">ExampleTest</span> <span class="token keyword">extends</span> <span class="token class-name">TestCase</span>
<span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * A basic test example.
     *
     * <span class="token keyword">@return</span> <span class="token class-name"><span class="token keyword">void</span></span>
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">testBasicTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$response</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$response</span><span class="token operator">-&gt;</span><span class="token function">assertStatus</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>\u8981\u5C06\u6B64\u6D4B\u8BD5\u8FC1\u79FB\u5230\u76F8\u5E94\u7684 Pest \u5B9E\u73B0\uFF0C\u66FF\u6362\u6587\u4EF6\u7684\u5185\u5BB9\uFF1A</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token function">it</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;has welcome page&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">assertStatus</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u5C06\u8FD9\u4E2A <code>ExampleTest</code> \u6587\u4EF6\u4ECE\u5927\u7EA620\u884C\u4EE3\u7801\u51CF\u5C11\u5230\u4EC52\u884C\uFF0C\u540C\u65F6\u6D4B\u8BD5\u4E86\u5B8C\u5168\u76F8\u540C\u7684\u4E8B\u7269\u5E76\u4EA7\u751F\u4E86\u76F8\u540C\u7684\u7ED3\u679C\u3002</p><p>\u4E5F\u5C31\u662F\u8BF4\uFF0C\u5B83\u8BBF\u95EE<code>/</code> \u5904\u7684\u6839 URL \uFF0C\u5E76\u65AD\u8A00\u8FD4\u56DE\u4E86 HTTP \u72B6\u6001\u7801 200\u3002</p><p>Pest \u63D0\u4F9B\u4E86\u4E24\u79CD\u7F16\u5199\u6D4B\u8BD5\u7684\u529F\u80FD <code>test()</code> \u548C <code>it()</code>\u3002</p><p>\u8FD9\u4E24\u4E2A\u51FD\u6570\u90FD\u5C06\u6D4B\u8BD5\u63CF\u8FF0\u4F5C\u4E3A\u7B2C\u4E00\u4E2A\u53C2\u6570\uFF0C\u5E76\u5C06\u5305\u542B\u6D4B\u8BD5\u671F\u671B\u7684\u95ED\u5305\u4F5C\u4E3A\u7B2C\u4E8C\u4E2A\u53C2\u6570\u3002</p><p>\u540C\u6837\uFF0C\u4E5F\u5C06 <code>ExampleTest.php</code> \u4F4D\u4E8E <code>tests/Unit</code> \u76EE\u5F55\u4E2D\u7684\u6587\u4EF6\u4E5F\u4F7F\u7528Pest\u3002</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token function">test</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;basic&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">assertTrue</span><span class="token punctuation">(</span><span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u63A5\u4E0B\u6765\uFF0C\u4F7F\u7528\u4EE5\u4E0B\u547D\u4EE4\u8FD0\u884C\u6D4B\u8BD5\u5957\u4EF6\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>./vendor/bin/pest
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>\u5982\u4E0B\u56FE\u6240\u793A\uFF0C\u6240\u6709\u6D4B\u8BD5\u5747\u5E94\u901A\u8FC7\u3002</p>`,12),_n=["src"],fn=p(`<h2 id="\u521B\u5EFA\u5F85\u529E\u4E8B\u9879\u6A21\u578B-\u8FC1\u79FB\u548C\u63A7\u5236\u5668" tabindex="-1"><a class="header-anchor" href="#\u521B\u5EFA\u5F85\u529E\u4E8B\u9879\u6A21\u578B-\u8FC1\u79FB\u548C\u63A7\u5236\u5668" aria-hidden="true">#</a> \u521B\u5EFA\u5F85\u529E\u4E8B\u9879\u6A21\u578B\uFF0C\u8FC1\u79FB\u548C\u63A7\u5236\u5668</h2><p>\u5E94\u7528\u7A0B\u5E8F\u5C06\u6709\u4E00\u4E2A\u540D\u4E3A\u7684\u6A21\u578B <code>Todo</code> \u3002Laravel \u63D0\u4F9B\u4E86\u4E00\u4E2A\u65B9\u4FBF\u7684\u547D\u4EE4\uFF0C\u7528\u4E8E\u4E00\u6B21\u6027\u751F\u6210\u6A21\u578B\u3001\u8FC1\u79FB\u6587\u4EF6\u3001\u63A7\u5236\u5668\u548C\u6A21\u578B\u5DE5\u5382\u3002</p><p>\u4E3A\u6B64\uFF0C\u8BF7\u8FD0\u884C\u4EE5\u4E0B\u547D\u4EE4\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>php artisan make:model Todo -mcf
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>\u63A5\u4E0B\u6765\uFF0C\u5C06\u4EE5\u4E0B\u4EE3\u7801\u6DFB\u52A0\u5230\u8FC1\u79FB\u6587\u4EF6\u4E2D\u7684\u65B9\u6CD5\u4E2D\uFF1A<code>database/migrations[TODAYSDATE]_create_todos_table.php</code></p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token class-name static-context">Schema</span><span class="token operator">::</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;todos&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name type-declaration">Blueprint</span> <span class="token variable">$table</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$table</span><span class="token operator">-&gt;</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token variable">$table</span><span class="token operator">-&gt;</span><span class="token keyword type-declaration">string</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$table</span><span class="token operator">-&gt;</span><span class="token function">boolean</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;completed&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">default</span><span class="token punctuation">(</span><span class="token constant boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token variable">$table</span><span class="token operator">-&gt;</span><span class="token function">timestamps</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="highlight-lines"><br><br><br><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><br><br><br></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u6BCF\u4E2A\u5F85\u529E\u4EFB\u52A1\u5C06\u5177\u6709\u4E00\u4E2A <code>name</code> \u5C5E\u6027\u4EE5\u53CA\u4E00\u4E2A\u5E03\u5C14 <code>completed</code> \u5C5E\u6027\uFF0C\u5176\u9ED8\u8BA4\u503C\u4E3A <code>false</code>\u3002\u63A5\u4E0B\u6765\uFF0C<code>App/Models/Todo.php</code> \u4F7F\u7528\u4EE5\u4E0B\u4EE3\u7801\u7F16\u8F91\u6587\u4EF6\uFF1A</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\\</span>Models</span><span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Database<span class="token punctuation">\\</span>Eloquent<span class="token punctuation">\\</span>Factories<span class="token punctuation">\\</span>HasFactory</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Database<span class="token punctuation">\\</span>Eloquent<span class="token punctuation">\\</span>Model</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">Todo</span> <span class="token keyword">extends</span> <span class="token class-name">Model</span>
<span class="token punctuation">{</span>
    <span class="token keyword">use</span> <span class="token package">HasFactory</span><span class="token punctuation">;</span>

    <span class="token keyword">protected</span> <span class="token variable">$fillable</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;completed&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</span></code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line">\xA0</div><br></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div>`,8),qn=s("\u5C06\u6A21\u578B\u7684 "),yn=n("code",null,"name",-1),wn=s(" \u548C "),Tn=n("code",null,"completed",-1),$n=s(" \u5C5E\u6027\u5206\u914D\u4E3A "),xn={href:"https://laravel.com/docs/8.x/eloquent#mass-assignment",target:"_blank",rel:"noopener noreferrer"},Pn=s("\u5141\u8BB8\u586B\u5145"),Ln=s(" \u3002"),Cn=p(`<h2 id="\u4FEE\u6539\u6A21\u578B\u5DE5\u5382" tabindex="-1"><a class="header-anchor" href="#\u4FEE\u6539\u6A21\u578B\u5DE5\u5382" aria-hidden="true">#</a> \u4FEE\u6539\u6A21\u578B\u5DE5\u5382</h2><p>\u7F16\u8F91 <code>database/factories/TodoFactory.php</code> \u6587\u4EF6\u7684 <code>definition()</code> \u65B9\u6CD5\u4EE5\u8FD4\u56DE\u7C7B\u4F3C\u4E8E\u4EE5\u4E0B\u6570\u7EC4\u7684\u6570\u7EC4\uFF1A</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">namespace</span> <span class="token package">Database<span class="token punctuation">\\</span>Factories</span><span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\\</span>Models<span class="token punctuation">\\</span>Todo</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Database<span class="token punctuation">\\</span>Eloquent<span class="token punctuation">\\</span>Factories<span class="token punctuation">\\</span>Factory</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">TodoFactory</span> <span class="token keyword">extends</span> <span class="token class-name">Factory</span>
<span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * The name of the factory&#39;s corresponding model.
     *
     * <span class="token keyword">@var</span> <span class="token class-name"><span class="token keyword">string</span></span>
     */</span>
    <span class="token keyword">protected</span> <span class="token variable">$model</span> <span class="token operator">=</span> <span class="token class-name static-context">Todo</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * Define the model&#39;s default state.
     *
     * <span class="token keyword">@return</span> <span class="token class-name"><span class="token keyword">array</span></span>
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">definition</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">[</span>
            <span class="token string single-quoted-string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;Deploy Twilio Verify to Live&#39;</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;completed&#39;</span> <span class="token operator">=&gt;</span> <span class="token constant boolean">false</span>
          <span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</span></code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><br><br></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><p>\u8BE5 <code>definition</code> \u65B9\u6CD5\u8FD4\u56DE\u4F7F\u7528\u5DE5\u5382\u521B\u5EFA\u6A21\u578B\u65F6\u5E94\u5E94\u7528\u7684\u9ED8\u8BA4\u5C5E\u6027\u503C\u96C6\u3002</p><h2 id="\u914D\u7F6E\u6570\u636E\u5E93" tabindex="-1"><a class="header-anchor" href="#\u914D\u7F6E\u6570\u636E\u5E93" aria-hidden="true">#</a> \u914D\u7F6E\u6570\u636E\u5E93</h2><p>\u4F7F\u7528\u5185\u5B58\u4E2D\u7684 <code>SQLite</code> \u6570\u636E\u5E93\u8FDB\u884C\u6D4B\u8BD5\u3002Laravel \u5DF2\u7ECF\u63D0\u4F9B\u4E86\u4F7F\u7528 SQLite \u6570\u636E\u5E93\u8FDB\u884C\u6D4B\u8BD5\u7684\u652F\u6301\u3002</p><p>\u4F4D\u4E8E\u9879\u76EE\u76EE\u5F55\u6839\u76EE\u5F55\u4E0B\u7684 <code>phpunit.xml</code> \u6587\u4EF6\uFF0C\u5E76\u53D6\u6D88\u6CE8\u91CA\u4EE5\u4E0B\u4EE3\u7801\u884C\uFF1A</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>phpunit</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">&quot;</span></span>
         <span class="token attr-name"><span class="token namespace">xsi:</span>noNamespaceSchemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>./vendor/phpunit/phpunit/phpunit.xsd<span class="token punctuation">&quot;</span></span>
         <span class="token attr-name">bootstrap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>vendor/autoload.php<span class="token punctuation">&quot;</span></span>
         <span class="token attr-name">colors</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span>
<span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>testsuites</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>testsuite</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Unit<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span> <span class="token attr-name">suffix</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Test.php<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>./tests/Unit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>testsuite</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>testsuite</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Feature<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span> <span class="token attr-name">suffix</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Test.php<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>./tests/Feature<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>testsuite</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>testsuites</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>coverage</span> <span class="token attr-name">processUncoveredFiles</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span> <span class="token attr-name">suffix</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>.php<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>./app<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>coverage</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>php</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>server</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>APP_ENV<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>testing<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>server</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>BCRYPT_ROUNDS<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>4<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>server</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>CACHE_DRIVER<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>array<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>server</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>DB_CONNECTION<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sqlite<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>server</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>DB_DATABASE<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>:memory:<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>server</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>MAIL_MAILER<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>array<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>server</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>QUEUE_CONNECTION<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sync<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>server</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>SESSION_DRIVER<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>array<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>server</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>TELESCOPE_ENABLED<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>false<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>php</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>phpunit</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><br><br><br><br><br><br></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><h2 id="\u7F16\u5199\u6D4B\u8BD5" tabindex="-1"><a class="header-anchor" href="#\u7F16\u5199\u6D4B\u8BD5" aria-hidden="true">#</a> \u7F16\u5199\u6D4B\u8BD5</h2><p>\u65E2\u7136\u5DF2\u7ECF\u5B8C\u6210\u4E86\u6240\u6709\u5FC5\u8981\u7684\u524D\u7F6E\u8BBE\u7F6E\u548C\u914D\u7F6E\uFF0C\u5C31\u53EF\u4EE5\u5F00\u59CB\u7F16\u5199\u6D4B\u8BD5\u4E86\u3002</p><p>\u8FD9\u4E9B\u6D4B\u8BD5\u5FC5\u987B\u5177\u6709\u6B63\u5E38\u8FD0\u884C\u7684\u5E94\u7528\u7A0B\u5E8F\uFF0C\u5E76\u5C06\u63D0\u4F9B\u76F8\u5E94\u7684\u5B9E\u73B0\u4EE5\u786E\u4FDD\u6240\u6709\u6D4B\u8BD5\u5747\u901A\u8FC7\u3002</p><p>\u8FD0\u884C\u4EE5\u4E0B Pest \u547D\u4EE4\u4EE5\u521B\u5EFA\u5355\u5143\u6D4B\u8BD5\u6587\u4EF6\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>php artisan pest:test TodoTest --unit
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>\u8FD9\u5C06 <code>TodoTest.php</code> \u5728 <code>tests/Unit</code> \u76EE\u5F55\u4E2D\u521B\u5EFA\u3002\u7528\u4EE5\u4E0B\u4EE3\u7801\u66FF\u6362\u6587\u4EF6\u7684\u4EE3\u7801\uFF1A</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\\</span>Models<span class="token punctuation">\\</span>Todo</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Foundation<span class="token punctuation">\\</span>Testing<span class="token punctuation">\\</span>RefreshDatabase</span><span class="token punctuation">;</span>

<span class="token function">uses</span><span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified static-context">Tests<span class="token punctuation">\\</span>TestCase</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name static-context">RefreshDatabase</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">it</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;does not create a to-do without a name field&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$response</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">postJson</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/api/todos&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$response</span><span class="token operator">-&gt;</span><span class="token function">assertStatus</span><span class="token punctuation">(</span><span class="token number">422</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">it</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;can create a to-do&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$attributes</span> <span class="token operator">=</span> <span class="token class-name static-context">Todo</span><span class="token operator">::</span><span class="token function">factory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">raw</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$response</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">postJson</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/api/todos&#39;</span><span class="token punctuation">,</span> <span class="token variable">$attributes</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$response</span><span class="token operator">-&gt;</span><span class="token function">assertStatus</span><span class="token punctuation">(</span><span class="token number">201</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">assertJson</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;message&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;To-do has been created&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">assertDatabaseHas</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;todos&#39;</span><span class="token punctuation">,</span> <span class="token variable">$attributes</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">it</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;can fetch a to-do&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$todo</span> <span class="token operator">=</span> <span class="token class-name static-context">Todo</span><span class="token operator">::</span><span class="token function">factory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token variable">$response</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">getJson</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;/api/todos/<span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$todo</span><span class="token operator">-&gt;</span><span class="token property">id</span><span class="token punctuation">}</span></span>&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
        <span class="token string single-quoted-string">&#39;message&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;Retrieved To-do&#39;</span><span class="token punctuation">,</span>
        <span class="token string single-quoted-string">&#39;todo&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>
            <span class="token string single-quoted-string">&#39;id&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$todo</span><span class="token operator">-&gt;</span><span class="token property">id</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$todo</span><span class="token operator">-&gt;</span><span class="token property">name</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;completed&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$todo</span><span class="token operator">-&gt;</span><span class="token property">completed</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span>
    <span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token variable">$response</span><span class="token operator">-&gt;</span><span class="token function">assertStatus</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">assertJson</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">it</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;can update a to-do&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$todo</span> <span class="token operator">=</span> <span class="token class-name static-context">Todo</span><span class="token operator">::</span><span class="token function">factory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$updatedTodo</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;Updated To-do&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token variable">$response</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">putJson</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;/api/todos/<span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$todo</span><span class="token operator">-&gt;</span><span class="token property">id</span><span class="token punctuation">}</span></span>&quot;</span><span class="token punctuation">,</span> <span class="token variable">$updatedTodo</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$response</span><span class="token operator">-&gt;</span><span class="token function">assertStatus</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">assertJson</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;message&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;To-do has been updated&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">assertDatabaseHas</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;todos&#39;</span><span class="token punctuation">,</span> <span class="token variable">$updatedTodo</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">it</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;can delete a to-do&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$todo</span> <span class="token operator">=</span> <span class="token class-name static-context">Todo</span><span class="token operator">::</span><span class="token function">factory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$response</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">deleteJson</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;/api/todos/<span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$todo</span><span class="token operator">-&gt;</span><span class="token property">id</span><span class="token punctuation">}</span></span>&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$response</span><span class="token operator">-&gt;</span><span class="token function">assertStatus</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">assertJson</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;message&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;To-do has been deleted&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">assertCount</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token class-name static-context">Todo</span><span class="token operator">::</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br></div></div><p>\u5728\u6587\u4EF6\u7684\u9876\u90E8\uFF0C\u8BE5 <code>uses()</code> \u65B9\u6CD5\u5C06 <code>TestCase</code> \u7C7B\u548C <code>RefreshDatabase</code> Trait \u7ED1\u5B9A\u5230\u5F53\u524D\u7684\u6D4B\u8BD5\u6587\u4EF6\u3002</p><p>\u8BE5\u57FA\u7C7B <code>TestCase</code> \u7531 Laravel \u63D0\u4F9B\uFF0C\u5E76\u63D0\u4F9B\u4E86\u5728\u6D4B\u8BD5\u65F6\u4F7F\u7528\u8BE5\u6846\u67B6\u7684\u8F85\u52A9\u65B9\u6CD5\u3002</p><p>\u8BE5 <code>RefreshDatabase</code> \u7279\u5F81\u8D1F\u8D23\u5728\u6BCF\u6B21\u6D4B\u8BD5\u540E\u8FC1\u79FB\u548C\u91CD\u7F6E\u6570\u636E\u5E93\uFF0C\u4EE5\u4F7F\u5148\u524D\u6D4B\u8BD5\u7684\u6570\u636E\u4E0D\u4F1A\u5E72\u6270\u540E\u7EED\u6D4B\u8BD5\u3002</p><p>\u73B0\u5728\uFF0C\u56DE\u987E\u4E00\u4E0B\u6BCF\u4E2A\u6D4B\u8BD5\u7684\u529F\u80FD\uFF1A</p><blockquote><p>Laravel \u63D0\u4F9B\u4E86\u591A\u4E2A\u5E2E\u52A9\u7A0B\u5E8F\u6765\u6D4B\u8BD5JSON API\u53CA\u5176\u54CD\u5E94\u3002</p></blockquote><blockquote><p><strong>it(&#39;does not create a to-do without a name field&#39;)</strong></p><p>\u5229\u7528 <code>postJson</code> \u65B9\u6CD5\u5411 <code>api/todos</code> \u5730\u5740\u53D1\u9001 POST \u8BF7\u6C42\uFF0C\u5E76\u4F20\u9012\u4E00\u4E2A\u7A7A\u6570\u7EC4\u53C2\u6570\u3002\u63A5\u4E0B\u6765\u65AD\u8A00\uFF0C<code>assertStatus()</code> \u8FD4\u56DE\u54CD\u5E94\u4E2D\u7684\u65B9\u6CD5\u786E\u4FDD\u5E94\u8FD4\u56DE HTTP \u72B6\u6001\u4EE3\u7801 422 \u3002\u4F5C\u7528\u662F\u786E\u4FDD\u540D\u79F0\u5B57\u6BB5\u5FC5\u987B\u63D0\u4F9B\u3002</p></blockquote><blockquote><p><strong>it(&#39;can create a to-do&#39;)</strong></p><p>\u4F7F\u7528 <code>POST</code> \u65B9\u5F0F\u5728 <code>api/todos</code> \u5730\u5740\u53D1\u51FA\u8BF7\u6C42\u65F6\u521B\u5EFA\u5F85\u529E\u4E8B\u9879\u3002\u65AD\u8A00\u5DF2\u8FD4\u56DE HTTP \u72B6\u6001\u4EE3\u7801 201 \uFF0C\u5E76\u4E14\u8BE5\u6570\u636E\u5E93\u5B9E\u9645\u4E0A\u5305\u542B\u4F7F\u7528\u8BE5 <code>assertDatabase()</code> \u65B9\u6CD5\u7684\u5F85\u529E\u4E8B\u9879\u3002</p></blockquote><blockquote><p><strong>it(&#39;can fetch a to-do&#39;)</strong></p><p>\u4F7F\u7528 <code>TodoFactory</code> \u4E0A\u7684 <code>create()</code> \u65B9\u6CD5\uFF0C\u53EF\u4EE5\u521B\u5EFA\u5F85\u529E\u4EFB\u52A1\u5E76\u5C06\u5176\u5B58\u50A8\u5728\u6570\u636E\u5E93\u4E2D\u3002\u63A5\u4E0B\u6765\u65AD\u8A00\u8FD4\u56DE\u7684\u72B6\u6001\u7801\u4E3A 200 \u3002\u8BE5 <code>assertJson()</code> \u65B9\u6CD5\u5C06\u54CD\u5E94\u8F6C\u6362\u4E3A\u6570\u7EC4\uFF0C\u5E76\u9A8C\u8BC1\u7ED9\u5B9A\u6570\u7EC4\u662F\u5426\u5B58\u5728\u4E8E\u5E94\u7528\u7A0B\u5E8F\u5C06\u8FD4\u56DE\u7684 JSON \u54CD\u5E94\u4E2D\u3002\u6B64\u6D4B\u8BD5\u68C0\u67E5\u662F\u5426\u53EF\u4EE5\u4F7F\u7528 ID \u63D0\u53D6\u7279\u5B9A\u7684\u5F85\u529E\u4E8B\u9879\u3002</p></blockquote><blockquote><p><strong>it(&#39;can update a to-do&#39;)</strong></p><p>\u6B64\u6D4B\u8BD5\u786E\u4FDD\u53EF\u4EE5\u66F4\u65B0\u5F85\u529E\u4E8B\u9879\uFF0C\u5E76\u4E14\u53EF\u4EE5\u5728\u6570\u636E\u5E93\u4E2D\u627E\u5230\u66F4\u65B0\u540E\u7684\u4EFB\u52A1\u3002</p></blockquote><blockquote><p><strong>it(&#39;can delete a to-do&#39;)</strong></p><p>\u6B64\u6D4B\u8BD5\u786E\u4FDD\u53EF\u4EE5\u5220\u9664\u5F85\u529E\u4E8B\u9879\uFF0C\u5E76\u9A8C\u8BC1\u6570\u636E\u5E93\u4E2D\u5305\u542B\u7684\u4EFB\u52A1\u603B\u6570\u4E3A\u96F6\u3002</p></blockquote><p>\u8981\u8FD0\u884C\u6D4B\u8BD5\uFF0C\u8BF7\u8FD0\u884C\u4EE5\u4E0B\u547D\u4EE4\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>./vendor/bin/pest --filter TodoTest
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>\u7531\u4E8E\u5F53\u524D\u5C1A\u672A\u5B9E\u73B0\u4EFB\u4F55\u529F\u80FD\uFF0C\u56E0\u6B64\u6D4B\u8BD5\u5E94\u8BE5\u4F1A\u5931\u8D25\u3002</p>`,28),Rn=["src"],Sn=p(`<h2 id="\u751F\u6210\u5F85\u529E\u4E8B\u9879\u5E94\u7528\u7A0B\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u751F\u6210\u5F85\u529E\u4E8B\u9879\u5E94\u7528\u7A0B\u5E8F" aria-hidden="true">#</a> \u751F\u6210\u5F85\u529E\u4E8B\u9879\u5E94\u7528\u7A0B\u5E8F</h2><p>\u5230\u76EE\u524D\u4E3A\u6B62\u5DF2\u7ECF\u7F16\u5199\u7684\u6D4B\u8BD5\u7684\u76F8\u5E94\u5B9E\u73B0\u3002\u8F6C\u5230 <code>app/Http/Controllers</code> \u63A7\u5236\u5668\u76EE\u5F55\u4E2D\u7684 <code>TodoController.php</code> \u6587\u4EF6\uFF0C\u7136\u540E\u5C06\u6587\u4EF6\u4EE3\u7801\u66FF\u6362\u4E3A\u4EE5\u4E0B\u4EE3\u7801\uFF1A</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>Controllers</span><span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\\</span>Models<span class="token punctuation">\\</span>Todo</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>Request</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">TodoController</span> <span class="token keyword">extends</span> <span class="token class-name">Controller</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">create</span><span class="token punctuation">(</span><span class="token class-name type-declaration">Request</span> <span class="token variable">$request</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$request</span><span class="token operator">-&gt;</span><span class="token function">validate</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">rules</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token variable">$todo</span> <span class="token operator">=</span> <span class="token class-name static-context">Todo</span><span class="token operator">::</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token variable">$request</span><span class="token operator">-&gt;</span><span class="token function">only</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
            <span class="token string single-quoted-string">&#39;message&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;To-do has been created&#39;</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;todo&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">mapTodoResponse</span><span class="token punctuation">(</span><span class="token variable">$todo</span><span class="token punctuation">)</span>
        <span class="token punctuation">]</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> <span class="token function">response</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">,</span> <span class="token number">201</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">show</span><span class="token punctuation">(</span><span class="token class-name type-declaration">Todo</span> <span class="token variable">$todo</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
            <span class="token string single-quoted-string">&#39;message&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;Retrieved To-do&#39;</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;todo&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">mapTodoResponse</span><span class="token punctuation">(</span><span class="token variable">$todo</span><span class="token punctuation">)</span>
        <span class="token punctuation">]</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> <span class="token function">response</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">update</span><span class="token punctuation">(</span><span class="token class-name type-declaration">Todo</span> <span class="token variable">$todo</span><span class="token punctuation">,</span> <span class="token class-name type-declaration">Request</span> <span class="token variable">$request</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$request</span><span class="token operator">-&gt;</span><span class="token function">validate</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">rules</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token variable">$todo</span><span class="token operator">-&gt;</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token variable">$request</span><span class="token operator">-&gt;</span><span class="token function">only</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$todo</span><span class="token operator">-&gt;</span><span class="token function">refresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
            <span class="token string single-quoted-string">&#39;message&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;To-do has been updated&#39;</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;todo&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">mapTodoResponse</span><span class="token punctuation">(</span><span class="token variable">$todo</span><span class="token punctuation">)</span>
        <span class="token punctuation">]</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> <span class="token function">response</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">delete</span><span class="token punctuation">(</span><span class="token class-name type-declaration">Todo</span> <span class="token variable">$todo</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$todo</span><span class="token operator">-&gt;</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
            <span class="token string single-quoted-string">&#39;message&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;To-do has been deleted&#39;</span>
        <span class="token punctuation">]</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> <span class="token function">response</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function-definition function">rules</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">[</span>
            <span class="token string single-quoted-string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;required|string|min:4&#39;</span>
        <span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function-definition function">mapTodoResponse</span><span class="token punctuation">(</span><span class="token variable">$todo</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">[</span>
            <span class="token string single-quoted-string">&#39;id&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$todo</span><span class="token operator">-&gt;</span><span class="token property">id</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$todo</span><span class="token operator">-&gt;</span><span class="token property">name</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;completed&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$todo</span><span class="token operator">-&gt;</span><span class="token property">completed</span>
        <span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br></div></div><blockquote><ul><li><code>create()</code> \u65B9\u6CD5\u521B\u5EFA\u4E00\u4E2A\u65B0\u7684\u5F85\u529E\u4EFB\u52A1\u3002</li><li><code>show()</code> \u65B9\u6CD5\u6839\u636E\u5176ID\u8FD4\u56DE\u7ED9\u5B9A\u7684\u4EFB\u52A1\u3002</li><li><code>update()</code> \u65B9\u6CD5\u5C06\u66F4\u65B0\u5F85\u529E\u4EFB\u52A1\u3002</li><li><code>delete()</code> \u65B9\u6CD5\u5220\u9664\u7ED9\u5B9A\u7684\u5F85\u529E\u4EFB\u52A1\u3002</li></ul></blockquote><p>\u63A5\u4E0B\u6765\uFF0C\u5C06\u4EE5\u4E0B\u8DEF\u7531\u6DFB\u52A0\u5230 <code>routes/api.php</code> \u6587\u4EF6\uFF1A</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Support<span class="token punctuation">\\</span>Facades<span class="token punctuation">\\</span>Route</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>Controllers<span class="token punctuation">\\</span>TodoController</span><span class="token punctuation">;</span>

<span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/todos/{todo}&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token class-name static-context">TodoController</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;show&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/todos&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token class-name static-context">TodoController</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;create&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/todos/{todo}&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token class-name static-context">TodoController</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;update&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/todos/{todo}&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token class-name static-context">TodoController</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;delete&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u73B0\u5728\u5DF2\u7ECF\u4E3A\u6D4B\u8BD5\u63D0\u4F9B\u4E86\u6240\u6709\u76F8\u5E94\u7684\u5B9E\u73B0\uFF0C\u53EF\u4EE5\u8FD4\u56DE\u8FD0\u884C\u6D4B\u8BD5\uFF0C\u5B83\u4EEC\u73B0\u5728\u90FD\u5E94\u8BE5\u901A\u8FC7\u4E86\u3002\u4F7F\u7528\u4EE5\u4E0B\u547D\u4EE4\u518D\u6B21\u8FD0\u884C\u6D4B\u8BD5\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>./vendor/bin/pest --filter TodoTest
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>`,8),En=["src"],Dn=n("h2",{id:"\u7ED3\u8BBA",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u7ED3\u8BBA","aria-hidden":"true"},"#"),s(" \u7ED3\u8BBA")],-1),An=n("p",null,"\u5728\u672C\u6587\u4E2D\uFF0C\u5DF2\u7ECF\u4E86\u89E3\u4E86\u5982\u4F55\u4F7F\u7528 Pest \u6D4B\u8BD5\u6846\u67B6\u4E3A Laravel \u5E94\u7528\u7A0B\u5E8F\u7F16\u5199\u5355\u5143\u6D4B\u8BD5\u3002",-1),Fn=n("p",null,"\u672C\u6559\u7A0B\u53EF\u4EE5\u4F5C\u4E3A Pest \u5165\u95E8\u4EE5\u53CA\u5BF9 Laravel \u5E94\u7528\u7A0B\u5E8F\u8FDB\u884C\u5355\u5143\u6D4B\u8BD5\u7684\u7406\u60F3\u6307\u5357\u3002",-1),Hn=s("\u5305\u542B\u6B64\u9879\u76EE\u5B8C\u6574\u4EE3\u7801 "),In={href:"https://github.com/curder/laravel-pest-todo-test-demo",target:"_blank",rel:"noopener noreferrer"},Nn=s("GitHub \u4ED3\u5E93\u5730\u5740"),Un=s(" \u3002"),jn=n("h2",{id:"\u539F\u6587\u94FE\u63A5",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u539F\u6587\u94FE\u63A5","aria-hidden":"true"},"#"),s(" \u539F\u6587\u94FE\u63A5")],-1),Bn={href:"https://www.twilio.com/blog/unit-test-laravel-api-pest-framework",target:"_blank",rel:"noopener noreferrer"},Jn=s("How to Unit Test a Laravel API with the Pest Framework");function On(e,Mn){const a=o("ExternalLinkIcon");return c(),l(u,null,[k,n("p",null,[n("a",d,[b,t(a)]),g,n("a",m,[h,t(a)]),v]),_,f,q,y,w,n("ul",null,[T,n("li",null,[n("a",$,[x,t(a)])]),n("li",null,[n("a",P,[L,t(a)])]),n("li",null,[C,n("a",R,[S,t(a)]),E]),D]),A,n("p",null,[F,H,I,n("a",N,[U,t(a)]),j]),B,n("div",J,[O,n("p",null,[M,V,Q,Y,G,n("a",X,[z,t(a)]),K,W,Z,nn,sn,an,tn])]),pn,en,on,n("p",null,[cn,ln,un,n("a",rn,[kn,t(a)]),dn,bn,gn,mn,hn]),vn,n("img",{src:e.$withBase("/images/tests/unit-test-laravel-api-pest-framework/init-run-pest-test-pass.jpg"),alt:"Run pest test passed"},null,8,_n),fn,n("p",null,[qn,yn,wn,Tn,$n,n("a",xn,[Pn,t(a)]),Ln]),Cn,n("img",{src:e.$withBase("/images/tests/unit-test-laravel-api-pest-framework/run-pest-test-failed.jpg")},null,8,Rn),Sn,n("img",{src:e.$withBase("/images/tests/unit-test-laravel-api-pest-framework/run-pest-test-pass.jpg"),alt:"Run pest test passed"},null,8,En),Dn,An,Fn,n("p",null,[Hn,n("a",In,[Nn,t(a)]),Un]),jn,n("ul",null,[n("li",null,[n("a",Bn,[Jn,t(a)])])])],64)}var Yn=i(r,[["render",On]]);export{Yn as default};
