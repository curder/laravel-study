import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.e8ee2c8f.js";const h=JSON.parse('{"title":"DB 模型和 Eloquent","description":"","frontmatter":{},"headers":[],"relativePath":"tips/db-models-and-eloquent.md","filePath":"tips/db-models-and-eloquent.md","lastUpdated":1697524381000}'),p={name:"tips/db-models-and-eloquent.md"},o=l(`<h1 id="db-模型和-eloquent" tabindex="-1">DB 模型和 Eloquent <a class="header-anchor" href="#db-模型和-eloquent" aria-label="Permalink to &quot;DB 模型和 Eloquent&quot;">​</a></h1><h2 id="orderbyraw-原始查询排序" tabindex="-1">orderByRaw 原始查询排序 <a class="header-anchor" href="#orderbyraw-原始查询排序" aria-label="Permalink to &quot;orderByRaw 原始查询排序&quot;">​</a></h2><p>可以传递原始查询来对结果进行排序。 例如，按照任务在截止日期之前完成的时间对任务进行排序。</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// 按任务在截止日期之前完成对任务进行排序</span></span>
<span class="line"><span style="color:#79B8FF;">Task</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">query</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">whereNotNull</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;completed_at&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">orderByRaw</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;due_at - completed_at DESC&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 按任务在截止日期之前完成对任务进行排序</span></span>
<span class="line"><span style="color:#005CC5;">Task</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">query</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">whereNotNull</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;completed_at&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line highlighted"><span style="color:#24292E;">    </span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">orderByRaw</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;due_at - completed_at DESC&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">();</span></span></code></pre></div><h2 id="wherebetween-获取两个时间之间的数据" tabindex="-1">𝘄𝗵𝗲𝗿𝗲𝗕𝗲𝘁𝘄𝗲𝗲𝗻 获取两个时间之间的数据 <a class="header-anchor" href="#wherebetween-获取两个时间之间的数据" aria-label="Permalink to &quot;𝘄𝗵𝗲𝗿𝗲𝗕𝗲𝘁𝘄𝗲𝗲𝗻 获取两个时间之间的数据&quot;">​</a></h2><p>使用 <code>𝘄𝗵𝗲𝗿𝗲𝗕𝗲𝘁𝘄𝗲𝗲𝗻</code> 加载两个时间戳之间的记录。</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// 加载两个时间戳之间完成的任务</span></span>
<span class="line"><span style="color:#79B8FF;">Task</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">whereBetween</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;completed_at&#39;</span><span style="color:#E1E4E8;">, [</span></span>
<span class="line"><span style="color:#E1E4E8;">    $request</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">from </span><span style="color:#F97583;">??</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;2023-01-01&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    $request</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">to </span><span style="color:#F97583;">??</span><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">today</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">toDateTimeString</span><span style="color:#E1E4E8;">(),</span></span>
<span class="line"><span style="color:#E1E4E8;">]);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 加载两个时间戳之间完成的任务</span></span>
<span class="line"><span style="color:#005CC5;">Task</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">whereBetween</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;completed_at&#39;</span><span style="color:#24292E;">, [</span></span>
<span class="line"><span style="color:#24292E;">    $request</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">from </span><span style="color:#D73A49;">??</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;2023-01-01&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    $request</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">to </span><span style="color:#D73A49;">??</span><span style="color:#24292E;">  </span><span style="color:#6F42C1;">today</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">toDateTimeString</span><span style="color:#24292E;">(),</span></span>
<span class="line"><span style="color:#24292E;">]);</span></span></code></pre></div><h2 id="whereintegerinraw" tabindex="-1">whereIntegerInRaw <a class="header-anchor" href="#whereintegerinraw" aria-label="Permalink to &quot;whereIntegerInRaw&quot;">​</a></h2><p>当目标值为<strong>整型</strong>时，不要使用 <code>𝘄𝗵𝗲𝗿𝗲𝗜𝗻()</code> 方法加载大范围数据，而是使用 <code>𝘄𝗵𝗲𝗿𝗲𝗜𝗻𝘁𝗲𝗴𝗲𝗿𝗜𝗻𝗥𝗮𝘄()</code> 比 <code>𝘄𝗵𝗲𝗿𝗲𝗜𝗻()</code> 更快。</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark has-diff vp-code-dark"><code><span class="line"><span style="color:#F97583;">&lt;?</span><span style="color:#79B8FF;">php</span></span>
<span class="line"></span>
<span class="line diff remove"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">Product</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">whereIn</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;id&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">range</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">50</span><span style="color:#E1E4E8;">))</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(); </span></span>
<span class="line diff add"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">Product</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">whereIntegerInRaw</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;id&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">range</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">50</span><span style="color:#E1E4E8;">))</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(); </span></span></code></pre><pre class="shiki github-light has-diff vp-code-light"><code><span class="line"><span style="color:#D73A49;">&lt;?</span><span style="color:#005CC5;">php</span></span>
<span class="line"></span>
<span class="line diff remove"><span style="color:#24292E;">    </span><span style="color:#005CC5;">Product</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">whereIn</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;id&#39;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">range</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">50</span><span style="color:#24292E;">))</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(); </span></span>
<span class="line diff add"><span style="color:#24292E;">    </span><span style="color:#005CC5;">Product</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">whereIntegerInRaw</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;id&#39;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">range</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">50</span><span style="color:#24292E;">))</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(); </span></span></code></pre></div><h2 id="rawvalue" tabindex="-1">rawValue <a class="header-anchor" href="#rawvalue" aria-label="Permalink to &quot;rawValue&quot;">​</a></h2><p>Laravel 9.37 有一个新的 <code>rawValue()</code> 方法来从 SQL 表达式中获取值。</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">$first </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">TripModel</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">orderBy</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;date_at&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;ASC&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">rawValue</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;YEAR(\`date_at\`)&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">$last </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">TripModel</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">orderBy</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;date_at&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;DESC&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">rawValue</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;YEAR(\`date_at\`)&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">$fullname </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">UserModel</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">where</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;id&#39;</span><span style="color:#E1E4E8;">, $id)</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">rawValue</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;CONCAT(\`first_name\`, &quot; &quot;, \`last_name\`)&#39;</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">$first </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">TripModel</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">orderBy</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;date_at&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;ASC&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">rawValue</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;YEAR(\`date_at\`)&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">$last </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">TripModel</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">orderBy</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;date_at&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;DESC&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">rawValue</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;YEAR(\`date_at\`)&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">$fullname </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">UserModel</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">where</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;id&#39;</span><span style="color:#24292E;">, $id)</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">rawValue</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;CONCAT(\`first_name\`, &quot; &quot;, \`last_name\`)&#39;</span><span style="color:#24292E;">);</span></span></code></pre></div><h2 id="scope-其他关系的模型范围" tabindex="-1">scope 其他关系的模型范围 <a class="header-anchor" href="#scope-其他关系的模型范围" aria-label="Permalink to &quot;scope 其他关系的模型范围&quot;">​</a></h2><p>可以使用模型范围来定义一个相关的模型关联关系。</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-flh1L" id="tab-4bH-GQu" checked="checked"><label for="tab-4bH-GQu">app/Models/Course.php</label><input type="radio" name="group-flh1L" id="tab-WG6-Gzd"><label for="tab-WG6-Gzd">app/Models/Lesson.php</label></div><div class="blocks"><div class="language-php vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">lessons</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">HasMany</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">hasMany</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">Lesson</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">publishedLessons</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">HasMany</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">lessons</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">published</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">lessons</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">HasMany</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">hasMany</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">Lesson</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">publishedLessons</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">HasMany</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line highlighted"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">lessons</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">published</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">scopePublished</span><span style="color:#E1E4E8;">($query)</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> $query</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">where</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;is_published&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">scopePublished</span><span style="color:#24292E;">($query)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> $query</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">where</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;is_published&#39;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div></div></div><h2 id="db-aftercommit-事务处理" tabindex="-1">DB::afterCommit 事务处理 <a class="header-anchor" href="#db-aftercommit-事务处理" aria-label="Permalink to &quot;DB::afterCommit 事务处理&quot;">​</a></h2><p>使用 <code>DB::afterCommit()</code> 方法，可以编写仅在事务提交时执行的代码，以及在事务回滚时丢弃的代码。</p><p>如果没有事务时，代码会立即执行。</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-iKoEg" id="tab-m-AV_4-" checked="checked"><label for="tab-m-AV_4-">模型逻辑</label><input type="radio" name="group-iKoEg" id="tab-r9PZEez"><label for="tab-r9PZEez">业务逻辑</label></div><div class="blocks"><div class="language-php vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">User</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">extends</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Model</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">protected</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">booted</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">static::</span><span style="color:#B392F0;">created</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">self</span><span style="color:#E1E4E8;"> $user) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">// 仅当满足事务已提交条件时才会发送电子邮件</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#79B8FF;">DB</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">afterCommit</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> () </span><span style="color:#F97583;">use</span><span style="color:#E1E4E8;"> ($user) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#79B8FF;">Mail</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">send</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">WelcomeEmail</span><span style="color:#E1E4E8;">($user));</span></span>
<span class="line"><span style="color:#E1E4E8;">            });</span></span>
<span class="line"><span style="color:#E1E4E8;">        });</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">User</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">extends</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Model</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">protected</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">booted</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">static::</span><span style="color:#6F42C1;">created</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">self</span><span style="color:#24292E;"> $user) {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// 仅当满足事务已提交条件时才会发送电子邮件</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#005CC5;">DB</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">afterCommit</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> () </span><span style="color:#D73A49;">use</span><span style="color:#24292E;"> ($user) {</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#005CC5;">Mail</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">send</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">WelcomeEmail</span><span style="color:#24292E;">($user));</span></span>
<span class="line"><span style="color:#24292E;">            });</span></span>
<span class="line"><span style="color:#24292E;">        });</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">DB</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">transaction</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> () {</span></span>
<span class="line"><span style="color:#E1E4E8;">    $user </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">User</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">([</span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">]);</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">    $user</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">teams</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">([</span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">]);</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">DB</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">transaction</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#24292E;">    $user </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">User</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">create</span><span style="color:#24292E;">([</span><span style="color:#D73A49;">...</span><span style="color:#24292E;">]);</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">    $user</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">teams</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">create</span><span style="color:#24292E;">([</span><span style="color:#D73A49;">...</span><span style="color:#24292E;">]);</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div></div></div><h2 id="withouttimestamps-执行操作时不修改-updated-at-字段" tabindex="-1"><code>withoutTimestamps</code> 执行操作时不修改 <code>updated_at</code> 字段 <a class="header-anchor" href="#withouttimestamps-执行操作时不修改-updated-at-字段" aria-label="Permalink to &quot;\`withoutTimestamps\` 执行操作时不修改 \`updated_at\` 字段&quot;">​</a></h2><p>从 Laravel 9.31 开始可用，如果想在执行模型操作的情况下让模型的 <code>Updated_at</code> 时间戳不被修改，可以在给定的模型方法 <code>withoutTimestamps</code> 的闭包内对模型进行操作。</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">$user </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">User</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">query</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">first</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// \`updated_at\` 字段将不会变更</span></span>
<span class="line"><span style="color:#79B8FF;">User</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">withoutTimestamps</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#F97583;">fn</span><span style="color:#E1E4E8;"> () =&gt; $user</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">update</span><span style="color:#E1E4E8;">([</span><span style="color:#9ECBFF;">&#39;reserved_at&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">now</span><span style="color:#E1E4E8;">()])</span></span>
<span class="line"><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">$user </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">User</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">query</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">first</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// \`updated_at\` 字段将不会变更</span></span>
<span class="line"><span style="color:#005CC5;">User</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">withoutTimestamps</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#D73A49;">fn</span><span style="color:#24292E;"> () =&gt; $user</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">update</span><span style="color:#24292E;">([</span><span style="color:#032F62;">&#39;reserved_at&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">now</span><span style="color:#24292E;">()])</span></span>
<span class="line"><span style="color:#24292E;">);</span></span></code></pre></div><h2 id="tobase-合并集合" tabindex="-1">toBase() 合并集合 <a class="header-anchor" href="#tobase-合并集合" aria-label="Permalink to &quot;toBase() 合并集合&quot;">​</a></h2><p>Eloquent 集合的 <code>merge</code> 方法使用 <code>id</code> 来避免重复的模型。</p><p>但如果合并不同模型的集合，可能会导致意想不到的结果。</p><p>建议改用 <code>toBase()</code> 方法。</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">$videos </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Video</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">all</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">$images </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Image</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">all</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 如果存在与图像具有相同 ID 的视频，它们将被替换，最终会丢失视频</span></span>
<span class="line"><span style="color:#E1E4E8;">$allMedia </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> $videos</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">merge</span><span style="color:#E1E4E8;">($images);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 在 Eloquent 集合中调用 \`toBase()\` 以使用基本合并方法</span></span>
<span class="line"><span style="color:#E1E4E8;">$allMedia </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> $videos</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">toBase</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">merge</span><span style="color:#E1E4E8;">($images);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">$videos </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Video</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">all</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">$images </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Image</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">all</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 如果存在与图像具有相同 ID 的视频，它们将被替换，最终会丢失视频</span></span>
<span class="line"><span style="color:#24292E;">$allMedia </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> $videos</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">merge</span><span style="color:#24292E;">($images);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 在 Eloquent 集合中调用 \`toBase()\` 以使用基本合并方法</span></span>
<span class="line"><span style="color:#24292E;">$allMedia </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> $videos</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">toBase</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">merge</span><span style="color:#24292E;">($images);</span></span></code></pre></div><h2 id="在-mysql-上使用-laravel-进行全文搜索" tabindex="-1">在 MySQL 上使用 Laravel 进行全文搜索 <a class="header-anchor" href="#在-mysql-上使用-laravel-进行全文搜索" aria-label="Permalink to &quot;在 MySQL 上使用 Laravel 进行全文搜索&quot;">​</a></h2><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-wrynb" id="tab-CA9wr8l" checked="checked"><label for="tab-CA9wr8l">迁移文件</label><input type="radio" name="group-wrynb" id="tab-KD01j6m"><label for="tab-KD01j6m">使用方法</label></div><div class="blocks"><div class="language-php vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">Schema</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;comments&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">Blueprint</span><span style="color:#E1E4E8;"> $table) {</span></span>
<span class="line"><span style="color:#E1E4E8;">     $table</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">id</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">     $table</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">string</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;title&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">     $table</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">text</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;description&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">     $table</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">fullText</span><span style="color:#E1E4E8;">([</span><span style="color:#9ECBFF;">&#39;title&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;description&#39;</span><span style="color:#E1E4E8;">]);</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line"><span style="color:#005CC5;">Schema</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">create</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;comments&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">Blueprint</span><span style="color:#24292E;"> $table) {</span></span>
<span class="line"><span style="color:#24292E;">     $table</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">id</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">     $table</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">string</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;title&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">     $table</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">text</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;description&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line highlighted"><span style="color:#24292E;">     $table</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">fullText</span><span style="color:#24292E;">([</span><span style="color:#032F62;">&#39;title&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;description&#39;</span><span style="color:#24292E;">]);</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// 全文搜索</span></span>
<span class="line"><span style="color:#79B8FF;">Comment</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">whereFulltext</span><span style="color:#E1E4E8;">([</span><span style="color:#9ECBFF;">&#39;title&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;description&#39;</span><span style="color:#E1E4E8;">], </span><span style="color:#9ECBFF;">&#39;something&#39;</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 使用 expanded 执行更大的查询</span></span>
<span class="line"><span style="color:#79B8FF;">Comment</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">whereFulltext</span><span style="color:#E1E4E8;">([</span><span style="color:#9ECBFF;">&#39;title&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;description&#39;</span><span style="color:#E1E4E8;">], </span><span style="color:#9ECBFF;">&#39;something&#39;</span><span style="color:#E1E4E8;">, [</span><span style="color:#9ECBFF;">&#39;expanded&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">])</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 搜索 something 内容并排除 other 内容</span></span>
<span class="line"><span style="color:#79B8FF;">Comment</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">whereFulltext</span><span style="color:#E1E4E8;">([</span><span style="color:#9ECBFF;">&#39;title&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;description&#39;</span><span style="color:#E1E4E8;">], </span><span style="color:#9ECBFF;">&#39;+something -else&#39;</span><span style="color:#E1E4E8;">, [</span><span style="color:#9ECBFF;">&#39;mode&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;boolean&#39;</span><span style="color:#E1E4E8;">])</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 全文搜索</span></span>
<span class="line"><span style="color:#005CC5;">Comment</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">whereFulltext</span><span style="color:#24292E;">([</span><span style="color:#032F62;">&#39;title&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;description&#39;</span><span style="color:#24292E;">], </span><span style="color:#032F62;">&#39;something&#39;</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 使用 expanded 执行更大的查询</span></span>
<span class="line"><span style="color:#005CC5;">Comment</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">whereFulltext</span><span style="color:#24292E;">([</span><span style="color:#032F62;">&#39;title&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;description&#39;</span><span style="color:#24292E;">], </span><span style="color:#032F62;">&#39;something&#39;</span><span style="color:#24292E;">, [</span><span style="color:#032F62;">&#39;expanded&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">])</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 搜索 something 内容并排除 other 内容</span></span>
<span class="line"><span style="color:#005CC5;">Comment</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">whereFulltext</span><span style="color:#24292E;">([</span><span style="color:#032F62;">&#39;title&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;description&#39;</span><span style="color:#24292E;">], </span><span style="color:#032F62;">&#39;+something -else&#39;</span><span style="color:#24292E;">, [</span><span style="color:#032F62;">&#39;mode&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;boolean&#39;</span><span style="color:#24292E;">])</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">();</span></span></code></pre></div></div></div><h2 id="原始查询中使用绑定" tabindex="-1">原始查询中使用绑定 <a class="header-anchor" href="#原始查询中使用绑定" aria-label="Permalink to &quot;原始查询中使用绑定&quot;">​</a></h2><p>可以将绑定数组传递给大多数原始查询方法以避免 SQL 注入。</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark has-diff vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// 下面的方式容易受到 SQL 注入攻击</span></span>
<span class="line diff remove"><span style="color:#E1E4E8;">$fullname </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">request</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;full_name&#39;</span><span style="color:#E1E4E8;">); </span></span>
<span class="line diff remove"><span style="color:#79B8FF;">User</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">whereRaw</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;CONCAT(first_name, last_name) = </span><span style="color:#E1E4E8;">$fullName</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(); </span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#6A737D;">// 使用参数绑定</span></span>
<span class="line diff add"><span style="color:#79B8FF;">User</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">whereRaw</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;CONCAT(first_name, last_name) = ?&quot;</span><span style="color:#E1E4E8;">, [</span><span style="color:#B392F0;">request</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;full_name&#39;</span><span style="color:#E1E4E8;">)])</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(); </span></span></code></pre><pre class="shiki github-light has-diff vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 下面的方式容易受到 SQL 注入攻击</span></span>
<span class="line diff remove"><span style="color:#24292E;">$fullname </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">request</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;full_name&#39;</span><span style="color:#24292E;">); </span></span>
<span class="line diff remove"><span style="color:#005CC5;">User</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">whereRaw</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;CONCAT(first_name, last_name) = </span><span style="color:#24292E;">$fullName</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(); </span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6A737D;">// 使用参数绑定</span></span>
<span class="line diff add"><span style="color:#005CC5;">User</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">whereRaw</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;CONCAT(first_name, last_name) = ?&quot;</span><span style="color:#24292E;">, [</span><span style="color:#6F42C1;">request</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;full_name&#39;</span><span style="color:#24292E;">)])</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(); </span></span></code></pre></div><h2 id="clone-重用或克隆查询" tabindex="-1">clone 重用或克隆查询 <a class="header-anchor" href="#clone-重用或克隆查询" aria-label="Permalink to &quot;clone 重用或克隆查询&quot;">​</a></h2><p>通常，在处理实际查询请求时需要从过滤查询中进行多次查询。</p><p>所以，大多数时候会使用 <code>query()</code> 方法， 比如编写一个查询来获取今天创建的活跃和非活跃产品：</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">$query </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Product</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">query</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">$today </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">request</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">q_date </span><span style="color:#F97583;">??</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">today</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> ($today) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    $query</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">where</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;created_at&#39;</span><span style="color:#E1E4E8;">, $today);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="color:#E1E4E8;">$active_products </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> $query</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">clone</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">where</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;status&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(); </span><span style="color:#6A737D;">// 它不会修改 $query</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">$inactive_products </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> $query</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">clone</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">where</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;status&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(); </span><span style="color:#6A737D;">// 所以我们将从 $query 获取非活跃的产品</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line"><span style="color:#24292E;">$query </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Product</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">query</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">$today </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">request</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">q_date </span><span style="color:#D73A49;">??</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">today</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> ($today) {</span></span>
<span class="line"><span style="color:#24292E;">    $query</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">where</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;created_at&#39;</span><span style="color:#24292E;">, $today);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="color:#24292E;">$active_products </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> $query</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">clone</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">where</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;status&#39;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// 它不会修改 $query</span></span>
<span class="line highlighted"><span style="color:#24292E;">$inactive_products </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> $query</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">clone</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">where</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;status&#39;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// 所以我们将从 $query 获取非活跃的产品</span></span></code></pre></div><p>通过重用这个 <code>$query</code> 对象来进行多次查询。</p><p>因此需要在执行任何 <code>$query</code> 修改操作之前克隆此 <code>$query</code>。</p><h2 id="where-日期方法" tabindex="-1">where 日期方法 <a class="header-anchor" href="#where-日期方法" aria-label="Permalink to &quot;where 日期方法&quot;">​</a></h2><p>在 Eloquent 中，使用函数 <code>whereDay()</code>、<code>whereMonth()</code>、<code>whereYear()</code>、<code>whereDate()</code> 和 <code>whereTime()</code> 来过滤日期。</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">Product</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">whereDay</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;created_at&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;31&#39;</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#79B8FF;">Product</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">whereMonth</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;created_at&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;12&#39;</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#79B8FF;">Product</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">whereYear</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;created_at&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">date</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;Y&#39;</span><span style="color:#E1E4E8;">))</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#79B8FF;">Product</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">whereDate</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;created_at&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;2018-01-31&#39;</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#79B8FF;">Product</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">whereTime</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;created_at&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;=&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;14:13:58&#39;</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">Product</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">whereDay</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;created_at&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;31&#39;</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#005CC5;">Product</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">whereMonth</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;created_at&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;12&#39;</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#005CC5;">Product</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">whereYear</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;created_at&#39;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">date</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;Y&#39;</span><span style="color:#24292E;">))</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#005CC5;">Product</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">whereDate</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;created_at&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;2018-01-31&#39;</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#005CC5;">Product</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">whereTime</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;created_at&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;=&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;14:13:58&#39;</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">();</span></span></code></pre></div><h2 id="increments-和-decrements-增减某个字段" tabindex="-1">increments 和 decrements 增减某个字段 <a class="header-anchor" href="#increments-和-decrements-增减某个字段" aria-label="Permalink to &quot;increments 和 decrements 增减某个字段&quot;">​</a></h2><p>如果需要某个表中的某些数据库列，只需使用 <code>increment()</code> 函数。</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">Post</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">find</span><span style="color:#E1E4E8;">($post_id)</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">increment</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;view_count&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#79B8FF;">User</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">find</span><span style="color:#E1E4E8;">($user_id)</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">increment</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;points&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">50</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// 一次增加 50</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">Post</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">find</span><span style="color:#24292E;">($post_id)</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">increment</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;view_count&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#005CC5;">User</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">find</span><span style="color:#24292E;">($user_id)</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">increment</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;points&#39;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">50</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// 一次增加 50</span></span></code></pre></div><h2 id="没有时间戳列" tabindex="-1">没有时间戳列 <a class="header-anchor" href="#没有时间戳列" aria-label="Permalink to &quot;没有时间戳列&quot;">​</a></h2><p>如果数据库表不包含时间戳字段 <code>created_at</code> 和 <code>updated_at</code>，可以设置模型属性 <code>$timestamps = false</code> 。</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Post</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">extends</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Model</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> $timestamps </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Post</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">extends</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Model</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> $timestamps </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="更改默认时间戳字段" tabindex="-1">更改默认时间戳字段 <a class="header-anchor" href="#更改默认时间戳字段" aria-label="Permalink to &quot;更改默认时间戳字段&quot;">​</a></h2><p>如果使用非 Laravel 数据库并且时间戳列的命名不同怎么办？比如有 <code>create_time</code> 和 <code>update_time</code>。可以在模型中指定它们：</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Post</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">extends</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Model</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">CREATED_AT</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;create_time&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">UPDATED_AT</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;update_time&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Post</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">extends</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Model</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">CREATED_AT</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;create_time&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">UPDATED_AT</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;update_time&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="软删除数据的恢复" tabindex="-1">软删除数据的恢复 <a class="header-anchor" href="#软删除数据的恢复" aria-label="Permalink to &quot;软删除数据的恢复&quot;">​</a></h2><p>在使用模型的软删除时，可以使用 <code>restore()</code> 方法恢复多行。</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">Post</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">onlyTrashed</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">where</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;author_id&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">restore</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">Post</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">onlyTrashed</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">where</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;author_id&#39;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">restore</span><span style="color:#24292E;">();</span></span></code></pre></div><h2 id="all-数据列" tabindex="-1">all 数据列 <a class="header-anchor" href="#all-数据列" aria-label="Permalink to &quot;all 数据列&quot;">​</a></h2><p>当调用 Eloquent 的 Model::all() 时，可以指定返回哪些列。</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">User</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">all</span><span style="color:#E1E4E8;">([</span><span style="color:#9ECBFF;">&#39;id&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;name&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;email&#39;</span><span style="color:#E1E4E8;">]);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">User</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">all</span><span style="color:#24292E;">([</span><span style="color:#032F62;">&#39;id&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;name&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;email&#39;</span><span style="color:#24292E;">]);</span></span></code></pre></div><h2 id="firstorfail" tabindex="-1">firstOrFail <a class="header-anchor" href="#firstorfail" aria-label="Permalink to &quot;firstOrFail&quot;">​</a></h2><p>firstOrFail()方法，如果没有找到查询的记录，它会返回404页面。</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">User</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">where</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;email&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;example@example.com&#39;</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">firstOrFail</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">User</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">where</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;email&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;example@example.com&#39;</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">firstOrFail</span><span style="color:#24292E;">();</span></span></code></pre></div><h2 id="更改列名" tabindex="-1">更改列名 <a class="header-anchor" href="#更改列名" aria-label="Permalink to &quot;更改列名&quot;">​</a></h2><p>在 Eloquent 查询生成器中，可以通过“as”来返回具有不同名称的任何列，就像在普通 SQL 查询中一样。</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">DB</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">table</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;users&#39;</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">select</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;name&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;email as user_email&#39;</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">DB</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">table</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;users&#39;</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">select</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;name&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;email as user_email&#39;</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">();</span></span></code></pre></div><h2 id="修改查询结果" tabindex="-1">修改查询结果 <a class="header-anchor" href="#修改查询结果" aria-label="Permalink to &quot;修改查询结果&quot;">​</a></h2><p>Eloquent 查询后，可以使用集合中的 <code>map()</code> 方法修改行。</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">User</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">query</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">where</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;active&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">map</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">User</span><span style="color:#E1E4E8;"> $user) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    $user</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">some_column </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">some_function</span><span style="color:#E1E4E8;">($user);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> $user;</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">User</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">query</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">where</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;active&#39;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">map</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">User</span><span style="color:#24292E;"> $user) {</span></span>
<span class="line"><span style="color:#24292E;">    $user</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">some_column </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">some_function</span><span style="color:#24292E;">($user);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> $user;</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div>`,66),e=[o];function t(c,r,y,E,i,d){return a(),n("div",null,e)}const u=s(p,[["render",t]]);export{h as __pageData,u as default};
