import{r as t,o as p,c as e,b as s,a as o,F as c,e as l,d as n}from"./app.ac22b6cd.js";import{_ as u}from"./plugin-vue_export-helper.21dcd24c.js";const r={},i=l(`<h1 id="tojson" tabindex="-1"><a class="header-anchor" href="#tojson" aria-hidden="true">#</a> toJson</h1><p>\u5C06\u96C6\u5408\u8F6C\u6362\u6210 JSON \u5B57\u7B26\u4E32\u3002</p><p>\u901A\u8FC7 <code>json_encode</code> \u51FD\u6570\u5C06\u6570\u7EC4\u8F6C\u6362\u6210 JSON</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$data</span> <span class="token operator">=</span> <span class="token function">collect</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;product&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;apples&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;price&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">45</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">json_encode</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {&quot;product&quot;:&quot;apples&quot;,&quot;price&quot;:45}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u53EF\u4EE5\u76F4\u63A5\u8C03\u7528 toJson \u65B9\u6CD5\u5C06\u96C6\u5408\u8F6C\u6362\u79F0 JSON</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token function">collect</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;product&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;apples&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;price&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">45</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">toJson</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {&quot;product&quot;:&quot;apples&quot;,&quot;price&quot;:45}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>\u5F53\u7136\uFF0C\u4E5F\u53EF\u4EE5\u5728\u8C03\u7528 <code>toJson</code> \u65F6\uFF0C\u4F20\u9012\u5BF9\u5E94\u7684\u53C2\u6570\uFF0C\u6BD4\u5982\uFF1A<code>JSON_PRETTY_PRINT</code> \u53C2\u6570\u3002</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token function">collect</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;product&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;apples&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;price&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">45</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">toJson</span><span class="token punctuation">(</span><span class="token constant">JSON_PRETTY_PRINT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// output</span>
<span class="token doc-comment comment">/** 
&quot;&quot;&quot;
<span class="token punctuation">{</span>\\n
   &quot;product&quot;: &quot;apples&quot;,\\n
   &quot;price&quot;: 45\\n
<span class="token punctuation">}</span>
&quot;&quot;&quot;
*/</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div>`,8),k=n("\u66F4\u591A\u53C2\u6570"),d={href:"https://www.php.net/manual/zh/json.constants.php",target:"_blank",rel:"noopener noreferrer"},g=n("\u53C2\u8003JSON \u5E38\u91CF"),m=n(" \u3002");function b(q,_){const a=t("ExternalLinkIcon");return p(),e(c,null,[i,s("p",null,[k,s("a",d,[g,o(a)]),m])],64)}var v=u(r,[["render",b]]);export{v as default};
