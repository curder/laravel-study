import{r as e,o as l,c as u,a,w as t,b as n,F as i,e as r,d as s}from"./app.39c058a4.js";import{_ as k}from"./plugin-vue_export-helper.21dcd24c.js";const b={},m=r(`<h1 id="testing-\u6D4B\u8BD5" tabindex="-1"><a class="header-anchor" href="#testing-\u6D4B\u8BD5" aria-hidden="true">#</a> Testing \u6D4B\u8BD5</h1><h2 id="\u6D4B\u8BD5\u662F\u5426\u5C06\u6B63\u786E\u7684\u6570\u636E\u4F20\u9012\u7ED9\u89C6\u56FE" tabindex="-1"><a class="header-anchor" href="#\u6D4B\u8BD5\u662F\u5426\u5C06\u6B63\u786E\u7684\u6570\u636E\u4F20\u9012\u7ED9\u89C6\u56FE" aria-hidden="true">#</a> \u6D4B\u8BD5\u662F\u5426\u5C06\u6B63\u786E\u7684\u6570\u636E\u4F20\u9012\u7ED9\u89C6\u56FE</h2><p>\u9700\u8981\u6D4B\u8BD5\u662F\u5426\u5C06\u6B63\u786E\u7684\u6570\u636E\u4F20\u9012\u7ED9\u89C6\u56FE\uFF1F\u53EF\u4EE5\u5728\u54CD\u5E94\u4E2D\u4F7F\u7528 <code>viewData</code> \u65B9\u6CD5\u3002</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token doc-comment comment">/** <span class="token keyword">@test</span> */</span>
<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">it_has_the_correct_value</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token variable">$response</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/some-route&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;John Doe&#39;</span><span class="token punctuation">,</span> <span class="token variable">$response</span><span class="token operator">-&gt;</span><span class="token function">viewData</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/** <span class="token keyword">@test</span> */</span>
<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">it_contains_a_given_record</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token variable">$response</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/some-route&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">assertTrue</span><span class="token punctuation">(</span><span class="token variable">$response</span><span class="token operator">-&gt;</span><span class="token function">viewData</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;users&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token variable">$userA</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/** <span class="token keyword">@test</span> */</span>
<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">it_returns_the_correct_amount_of_records</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token variable">$response</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/some-route&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">assertCount</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token variable">$response</span><span class="token operator">-&gt;</span><span class="token function">viewData</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;users&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><h2 id="\u6D4B\u8BD5\u547D\u4EE4\u5B9A\u65F6\u6267\u884C" tabindex="-1"><a class="header-anchor" href="#\u6D4B\u8BD5\u547D\u4EE4\u5B9A\u65F6\u6267\u884C" aria-hidden="true">#</a> \u6D4B\u8BD5\u547D\u4EE4\u5B9A\u65F6\u6267\u884C</h2><p>\u65AD\u8A00\u5B9A\u65F6\u4EFB\u52A1\u4E00\u5B9A\u4F1A\u6309\u7167\u6307\u5B9A\u7684\u89C4\u5219\u6267\u884C\u3002</p>`,6),d=n("div",{class:"language-php ext-php line-numbers-mode"},[n("pre",{class:"language-php"},[n("code",null,[s(`// App\\Console\\Kernel
`),n("span",{class:"token php language-php"},[n("span",{class:"token delimiter important"},"<?php"),s(`

`),n("span",{class:"token keyword"},"namespace"),s(),n("span",{class:"token package"},[s("App"),n("span",{class:"token punctuation"},"\\"),s("Console")]),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"use"),s(),n("span",{class:"token package"},[s("Illuminate"),n("span",{class:"token punctuation"},"\\"),s("Console"),n("span",{class:"token punctuation"},"\\"),s("Scheduling"),n("span",{class:"token punctuation"},"\\"),s("Schedule")]),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"use"),s(),n("span",{class:"token package"},[s("Illuminate"),n("span",{class:"token punctuation"},"\\"),s("Foundation"),n("span",{class:"token punctuation"},"\\"),s("Console"),n("span",{class:"token punctuation"},"\\"),s("Kernel")]),s(),n("span",{class:"token keyword"},"as"),s(" ConsoleKernel"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"use"),s(),n("span",{class:"token package"},[s("Illuminate"),n("span",{class:"token punctuation"},"\\"),s("Support"),n("span",{class:"token punctuation"},"\\"),s("Str")]),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name-definition class-name"},"Kernel"),s(),n("span",{class:"token keyword"},"extends"),s(),n("span",{class:"token class-name"},"ConsoleKernel"),s(`
`),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"use"),s(),n("span",{class:"token package"},[s("Illuminate"),n("span",{class:"token punctuation"},"\\"),s("Console"),n("span",{class:"token punctuation"},"\\"),s("Scheduling"),n("span",{class:"token punctuation"},"\\"),s("Schedule")]),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"use"),s(),n("span",{class:"token package"},[s("Illuminate"),n("span",{class:"token punctuation"},"\\"),s("Foundation"),n("span",{class:"token punctuation"},"\\"),s("Console"),n("span",{class:"token punctuation"},"\\"),s("Kernel")]),s(),n("span",{class:"token keyword"},"as"),s(" ConsoleKernel"),n("span",{class:"token punctuation"},";"),s(`
    
    `),n("span",{class:"token keyword"},"protected"),s(),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function-definition function"},"schedule"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name type-declaration"},"Schedule"),s(),n("span",{class:"token variable"},"$schedule"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token variable"},"$schedule"),n("span",{class:"token operator"},"->"),n("span",{class:"token function"},"command"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string single-quoted-string"},"'check:api-token'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},"->"),n("span",{class:"token function"},"dailyAt"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string single-quoted-string"},"'10:00'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// \u68C0\u67E5\u662F\u5426\u9700\u8981\u53D1\u9001apiToken\u5230\u671F\u901A\u77E5"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])])]),n("div",{class:"line-numbers"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br"),n("span",{class:"line-number"},"7"),n("br"),n("span",{class:"line-number"},"8"),n("br"),n("span",{class:"line-number"},"9"),n("br"),n("span",{class:"line-number"},"10"),n("br"),n("span",{class:"line-number"},"11"),n("br"),n("span",{class:"line-number"},"12"),n("br"),n("span",{class:"line-number"},"13"),n("br"),n("span",{class:"line-number"},"14"),n("br"),n("span",{class:"line-number"},"15"),n("br"),n("span",{class:"line-number"},"16"),n("br"),n("span",{class:"line-number"},"17"),n("br"),n("span",{class:"line-number"},"18"),n("br"),n("span",{class:"line-number"},"19"),n("br")])],-1),g=n("div",{class:"language-php ext-php line-numbers-mode"},[n("pre",{class:"language-php"},[n("code",null,[s(`// Test
`),n("span",{class:"token php language-php"},[n("span",{class:"token delimiter important"},"<?php"),s(`
`),n("span",{class:"token keyword"},"namespace"),s(),n("span",{class:"token package"},[s("Tests"),n("span",{class:"token punctuation"},"\\"),s("Integrations"),n("span",{class:"token punctuation"},"\\"),s("Console")]),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"use"),s(),n("span",{class:"token package"},[s("Tests"),n("span",{class:"token punctuation"},"\\"),s("TestCase")]),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"use"),s(),n("span",{class:"token package"},[s("Illuminate"),n("span",{class:"token punctuation"},"\\"),s("Support"),n("span",{class:"token punctuation"},"\\"),s("Str")]),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"use"),s(),n("span",{class:"token package"},[s("Illuminate"),n("span",{class:"token punctuation"},"\\"),s("Console"),n("span",{class:"token punctuation"},"\\"),s("Scheduling"),n("span",{class:"token punctuation"},"\\"),s("Event")]),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"use"),s(),n("span",{class:"token package"},[s("Illuminate"),n("span",{class:"token punctuation"},"\\"),s("Console"),n("span",{class:"token punctuation"},"\\"),s("Scheduling"),n("span",{class:"token punctuation"},"\\"),s("Schedule")]),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name-definition class-name"},"KernelTest"),s(),n("span",{class:"token keyword"},"extends"),s(),n("span",{class:"token class-name"},"TestCase"),s(`
`),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token doc-comment comment"},[s("/** "),n("span",{class:"token keyword"},"@test"),s(" */")]),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function-definition function"},"check_api_token_command_is_scheduled_at_10am"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token keyword return-type"},"void"),s(`
    `),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token variable"},"$schedule"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"app"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name static-context"},"Schedule"),n("span",{class:"token operator"},"::"),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

        `),n("span",{class:"token doc-comment comment"},[s("/** "),n("span",{class:"token keyword"},"@var"),s(),n("span",{class:"token class-name"},"Event"),s(),n("span",{class:"token parameter"},"$event"),s(" */")]),s(`
        `),n("span",{class:"token variable"},"$event"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"collect"),n("span",{class:"token punctuation"},"("),n("span",{class:"token variable"},"$schedule"),n("span",{class:"token operator"},"->"),n("span",{class:"token function"},"events"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
            `),n("span",{class:"token operator"},"->"),n("span",{class:"token function"},"filter"),n("span",{class:"token punctuation"},"("),s(`
                `),n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name type-declaration"},"Event"),s(),n("span",{class:"token variable"},"$event"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s("  "),n("span",{class:"token class-name static-context"},"Str"),n("span",{class:"token operator"},"::"),n("span",{class:"token function"},"containsAll"),n("span",{class:"token punctuation"},"("),n("span",{class:"token variable"},"$event"),n("span",{class:"token operator"},"->"),n("span",{class:"token property"},"command"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token string single-quoted-string"},"'check:api_token'"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
            `),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},"->"),n("span",{class:"token function"},"first"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

        `),n("span",{class:"token variable"},"$this"),n("span",{class:"token operator"},"->"),n("span",{class:"token function"},"assertInstanceOf"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name static-context"},"Event"),n("span",{class:"token operator"},"::"),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token variable"},"$event"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token variable"},"$this"),n("span",{class:"token operator"},"->"),n("span",{class:"token function"},"assertEquals"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string single-quoted-string"},"'0 10 * * *'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token variable"},"$event"),n("span",{class:"token operator"},"->"),n("span",{class:"token property"},"expression"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])])]),n("div",{class:"line-numbers"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br"),n("span",{class:"line-number"},"7"),n("br"),n("span",{class:"line-number"},"8"),n("br"),n("span",{class:"line-number"},"9"),n("br"),n("span",{class:"line-number"},"10"),n("br"),n("span",{class:"line-number"},"11"),n("br"),n("span",{class:"line-number"},"12"),n("br"),n("span",{class:"line-number"},"13"),n("br"),n("span",{class:"line-number"},"14"),n("br"),n("span",{class:"line-number"},"15"),n("br"),n("span",{class:"line-number"},"16"),n("br"),n("span",{class:"line-number"},"17"),n("br"),n("span",{class:"line-number"},"18"),n("br"),n("span",{class:"line-number"},"19"),n("br"),n("span",{class:"line-number"},"20"),n("br"),n("span",{class:"line-number"},"21"),n("br"),n("span",{class:"line-number"},"22"),n("br"),n("span",{class:"line-number"},"23"),n("br"),n("span",{class:"line-number"},"24"),n("br"),n("span",{class:"line-number"},"25"),n("br"),n("span",{class:"line-number"},"26"),n("br")])],-1),h=s("\u5176\u4ED6\u7684\u7B80\u5355\u6D4B\u8BD5\u793A\u4F8B\u4EE3\u7801 "),f={href:"https://github.com/curder/laravel-console-command-test-demo",target:"_blank",rel:"noopener noreferrer"},_=s("curder/laravel-console-command-test-demo"),v=s(" \u3002");function w(y,$){const p=e("CodeGroupItem"),o=e("CodeGroup"),c=e("ExternalLinkIcon");return l(),u(i,null,[m,a(o,null,{default:t(()=>[a(p,{title:"App\\Console\\Kernel.php"},{default:t(()=>[d]),_:1}),a(p,{title:"Tests\\Integrations\\Console\\KernelTest.php"},{default:t(()=>[g]),_:1})]),_:1}),n("p",null,[h,n("a",f,[_,a(c)]),v])],64)}var I=k(b,[["render",w]]);export{I as default};
