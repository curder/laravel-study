import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.16715cb7.js";const h=JSON.parse('{"title":"Migrations 迁移","description":"","frontmatter":{},"headers":[],"relativePath":"partials/migrations.md","filePath":"partials/migrations.md","lastUpdated":1700104777000}'),p={name:"partials/migrations.md"},o=l(`<h1 id="migrations-迁移" tabindex="-1">Migrations 迁移 <a class="header-anchor" href="#migrations-迁移" aria-label="Permalink to &quot;Migrations 迁移&quot;">​</a></h1><h2 id="创建迁移时使用空格" tabindex="-1">创建迁移时使用空格 <a class="header-anchor" href="#创建迁移时使用空格" aria-label="Permalink to &quot;创建迁移时使用空格&quot;">​</a></h2><p>当输入 <code>make:migration</code> 命令时，不一定必须在各部分之间使用下划线 <code>_</code> 符号，例如 <code>create_transactions_table</code>。</p><p>可以将名称放在引号中，然后使用空格而不是下划线。</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// 能正常工作</span></span>
<span class="line"><span style="color:#79B8FF;">php</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">artisan</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">make</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">migration</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">create_transactions_table</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#6A737D;">// 这样也能正常工作</span></span>
<span class="line"><span style="color:#79B8FF;">php</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">artisan</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">make</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">migration</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;create transactions table&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 能正常工作</span></span>
<span class="line"><span style="color:#005CC5;">php</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">artisan</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">make</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">migration</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">create_transactions_table</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6A737D;">// 这样也能正常工作</span></span>
<span class="line"><span style="color:#005CC5;">php</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">artisan</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">make</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">migration</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;create transactions table&quot;</span></span></code></pre></div><h2 id="迁移顺序" tabindex="-1">迁移顺序 <a class="header-anchor" href="#迁移顺序" aria-label="Permalink to &quot;迁移顺序&quot;">​</a></h2><p>使用命令 <code>php artisan make:migration create_posts_table --table=posts</code> 可以快速创建迁移文件，创建的迁移文件名有一个特点，就是以时间命名的。</p><p>如果想更改数据库迁移的顺序，只需重命名文件的时间戳。</p><p>例如从 <strong><code>2018_08_04_070443_create_posts_table.php</code></strong> 到 <strong><code>2018_07_04_070443_create_posts_table.php</code></strong>（从 <strong><code>2018_08_04</code></strong> 更改为 <strong><code>2018_07_04</code></strong>）</p><h2 id="指定列的创建顺序" tabindex="-1">指定列的创建顺序 <a class="header-anchor" href="#指定列的创建顺序" aria-label="Permalink to &quot;指定列的创建顺序&quot;">​</a></h2><blockquote><p>注意下下面的方法，<strong>仅支持 <code>MySQL</code></strong></p></blockquote><p>如果要向现有表添加新列，则它不一定必须成为列表中的最后一个。</p><h3 id="after" tabindex="-1"><code>after()</code> <a class="header-anchor" href="#after" aria-label="Permalink to &quot;\`after()\`&quot;">​</a></h3><p>可以指定应在哪一列之后创建它：</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">Schema</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">table</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;users&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">Blueprint</span><span style="color:#E1E4E8;"> $table) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    $table</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">string</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;phone&#39;</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">after</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;email&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">Schema</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">table</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;users&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">Blueprint</span><span style="color:#24292E;"> $table) {</span></span>
<span class="line"><span style="color:#24292E;">    $table</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">string</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;phone&#39;</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">after</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;email&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><p>也可以使用 <code>after()</code> 方法添加多个字段：</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">Schema</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">table</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;users&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">Blueprint</span><span style="color:#E1E4E8;"> $table) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    $table</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">after</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;remember_token&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> ($table) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        $table</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">string</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;card_brand&#39;</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">nullable</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">        $table</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">string</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;card_last_four&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">nullable</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    });</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">Schema</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">table</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;users&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">Blueprint</span><span style="color:#24292E;"> $table) {</span></span>
<span class="line"><span style="color:#24292E;">    $table</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">after</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;remember_token&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> ($table) {</span></span>
<span class="line"><span style="color:#24292E;">        $table</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">string</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;card_brand&#39;</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">nullable</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        $table</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">string</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;card_last_four&#39;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">nullable</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    });</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><h3 id="before" tabindex="-1"><code>before()</code> <a class="header-anchor" href="#before" aria-label="Permalink to &quot;\`before()\`&quot;">​</a></h3><p>如果要向现有表添加新列，则它不一定必须成为列表中的最后一个。</p><p>可以指定应在哪一列之前创建它：</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">Schema</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">table</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;users&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">Blueprint</span><span style="color:#E1E4E8;"> $table) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    $table</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">string</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;phone&#39;</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">before</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;created_at&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">Schema</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">table</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;users&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">Blueprint</span><span style="color:#24292E;"> $table) {</span></span>
<span class="line"><span style="color:#24292E;">    $table</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">string</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;phone&#39;</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">before</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;created_at&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><h3 id="first" tabindex="-1"><code>first()</code> <a class="header-anchor" href="#first" aria-label="Permalink to &quot;\`first()\`&quot;">​</a></h3><p>如果希望新增的列成为表中的第一列，可以使用 <code>first</code> 方法。</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">Schema</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">table</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;users&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">Blueprint</span><span style="color:#E1E4E8;"> $table) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    $table</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">string</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;uuid&#39;</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">first</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">Schema</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">table</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;users&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">Blueprint</span><span style="color:#24292E;"> $table) {</span></span>
<span class="line"><span style="color:#24292E;">    $table</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">string</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;uuid&#39;</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">first</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><h2 id="具有时区的迁移字段" tabindex="-1">具有时区的迁移字段 <a class="header-anchor" href="#具有时区的迁移字段" aria-label="Permalink to &quot;具有时区的迁移字段&quot;">​</a></h2><p>在迁移中不仅有 <code>timestamps()</code>，还有用于时区的 <code>timestampsTz()</code>。</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">Schema</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;employees&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">Blueprint</span><span style="color:#E1E4E8;"> $table) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    $table</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">increments</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;id&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    $table</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">string</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;name&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    $table</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">string</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;email&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    $table</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">timestampsTz</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">Schema</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">create</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;employees&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">Blueprint</span><span style="color:#24292E;"> $table) {</span></span>
<span class="line"><span style="color:#24292E;">    $table</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">increments</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;id&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    $table</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">string</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;name&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    $table</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">string</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;email&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    $table</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">timestampsTz</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><p>此外，还有 <code>dateTimeTz()</code>、<code>timeTz()</code>、<code>timestampTz()</code>、<code>softDeletesTz()</code> 列。</p><h2 id="默认时间戳" tabindex="-1">默认时间戳 <a class="header-anchor" href="#默认时间戳" aria-label="Permalink to &quot;默认时间戳&quot;">​</a></h2><p>创建迁移时，可以使用带有选项 <code>useCurrent()</code> 和 <code>useCurrentOnUpdate()</code> 的 <code>timestamp()</code> 列类型，它将把 <code>CURRENT_TIMESTAMP</code> 设置为默认值。</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">$table</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">timestamp</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;created_at&#39;</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">useCurrent</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">$table</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">timestamp</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;updated_at&#39;</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">useCurrentOnUpdate</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">$table</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">timestamp</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;created_at&#39;</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">useCurrent</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">$table</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">timestamp</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;updated_at&#39;</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">useCurrentOnUpdate</span><span style="color:#24292E;">();</span></span></code></pre></div><h2 id="更多数据库迁移列类型" tabindex="-1">更多数据库迁移列类型 <a class="header-anchor" href="#更多数据库迁移列类型" aria-label="Permalink to &quot;更多数据库迁移列类型&quot;">​</a></h2><p>有一些有趣的迁移列类型，以下是一些示例。</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">$table</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">uuid</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;id&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">$table</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">geometry</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;positions&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">$table</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">ipAddress</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;visitor&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">$table</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">macAddress</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;device&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">$table</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">point</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;position&#39;</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">$table</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">uuid</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;id&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">$table</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">geometry</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;positions&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">$table</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">ipAddress</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;visitor&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">$table</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">macAddress</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;device&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">$table</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">point</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;position&#39;</span><span style="color:#24292E;">);</span></span></code></pre></div><p>请参阅<a href="https://laravel.com/docs/master/migrations#available-column-types" target="_blank" rel="noreferrer">官方文档</a>中的所有列类型。</p><h2 id="迁移状态" tabindex="-1">迁移状态 <a class="header-anchor" href="#迁移状态" aria-label="Permalink to &quot;迁移状态&quot;">​</a></h2><p>如果想检查哪些迁移已执行或尚未执行，无需查看数据库 <code>migrations</code> 表，可以使用 <code>php artisan migrate:status</code> 命令。</p><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">Migration name .............................................. Batch / Status</span></span>
<span class="line"><span style="color:#e1e4e8;">2014_10_12_000000_create_users_table ............................... [1] Ran</span></span>
<span class="line"><span style="color:#e1e4e8;">2014_10_12_100000_create_password_reset_tokens_table ............... [1] Ran</span></span>
<span class="line"><span style="color:#e1e4e8;">2019_08_19_000000_create_failed_jobs_table ......................... [1] Ran</span></span>
<span class="line"><span style="color:#e1e4e8;">2019_12_14_000001_create_personal_access_tokens_table .............. [1] Ran</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">Migration name .............................................. Batch / Status</span></span>
<span class="line"><span style="color:#24292e;">2014_10_12_000000_create_users_table ............................... [1] Ran</span></span>
<span class="line"><span style="color:#24292e;">2014_10_12_100000_create_password_reset_tokens_table ............... [1] Ran</span></span>
<span class="line"><span style="color:#24292e;">2019_08_19_000000_create_failed_jobs_table ......................... [1] Ran</span></span>
<span class="line"><span style="color:#24292e;">2019_12_14_000001_create_personal_access_tokens_table .............. [1] Ran</span></span></code></pre></div><h2 id="对存在表进行迁移" tabindex="-1">对存在表进行迁移 <a class="header-anchor" href="#对存在表进行迁移" aria-label="Permalink to &quot;对存在表进行迁移&quot;">​</a></h2><p>如果对现有表进行迁移，并且希望生成 <code>Schema::table()</code>，请在末尾添加<code>_in_xxxxx_table</code> 或 <code>_to_xxxxx_table</code>，或指定 <code>--table</code>参数。</p><h3 id="空迁移文件" tabindex="-1">空迁移文件 <a class="header-anchor" href="#空迁移文件" aria-label="Permalink to &quot;空迁移文件&quot;">​</a></h3><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-xvhP3" id="tab-MIrfR05" checked="checked"><label for="tab-MIrfR05">迁移命令</label><input type="radio" name="group-xvhP3" id="tab-RWoaHaR"><label for="tab-RWoaHaR">命令生成的迁移文件</label></div><div class="blocks"><div class="language-bash vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">php</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">artisan</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">make:migration</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">change_fields_products_table</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># INFO  Migration [database/migrations/2023_11_16_025034_change_fields_products_table.php] created successfully.</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">php</span><span style="color:#24292E;"> </span><span style="color:#032F62;">artisan</span><span style="color:#24292E;"> </span><span style="color:#032F62;">make:migration</span><span style="color:#24292E;"> </span><span style="color:#032F62;">change_fields_products_table</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># INFO  Migration [database/migrations/2023_11_16_025034_change_fields_products_table.php] created successfully.</span></span></code></pre></div><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// database/migrations/2023_11_16_025034_change_fields_products_table.php</span></span>
<span class="line"><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">extends</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Migration</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;">     * Run the migrations.</span></span>
<span class="line"><span style="color:#6A737D;">     */</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">up</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">//</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;">     * Reverse the migrations.</span></span>
<span class="line"><span style="color:#6A737D;">     */</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">down</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">//</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// database/migrations/2023_11_16_025034_change_fields_products_table.php</span></span>
<span class="line"><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">extends</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Migration</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;">     * Run the migrations.</span></span>
<span class="line"><span style="color:#6A737D;">     */</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">up</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;">     * Reverse the migrations.</span></span>
<span class="line"><span style="color:#6A737D;">     */</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">down</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre></div></div></div><h3 id="指定表" tabindex="-1">指定表 <a class="header-anchor" href="#指定表" aria-label="Permalink to &quot;指定表&quot;">​</a></h3><ul><li><p>方式一：使用 <code>--table</code> 参数指定表则会生成预填充 <code>Schema::table(&#39;xxx&#39;, function() {})</code> 的类</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-6sT5x" id="tab-htSrp5z" checked="checked"><label for="tab-htSrp5z">迁移命令</label><input type="radio" name="group-6sT5x" id="tab-B-EOxzW"><label for="tab-B-EOxzW">执行命令后生成的迁移文件</label></div><div class="blocks"><div class="language-bash vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">php</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">artisan</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">make:migration</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">whatever_you_want</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--table=products</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># INFO  Migration [database/migrations/2023_11_16_025540_whatever_you_want.php] created successfully.</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">php</span><span style="color:#24292E;"> </span><span style="color:#032F62;">artisan</span><span style="color:#24292E;"> </span><span style="color:#032F62;">make:migration</span><span style="color:#24292E;"> </span><span style="color:#032F62;">whatever_you_want</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--table=products</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># INFO  Migration [database/migrations/2023_11_16_025540_whatever_you_want.php] created successfully.</span></span></code></pre></div><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// database/migrations/2023_11_16_025540_whatever_you_want.php</span></span>
<span class="line"><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">extends</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Migration</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;">    * Run the migrations.</span></span>
<span class="line"><span style="color:#6A737D;">    */</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">up</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">Schema</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">table</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;products&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">Blueprint</span><span style="color:#E1E4E8;"> $table) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">//</span></span>
<span class="line"><span style="color:#E1E4E8;">        });</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;">    * Reverse the migrations.</span></span>
<span class="line"><span style="color:#6A737D;">    */</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">down</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">Schema</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">table</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;products&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">Blueprint</span><span style="color:#E1E4E8;"> $table) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">//</span></span>
<span class="line"><span style="color:#E1E4E8;">        });</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// database/migrations/2023_11_16_025540_whatever_you_want.php</span></span>
<span class="line"><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">extends</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Migration</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;">    * Run the migrations.</span></span>
<span class="line"><span style="color:#6A737D;">    */</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">up</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">Schema</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">table</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;products&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">Blueprint</span><span style="color:#24292E;"> $table) {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">//</span></span>
<span class="line"><span style="color:#24292E;">        });</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;">    * Reverse the migrations.</span></span>
<span class="line"><span style="color:#6A737D;">    */</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">down</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">Schema</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">table</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;products&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">Blueprint</span><span style="color:#24292E;"> $table) {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">//</span></span>
<span class="line"><span style="color:#24292E;">        });</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre></div></div></div></li><li><p>方式二：添加 <code>in_xxxxx_table</code> 语句</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-QMADD" id="tab-BYujscv" checked="checked"><label for="tab-BYujscv">迁移命令</label><input type="radio" name="group-QMADD" id="tab-QJ1i7pM"><label for="tab-QJ1i7pM">执行命令后生成的迁移文件</label></div><div class="blocks"><div class="language-bash vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">php</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">artisan</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">make:migration</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">change_fields_in_products_table</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># INFO  Migration [database/migrations/2023_11_16_025304_change_fields_in_products_table.php] created successfully.</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">php</span><span style="color:#24292E;"> </span><span style="color:#032F62;">artisan</span><span style="color:#24292E;"> </span><span style="color:#032F62;">make:migration</span><span style="color:#24292E;"> </span><span style="color:#032F62;">change_fields_in_products_table</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># INFO  Migration [database/migrations/2023_11_16_025304_change_fields_in_products_table.php] created successfully.</span></span></code></pre></div><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// database/migrations/2023_11_16_025304_change_fields_in_products_table.php</span></span>
<span class="line"><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">extends</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Migration</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;">     * Run the migrations.</span></span>
<span class="line"><span style="color:#6A737D;">     */</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">up</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">Schema</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">table</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;products&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">Blueprint</span><span style="color:#E1E4E8;"> $table) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">//</span></span>
<span class="line"><span style="color:#E1E4E8;">        });</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;">     * Reverse the migrations.</span></span>
<span class="line"><span style="color:#6A737D;">     */</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">down</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">Schema</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">table</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;products&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">Blueprint</span><span style="color:#E1E4E8;"> $table) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">//</span></span>
<span class="line"><span style="color:#E1E4E8;">        });</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// database/migrations/2023_11_16_025304_change_fields_in_products_table.php</span></span>
<span class="line"><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">extends</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Migration</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;">     * Run the migrations.</span></span>
<span class="line"><span style="color:#6A737D;">     */</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">up</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">Schema</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">table</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;products&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">Blueprint</span><span style="color:#24292E;"> $table) {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">//</span></span>
<span class="line"><span style="color:#24292E;">        });</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;">     * Reverse the migrations.</span></span>
<span class="line"><span style="color:#6A737D;">     */</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">down</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">Schema</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">table</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;products&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">Blueprint</span><span style="color:#24292E;"> $table) {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">//</span></span>
<span class="line"><span style="color:#24292E;">        });</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre></div></div></div><h2 id="运行迁移之前输出-sql" tabindex="-1">运行迁移之前输出 SQL <a class="header-anchor" href="#运行迁移之前输出-sql" aria-label="Permalink to &quot;运行迁移之前输出 SQL&quot;">​</a></h2><p>当输入 <code>php artisan migrate --pretend</code> 命令时，在终端中会列出待执行的 SQL 查询。</p><p>如果需要的话，这是一种调试 SQL 的有趣方法。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">php artisan migrate --pretend</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;"># 2023_11_16_025540_whatever_you_want ....................................</span></span>
<span class="line"><span style="color:#e1e4e8;"># ⇂ alter table \`products\` add \`description\` varchar(255) null after \`name\`</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">php artisan migrate --pretend</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;"># 2023_11_16_025540_whatever_you_want ....................................</span></span>
<span class="line"><span style="color:#24292e;"># ⇂ alter table \`products\` add \`description\` varchar(255) null after \`name\`</span></span></code></pre></div><h2 id="添加列的描述" tabindex="-1">添加列的描述 <a class="header-anchor" href="#添加列的描述" aria-label="Permalink to &quot;添加列的描述&quot;">​</a></h2><p>可以在迁移中添加有关列的描述并提供有用的信息。</p><p>如果数据库由开发人员以外的其他人管理，可以在执行任何操作之前查看表结构中的注释。</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">$table</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">unsignedInteger</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;interval&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">index</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">comment</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;This column is used for indexing.&#39;</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">$table</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">unsignedInteger</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;interval&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">index</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">comment</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;This column is used for indexing.&#39;</span><span style="color:#24292E;">)</span></span></code></pre></div></li></ul><h2 id="检查表是否存在" tabindex="-1">检查表是否存在 <a class="header-anchor" href="#检查表是否存在" aria-label="Permalink to &quot;检查表是否存在&quot;">​</a></h2><p>使用 <code>hasTable</code> 方法检查表是否存在：</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">Schema</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">hasTable</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;users&#39;</span><span style="color:#E1E4E8;">)) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// users 表存在</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">Schema</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">hasTable</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;users&#39;</span><span style="color:#24292E;">)) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// users 表存在</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="检查列是否存在" tabindex="-1">检查列是否存在 <a class="header-anchor" href="#检查列是否存在" aria-label="Permalink to &quot;检查列是否存在&quot;">​</a></h2><p>使用 <code>hasColumn</code> 方法检查列是否存在：</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">Schema</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">hasColumn</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;users&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;email&#39;</span><span style="color:#E1E4E8;">)) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// users 表存在并且表包含 \`email\` 字段</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">Schema</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">hasColumn</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;users&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;email&#39;</span><span style="color:#24292E;">)) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// users 表存在并且表包含 \`email\` 字段</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="" tabindex="-1"><a class="header-anchor" href="#" aria-label="Permalink to &quot;&quot;">​</a></h2><p>从 Laravel 9.6.0 开始添加了 <code>whenTableDoesntHaveColumn</code> 方法，仅当该列不存在时，才可以在数据库表中添加该列；</p><p><code>whenTableHasColumn</code> 方法判断列存在，如果存在，则可以将其删除。</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">extends</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Migration</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">up</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 仅当该列不存在时，才可以在数据库表中添加该列</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">Schema</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">whenTableDoesntHaveColumn</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;users&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;name&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">Blueprint</span><span style="color:#E1E4E8;"> $table) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            $table</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">string</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;name&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">30</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">        });</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">down</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 判断列存在，如果存在，则可以将其删除。</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">Schema</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">whenTableHasColumn</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;users&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;name&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">Blueprint</span><span style="color:#E1E4E8;"> $table) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            $table</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">dropColumn</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;name&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">        });</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">extends</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Migration</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">up</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 仅当该列不存在时，才可以在数据库表中添加该列</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">Schema</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">whenTableDoesntHaveColumn</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;users&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;name&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">Blueprint</span><span style="color:#24292E;"> $table) {</span></span>
<span class="line"><span style="color:#24292E;">            $table</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">string</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;name&#39;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">30</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        });</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">down</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 判断列存在，如果存在，则可以将其删除。</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">Schema</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">whenTableHasColumn</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;users&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;name&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">Blueprint</span><span style="color:#24292E;"> $table) {</span></span>
<span class="line"><span style="color:#24292E;">            $table</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">dropColumn</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;name&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        });</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div>`,54),e=[o];function t(c,r,y,E,i,d){return a(),n("div",null,e)}const u=s(p,[["render",t]]);export{h as __pageData,u as default};
